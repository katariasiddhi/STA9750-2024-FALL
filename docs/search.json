[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "MiniProject #01 Analysis",
    "section": "",
    "text": "Mini Project #01\nFiscal Characterisitcs of Major US Public Transit Systems\nAuthor: Siddhi Kataria\n#Code:\nif(!require(“quarto”)){ install.packages(“quarto”) } library(quarto) if(!quarto::quarto_binary_sitrep()){ stop(“Something is wrong with your quarto installation.”) } quarto::quarto_render(“.”) system(“git add docs/*”) if(!any(grepl(“rstudio”, search()))){q(“no”)}\n\nLoad necessary libraries\nlibrary(tidyverse) library(readxl)\n\n\nSet the correct file path\nfile_path &lt;- “C:/Users/kisho/Downloads/ridership.xlsx.xlsx”\n\n\nCheck if the file exists at the specified path\nif (!file.exists(file_path)) { stop(paste(“Error: The file does not exist at the specified path:”, file_path)) }\n\n\nRead and process the ‘UPT’ sheet\nTRIPS &lt;- read_xlsx(file_path, sheet = “UPT”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to = “month”, values_to = “UPT”) |&gt; drop_na() |&gt; mutate(month = lubridate::my(month)) # Parse month-year date specs\n\n\nRead and process the ‘VRM’ sheet\nMILES &lt;- read_xlsx(file_path, sheet = “VRM”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to = “month”, values_to = “VRM”) |&gt; drop_na() |&gt; group_by(NTD ID, Agency, UZA Name, Mode, 3 Mode, month) |&gt; summarize(VRM = sum(VRM)) |&gt; ungroup() |&gt; mutate(month = lubridate::my(month)) # Parse month-year date specs\n\n\nCombine TRIPS and MILES data\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt; mutate(NTD ID = as.integer(NTD ID))\n\n\nDisplay the resulting data\nprint(USAGE)\nif(!require(“DT”)) install.packages(“DT”) library(DT)\nsample_n(USAGE, 1000) |&gt; mutate(month=as.character(month)) |&gt; DT::datatable()\n\n\nTask 1\nUSAGE &lt;- USAGE |&gt; rename(metro_area = UZA Name)\n\n\nTask 2\nunique_modes &lt;- USAGE |&gt; distinct(Mode) print(unique_modes)\nUSAGE &lt;- USAGE |&gt; mutate(Mode = case_when( Mode == “HR” ~ “Heavy Rail”, Mode == “LR” ~ “Light Rail”, Mode == “MB” ~ “Motor Bus”, Mode == “DR” ~ “Demand Response”, Mode == “CR” ~ “Commuter Rail”, Mode == “TB” ~ “Trolley Bus”, TRUE ~ “Unknown” ))\n\n\nTask 3: A.\nTransit Agency with Most Total VRM: most_total_vrm &lt;- USAGE |&gt; group_by(Agency) |&gt; summarize(total_VRM = sum(VRM, na.rm = TRUE)) |&gt; arrange(desc(total_VRM)) |&gt; slice(1) print(most_total_vrm)\n\n\nTask 3: B.\nTransit Mode with Most Total VRM: most_mode_vrm &lt;- USAGE |&gt; group_by(Mode) |&gt; summarize(total_VRM = sum(VRM, na.rm = TRUE)) |&gt; arrange(desc(total_VRM)) |&gt; slice(1) print(most_mode_vrm)\n\n\nTask 3: C.\nTrips Taken on the NYC Subway in May 2024: nyc_subway_trips &lt;- USAGE |&gt; filter(Mode == “Heavy Rail”, month == “2024-05-01”) |&gt; summarize(total_trips = sum(UPT, na.rm = TRUE)) print(nyc_subway_trips)\n\n\nTask 3: D.\nMode with Longest Average Trip in May 202 average_trip_length &lt;- USAGE |&gt; filter(month == “2024-05-01”) |&gt; group_by(Mode) |&gt; summarize( total_VRM = sum(VRM, na.rm = TRUE), # Total Vehicle Revenue Miles total_trips = sum(UPT, na.rm = TRUE), # Total trips average_trip_length = total_VRM / total_trips # Average trip length estimation ) |&gt; arrange(desc(average_trip_length)) |&gt; slice(1)\nprint(average_trip_length)\n\n\nTask 3: E.\nNYC Subway Ridership Fall Between April 2019 and April 2020 ridership_fall &lt;- USAGE |&gt; filter(Mode == “Heavy Rail”, month %in% c(“2019-04-01”, “2020-04-01”)) |&gt; group_by(month) |&gt; summarize(total_ridership = sum(UPT, na.rm = TRUE)) |&gt; mutate(difference = total_ridership[month == “2020-04-01”] - total_ridership[month == “2019-04-01”]) print(ridership_fall)\n\n\nTask 4: Interesting fact #1\ntotal_ridership &lt;- USAGE |&gt; group_by(Agency) |&gt; summarize(total_UPT = sum(UPT, na.rm = TRUE)) |&gt; arrange(desc(total_UPT)) |&gt; slice(1) print(total_ridership)\n\n\nTask 4: Interesting fact #2\naverage_VRM_by_mode &lt;- USAGE |&gt; group_by(Mode) |&gt; summarize(average_VRM = mean(VRM, na.rm = TRUE)) |&gt; arrange(desc(average_VRM)) |&gt; slice(1) print(average_VRM_by_mode)\n\n\nTask 4: Interesting fact #3\nactive_agencies_count &lt;- USAGE |&gt; filter(month == “2024-05-01”) |&gt; distinct(Agency) |&gt; count() print(active_agencies_count)\n\n\nTask 5:\nCreate Annual Totals for UPT and VRM for 2022 library(lubridate)\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt; filter(year(month) == 2022) |&gt; group_by(NTD ID, Agency, metro_area, Mode) |&gt; summarize( UPT = sum(UPT, na.rm = TRUE), VRM = sum(VRM, na.rm = TRUE) ) |&gt; ungroup()\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, FINANCIALS, join_by(NTD ID, Mode)) |&gt; drop_na()\n\n\nTask 6 I: Which transit system (agency and mode) had the most UPT in 2022?\nUSAGE_AND_FINANCIALS |&gt; arrange(desc(UPT)) |&gt; slice(1) |&gt; select(Agency, Mode, UPT)\n\n\nTask 6 II: Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nUSAGE_AND_FINANCIALS |&gt; mutate(farebox_recovery = Total Fares / Expenses) |&gt; arrange(desc(farebox_recovery)) |&gt; slice(1)\n\n\nTask 6 III:Which transit system (agency and mode) has the lowest expenses per UPT?\nUSAGE_AND_FINANCIALS |&gt; mutate(expenses_per_UPT = Expenses / UPT) |&gt; arrange(expenses_per_UPT) |&gt; slice(1)\n\n\nTask 6 IV: Which transit system (agency and mode) has the highest total fares per UPT?\nUSAGE_AND_FINANCIALS |&gt; mutate(fares_per_UPT = Total Fares / UPT) |&gt; arrange(desc(fares_per_UPT)) |&gt; slice(1)\n\n\nTask 6 V: Which transit system (agency and mode) has the lowest expenses per VRM?\nUSAGE_AND_FINANCIALS |&gt; mutate(expenses_per_VRM = Expenses / VRM) |&gt; arrange(expenses_per_VRM) |&gt; slice(1)\n\n\nTask 6 VI: Which transit system (agency and mode) has the highest total fares per VRM?\nUSAGE_AND_FINANCIALS |&gt; mutate(fares_per_VRM = Total Fares / VRM) |&gt; arrange(desc(fares_per_VRM)) |&gt; slice(1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 9650: Siddhi Kataria’s website",
    "section": "",
    "text": "I am a graduate student at Baruch College majoring in Business Analytics with a Data Analytics concentration."
  }
]
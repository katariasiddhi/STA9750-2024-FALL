[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "MiniProject #01 Analysis",
    "section": "",
    "text": "Mini Project #01\nFiscal Characterisitcs of Major US Public Transit Systems\nAuthor: Siddhi Kataria\n#Code:\nif(!require(“quarto”)){ install.packages(“quarto”) } library(quarto) if(!quarto::quarto_binary_sitrep()){ stop(“Something is wrong with your quarto installation.”) } quarto::quarto_render(“.”) system(“git add docs/*”) if(!any(grepl(“rstudio”, search()))){q(“no”)}\n\nLoad necessary libraries\nlibrary(tidyverse) library(readxl)\n\n\nSet the correct file path\nfile_path &lt;- “C:/Users/kisho/Downloads/ridership.xlsx.xlsx”\n\n\nCheck if the file exists at the specified path\nif (!file.exists(file_path)) { stop(paste(“Error: The file does not exist at the specified path:”, file_path)) }\n\n\nRead and process the ‘UPT’ sheet\nTRIPS &lt;- read_xlsx(file_path, sheet = “UPT”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to = “month”, values_to = “UPT”) |&gt; drop_na() |&gt; mutate(month = lubridate::my(month)) # Parse month-year date specs\n\n\nRead and process the ‘VRM’ sheet\nMILES &lt;- read_xlsx(file_path, sheet = “VRM”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to = “month”, values_to = “VRM”) |&gt; drop_na() |&gt; group_by(NTD ID, Agency, UZA Name, Mode, 3 Mode, month) |&gt; summarize(VRM = sum(VRM)) |&gt; ungroup() |&gt; mutate(month = lubridate::my(month)) # Parse month-year date specs\n\n\nCombine TRIPS and MILES data\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt; mutate(NTD ID = as.integer(NTD ID))\n\n\nDisplay the resulting data\nprint(USAGE)\nif(!require(“DT”)) install.packages(“DT”) library(DT)\nsample_n(USAGE, 1000) |&gt; mutate(month=as.character(month)) |&gt; DT::datatable()\n\n\nTask 1\nUSAGE &lt;- USAGE |&gt; rename(metro_area = UZA Name)\n\n\nTask 2\nunique_modes &lt;- USAGE |&gt; distinct(Mode) print(unique_modes)\nUSAGE &lt;- USAGE |&gt; mutate(Mode = case_when( Mode == “HR” ~ “Heavy Rail”, Mode == “LR” ~ “Light Rail”, Mode == “MB” ~ “Motor Bus”, Mode == “DR” ~ “Demand Response”, Mode == “CR” ~ “Commuter Rail”, Mode == “TB” ~ “Trolley Bus”, TRUE ~ “Unknown” ))\n\n\nTask 3: A.\nTransit Agency with Most Total VRM: most_total_vrm &lt;- USAGE |&gt; group_by(Agency) |&gt; summarize(total_VRM = sum(VRM, na.rm = TRUE)) |&gt; arrange(desc(total_VRM)) |&gt; slice(1) print(most_total_vrm)\n\n\nTask 3: B.\nTransit Mode with Most Total VRM: most_mode_vrm &lt;- USAGE |&gt; group_by(Mode) |&gt; summarize(total_VRM = sum(VRM, na.rm = TRUE)) |&gt; arrange(desc(total_VRM)) |&gt; slice(1) print(most_mode_vrm)\n\n\nTask 3: C.\nTrips Taken on the NYC Subway in May 2024: nyc_subway_trips &lt;- USAGE |&gt; filter(Mode == “Heavy Rail”, month == “2024-05-01”) |&gt; summarize(total_trips = sum(UPT, na.rm = TRUE)) print(nyc_subway_trips)\n\n\nTask 3: D.\nMode with Longest Average Trip in May 202 average_trip_length &lt;- USAGE |&gt; filter(month == “2024-05-01”) |&gt; group_by(Mode) |&gt; summarize( total_VRM = sum(VRM, na.rm = TRUE), # Total Vehicle Revenue Miles total_trips = sum(UPT, na.rm = TRUE), # Total trips average_trip_length = total_VRM / total_trips # Average trip length estimation ) |&gt; arrange(desc(average_trip_length)) |&gt; slice(1)\nprint(average_trip_length)\n\n\nTask 3: E.\nNYC Subway Ridership Fall Between April 2019 and April 2020 ridership_fall &lt;- USAGE |&gt; filter(Mode == “Heavy Rail”, month %in% c(“2019-04-01”, “2020-04-01”)) |&gt; group_by(month) |&gt; summarize(total_ridership = sum(UPT, na.rm = TRUE)) |&gt; mutate(difference = total_ridership[month == “2020-04-01”] - total_ridership[month == “2019-04-01”]) print(ridership_fall)\n\n\nTask 4: Interesting fact #1\ntotal_ridership &lt;- USAGE |&gt; group_by(Agency) |&gt; summarize(total_UPT = sum(UPT, na.rm = TRUE)) |&gt; arrange(desc(total_UPT)) |&gt; slice(1) print(total_ridership)\n\n\nTask 4: Interesting fact #2\naverage_VRM_by_mode &lt;- USAGE |&gt; group_by(Mode) |&gt; summarize(average_VRM = mean(VRM, na.rm = TRUE)) |&gt; arrange(desc(average_VRM)) |&gt; slice(1) print(average_VRM_by_mode)\n\n\nTask 4: Interesting fact #3\nactive_agencies_count &lt;- USAGE |&gt; filter(month == “2024-05-01”) |&gt; distinct(Agency) |&gt; count() print(active_agencies_count)\n\n\nTask 5:\nCreate Annual Totals for UPT and VRM for 2022 library(lubridate)\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt; filter(year(month) == 2022) |&gt; group_by(NTD ID, Agency, metro_area, Mode) |&gt; summarize( UPT = sum(UPT, na.rm = TRUE), VRM = sum(VRM, na.rm = TRUE) ) |&gt; ungroup()\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, FINANCIALS, join_by(NTD ID, Mode)) |&gt; drop_na()\n\n\nTask 6 I: Which transit system (agency and mode) had the most UPT in 2022?\nUSAGE_AND_FINANCIALS |&gt; arrange(desc(UPT)) |&gt; slice(1) |&gt; select(Agency, Mode, UPT)\n\n\nTask 6 II: Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nUSAGE_AND_FINANCIALS |&gt; mutate(farebox_recovery = Total Fares / Expenses) |&gt; arrange(desc(farebox_recovery)) |&gt; slice(1)\n\n\nTask 6 III:Which transit system (agency and mode) has the lowest expenses per UPT?\nUSAGE_AND_FINANCIALS |&gt; mutate(expenses_per_UPT = Expenses / UPT) |&gt; arrange(expenses_per_UPT) |&gt; slice(1)\n\n\nTask 6 IV: Which transit system (agency and mode) has the highest total fares per UPT?\nUSAGE_AND_FINANCIALS |&gt; mutate(fares_per_UPT = Total Fares / UPT) |&gt; arrange(desc(fares_per_UPT)) |&gt; slice(1)\n\n\nTask 6 V: Which transit system (agency and mode) has the lowest expenses per VRM?\nUSAGE_AND_FINANCIALS |&gt; mutate(expenses_per_VRM = Expenses / VRM) |&gt; arrange(expenses_per_VRM) |&gt; slice(1)\n\n\nTask 6 VI: Which transit system (agency and mode) has the highest total fares per VRM?\nUSAGE_AND_FINANCIALS |&gt; mutate(fares_per_VRM = Total Fares / VRM) |&gt; arrange(desc(fares_per_VRM)) |&gt; slice(1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 9650: Siddhi Kataria’s website",
    "section": "",
    "text": "I am a graduate student at Baruch College majoring in Business Analytics with a Data Analytics concentration."
  },
  {
    "objectID": "mp05.html",
    "href": "mp05.html",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "The objective of this project is to analyze and compare two retirement plans offered by CUNY using Monte Carlo simulations. By leveraging historical financial data, bootstrap resampling, and Monte Carlo techniques, we aim to assess the likelihood that one plan outperforms the other under various market conditions. This analysis will consider factors like historical market returns, inflation rates, and individual demographics to provide a data-driven recommendation for optimal retirement planning.\nThe analysis is implemented in R using RStudio, taking advantage of packages such as tidyverse, boot, and quantmod for data manipulation, statistical computation, and financial data acquisition. This comprehensive approach ensures robust and replicable results.\n\n\n\n\n\n#Accessing the keys\nalpha_key &lt;- Sys.getenv(\"ALPHAVANTAGE_KEY\")\nfred_key &lt;- Sys.getenv(\"FRED_KEY\")\n\n\n\n\n\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_DAILY_ADJUSTED\",\n  symbol = \"AAPL\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load necessary libraries\nlibrary(httr)\n\n\n\n\n\nlibrary(tibble)\nlibrary(tidyr)\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(dplyr) \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Example API request to fetch data\nresponse &lt;- GET(\"https://www.alphavantage.co/query\", query = list(\n  'function' = \"TIME_SERIES_DAILY\",\n  symbol = \"SP500\",\n  apikey = \"your_api_key\"\n))\n\n# Parse the content of the response\nsp500_data &lt;- content(response, \"parsed\")\n\n\nparams_sp500 &lt;- list(\n  `function` = \"TIME_SERIES_DAILY\",  # Use the free endpoint\n  symbol = \"SPY\",                   # Ticker symbol for SPDR S&P 500 ETF\n  apikey = alpha_key\n)\nresponse_sp500 &lt;- GET(alpha_url, query = params_sp500)\nsp500_data &lt;- content(response_sp500, as = \"parsed\", simplifyVector = TRUE)\n\n# Inspect response structure\nstr(sp500_data)\n\nList of 2\n $ Meta Data          :List of 5\n  ..$ 1. Information   : chr \"Daily Prices (open, high, low, close) and Volumes\"\n  ..$ 2. Symbol        : chr \"SPY\"\n  ..$ 3. Last Refreshed: chr \"2024-12-06\"\n  ..$ 4. Output Size   : chr \"Compact\"\n  ..$ 5. Time Zone     : chr \"US/Eastern\"\n $ Time Series (Daily):List of 100\n  ..$ 2024-12-06:List of 5\n  .. ..$ 1. open  : chr \"607.4400\"\n  .. ..$ 2. high  : chr \"609.0700\"\n  .. ..$ 3. low   : chr \"607.0200\"\n  .. ..$ 4. close : chr \"607.8100\"\n  .. ..$ 5. volume: chr \"31241549\"\n  ..$ 2024-12-05:List of 5\n  .. ..$ 1. open  : chr \"607.6600\"\n  .. ..$ 2. high  : chr \"608.4800\"\n  .. ..$ 3. low   : chr \"606.3050\"\n  .. ..$ 4. close : chr \"606.6600\"\n  .. ..$ 5. volume: chr \"28762183\"\n  ..$ 2024-12-04:List of 5\n  .. ..$ 1. open  : chr \"605.6300\"\n  .. ..$ 2. high  : chr \"607.9100\"\n  .. ..$ 3. low   : chr \"604.9500\"\n  .. ..$ 4. close : chr \"607.6600\"\n  .. ..$ 5. volume: chr \"42787561\"\n  ..$ 2024-12-03:List of 5\n  .. ..$ 1. open  : chr \"603.3900\"\n  .. ..$ 2. high  : chr \"604.1600\"\n  .. ..$ 3. low   : chr \"602.3410\"\n  .. ..$ 4. close : chr \"603.9100\"\n  .. ..$ 5. volume: chr \"26906629\"\n  ..$ 2024-12-02:List of 5\n  .. ..$ 1. open  : chr \"602.9700\"\n  .. ..$ 2. high  : chr \"604.3200\"\n  .. ..$ 3. low   : chr \"602.4700\"\n  .. ..$ 4. close : chr \"603.6300\"\n  .. ..$ 5. volume: chr \"31745989\"\n  ..$ 2024-11-29:List of 5\n  .. ..$ 1. open  : chr \"599.6600\"\n  .. ..$ 2. high  : chr \"603.3500\"\n  .. ..$ 3. low   : chr \"599.3800\"\n  .. ..$ 4. close : chr \"602.5500\"\n  .. ..$ 5. volume: chr \"30095740\"\n  ..$ 2024-11-27:List of 5\n  .. ..$ 1. open  : chr \"600.4600\"\n  .. ..$ 2. high  : chr \"600.8500\"\n  .. ..$ 3. low   : chr \"597.2800\"\n  .. ..$ 4. close : chr \"598.8300\"\n  .. ..$ 5. volume: chr \"34000163\"\n  ..$ 2024-11-26:List of 5\n  .. ..$ 1. open  : chr \"598.8000\"\n  .. ..$ 2. high  : chr \"601.3300\"\n  .. ..$ 3. low   : chr \"598.0700\"\n  .. ..$ 4. close : chr \"600.6500\"\n  .. ..$ 5. volume: chr \"45621288\"\n  ..$ 2024-11-25:List of 5\n  .. ..$ 1. open  : chr \"599.5200\"\n  .. ..$ 2. high  : chr \"600.8600\"\n  .. ..$ 3. low   : chr \"595.2000\"\n  .. ..$ 4. close : chr \"597.5300\"\n  .. ..$ 5. volume: chr \"42441393\"\n  ..$ 2024-11-22:List of 5\n  .. ..$ 1. open  : chr \"593.6600\"\n  .. ..$ 2. high  : chr \"596.1500\"\n  .. ..$ 3. low   : chr \"593.1525\"\n  .. ..$ 4. close : chr \"595.5100\"\n  .. ..$ 5. volume: chr \"38226390\"\n  ..$ 2024-11-21:List of 5\n  .. ..$ 1. open  : chr \"593.4000\"\n  .. ..$ 2. high  : chr \"595.1200\"\n  .. ..$ 3. low   : chr \"587.4500\"\n  .. ..$ 4. close : chr \"593.6700\"\n  .. ..$ 5. volume: chr \"46750285\"\n  ..$ 2024-11-20:List of 5\n  .. ..$ 1. open  : chr \"590.3800\"\n  .. ..$ 2. high  : chr \"590.7900\"\n  .. ..$ 3. low   : chr \"584.6300\"\n  .. ..$ 4. close : chr \"590.5000\"\n  .. ..$ 5. volume: chr \"50032576\"\n  ..$ 2024-11-19:List of 5\n  .. ..$ 1. open  : chr \"584.7100\"\n  .. ..$ 2. high  : chr \"591.0450\"\n  .. ..$ 3. low   : chr \"584.0300\"\n  .. ..$ 4. close : chr \"590.3000\"\n  .. ..$ 5. volume: chr \"49412046\"\n  ..$ 2024-11-18:List of 5\n  .. ..$ 1. open  : chr \"586.2200\"\n  .. ..$ 2. high  : chr \"589.4900\"\n  .. ..$ 3. low   : chr \"585.3400\"\n  .. ..$ 4. close : chr \"588.1500\"\n  .. ..$ 5. volume: chr \"37084081\"\n  ..$ 2024-11-15:List of 5\n  .. ..$ 1. open  : chr \"589.7200\"\n  .. ..$ 2. high  : chr \"590.2000\"\n  .. ..$ 3. low   : chr \"583.8600\"\n  .. ..$ 4. close : chr \"585.7500\"\n  .. ..$ 5. volume: chr \"75988766\"\n  ..$ 2024-11-14:List of 5\n  .. ..$ 1. open  : chr \"597.3200\"\n  .. ..$ 2. high  : chr \"597.8100\"\n  .. ..$ 3. low   : chr \"592.6500\"\n  .. ..$ 4. close : chr \"593.3500\"\n  .. ..$ 5. volume: chr \"38904109\"\n  ..$ 2024-11-13:List of 5\n  .. ..$ 1. open  : chr \"597.3700\"\n  .. ..$ 2. high  : chr \"599.2300\"\n  .. ..$ 3. low   : chr \"594.9600\"\n  .. ..$ 4. close : chr \"597.1900\"\n  .. ..$ 5. volume: chr \"47388640\"\n  ..$ 2024-11-12:List of 5\n  .. ..$ 1. open  : chr \"598.6800\"\n  .. ..$ 2. high  : chr \"599.2900\"\n  .. ..$ 3. low   : chr \"594.3700\"\n  .. ..$ 4. close : chr \"596.9000\"\n  .. ..$ 5. volume: chr \"43006128\"\n  ..$ 2024-11-11:List of 5\n  .. ..$ 1. open  : chr \"599.8100\"\n  .. ..$ 2. high  : chr \"600.1700\"\n  .. ..$ 3. low   : chr \"597.0000\"\n  .. ..$ 4. close : chr \"598.7600\"\n  .. ..$ 5. volume: chr \"37586773\"\n  ..$ 2024-11-08:List of 5\n  .. ..$ 1. open  : chr \"596.1700\"\n  .. ..$ 2. high  : chr \"599.6400\"\n  .. ..$ 3. low   : chr \"596.1650\"\n  .. ..$ 4. close : chr \"598.1900\"\n  .. ..$ 5. volume: chr \"46444893\"\n  ..$ 2024-11-07:List of 5\n  .. ..$ 1. open  : chr \"593.0800\"\n  .. ..$ 2. high  : chr \"596.6500\"\n  .. ..$ 3. low   : chr \"592.9999\"\n  .. ..$ 4. close : chr \"595.6100\"\n  .. ..$ 5. volume: chr \"47233212\"\n  ..$ 2024-11-06:List of 5\n  .. ..$ 1. open  : chr \"589.2000\"\n  .. ..$ 2. high  : chr \"591.9300\"\n  .. ..$ 3. low   : chr \"585.3900\"\n  .. ..$ 4. close : chr \"591.0400\"\n  .. ..$ 5. volume: chr \"68181968\"\n  ..$ 2024-11-05:List of 5\n  .. ..$ 1. open  : chr \"570.7400\"\n  .. ..$ 2. high  : chr \"576.7400\"\n  .. ..$ 3. low   : chr \"570.5200\"\n  .. ..$ 4. close : chr \"576.7000\"\n  .. ..$ 5. volume: chr \"39478322\"\n  ..$ 2024-11-04:List of 5\n  .. ..$ 1. open  : chr \"571.1800\"\n  .. ..$ 2. high  : chr \"572.5000\"\n  .. ..$ 3. low   : chr \"567.8900\"\n  .. ..$ 4. close : chr \"569.8100\"\n  .. ..$ 5. volume: chr \"38216975\"\n  ..$ 2024-11-01:List of 5\n  .. ..$ 1. open  : chr \"571.3200\"\n  .. ..$ 2. high  : chr \"575.5500\"\n  .. ..$ 3. low   : chr \"570.6200\"\n  .. ..$ 4. close : chr \"571.0400\"\n  .. ..$ 5. volume: chr \"45667533\"\n  ..$ 2024-10-31:List of 5\n  .. ..$ 1. open  : chr \"575.5600\"\n  .. ..$ 2. high  : chr \"575.6300\"\n  .. ..$ 3. low   : chr \"568.4400\"\n  .. ..$ 4. close : chr \"568.6400\"\n  .. ..$ 5. volume: chr \"60182451\"\n  ..$ 2024-10-30:List of 5\n  .. ..$ 1. open  : chr \"581.2900\"\n  .. ..$ 2. high  : chr \"583.3200\"\n  .. ..$ 3. low   : chr \"579.2900\"\n  .. ..$ 4. close : chr \"580.0100\"\n  .. ..$ 5. volume: chr \"41435839\"\n  ..$ 2024-10-29:List of 5\n  .. ..$ 1. open  : chr \"579.8500\"\n  .. ..$ 2. high  : chr \"582.9070\"\n  .. ..$ 3. low   : chr \"578.4300\"\n  .. ..$ 4. close : chr \"581.7700\"\n  .. ..$ 5. volume: chr \"42899661\"\n  ..$ 2024-10-28:List of 5\n  .. ..$ 1. open  : chr \"582.5800\"\n  .. ..$ 2. high  : chr \"582.7100\"\n  .. ..$ 3. low   : chr \"580.5200\"\n  .. ..$ 4. close : chr \"580.8300\"\n  .. ..$ 5. volume: chr \"30174704\"\n  ..$ 2024-10-25:List of 5\n  .. ..$ 1. open  : chr \"581.5100\"\n  .. ..$ 2. high  : chr \"584.4600\"\n  .. ..$ 3. low   : chr \"578.0800\"\n  .. ..$ 4. close : chr \"579.0400\"\n  .. ..$ 5. volume: chr \"47268176\"\n  ..$ 2024-10-24:List of 5\n  .. ..$ 1. open  : chr \"579.9800\"\n  .. ..$ 2. high  : chr \"580.0600\"\n  .. ..$ 3. low   : chr \"576.5700\"\n  .. ..$ 4. close : chr \"579.2400\"\n  .. ..$ 5. volume: chr \"34979860\"\n  ..$ 2024-10-23:List of 5\n  .. ..$ 1. open  : chr \"581.2600\"\n  .. ..$ 2. high  : chr \"581.7086\"\n  .. ..$ 3. low   : chr \"574.4150\"\n  .. ..$ 4. close : chr \"577.9900\"\n  .. ..$ 5. volume: chr \"49314574\"\n  ..$ 2024-10-22:List of 5\n  .. ..$ 1. open  : chr \"581.0500\"\n  .. ..$ 2. high  : chr \"584.5000\"\n  .. ..$ 3. low   : chr \"580.3800\"\n  .. ..$ 4. close : chr \"583.3200\"\n  .. ..$ 5. volume: chr \"34183835\"\n  ..$ 2024-10-21:List of 5\n  .. ..$ 1. open  : chr \"583.8500\"\n  .. ..$ 2. high  : chr \"584.8500\"\n  .. ..$ 3. low   : chr \"580.6001\"\n  .. ..$ 4. close : chr \"583.6300\"\n  .. ..$ 5. volume: chr \"36439010\"\n  ..$ 2024-10-18:List of 5\n  .. ..$ 1. open  : chr \"584.0700\"\n  .. ..$ 2. high  : chr \"585.3900\"\n  .. ..$ 3. low   : chr \"582.5800\"\n  .. ..$ 4. close : chr \"584.5900\"\n  .. ..$ 5. volume: chr \"37416801\"\n  ..$ 2024-10-17:List of 5\n  .. ..$ 1. open  : chr \"585.9100\"\n  .. ..$ 2. high  : chr \"586.1200\"\n  .. ..$ 3. low   : chr \"582.1600\"\n  .. ..$ 4. close : chr \"582.3500\"\n  .. ..$ 5. volume: chr \"34393714\"\n  ..$ 2024-10-16:List of 5\n  .. ..$ 1. open  : chr \"579.7800\"\n  .. ..$ 2. high  : chr \"582.8300\"\n  .. ..$ 3. low   : chr \"578.9600\"\n  .. ..$ 4. close : chr \"582.3000\"\n  .. ..$ 5. volume: chr \"30725436\"\n  ..$ 2024-10-15:List of 5\n  .. ..$ 1. open  : chr \"584.5900\"\n  .. ..$ 2. high  : chr \"584.9000\"\n  .. ..$ 3. low   : chr \"578.5450\"\n  .. ..$ 4. close : chr \"579.7800\"\n  .. ..$ 5. volume: chr \"54203636\"\n  ..$ 2024-10-14:List of 5\n  .. ..$ 1. open  : chr \"581.2200\"\n  .. ..$ 2. high  : chr \"585.2700\"\n  .. ..$ 3. low   : chr \"580.7300\"\n  .. ..$ 4. close : chr \"584.3200\"\n  .. ..$ 5. volume: chr \"36217215\"\n  ..$ 2024-10-11:List of 5\n  .. ..$ 1. open  : chr \"576.0500\"\n  .. ..$ 2. high  : chr \"580.3300\"\n  .. ..$ 3. low   : chr \"575.9100\"\n  .. ..$ 4. close : chr \"579.5800\"\n  .. ..$ 5. volume: chr \"42267994\"\n  ..$ 2024-10-10:List of 5\n  .. ..$ 1. open  : chr \"575.7700\"\n  .. ..$ 2. high  : chr \"577.5800\"\n  .. ..$ 3. low   : chr \"574.4900\"\n  .. ..$ 4. close : chr \"576.1300\"\n  .. ..$ 5. volume: chr \"44138060\"\n  ..$ 2024-10-09:List of 5\n  .. ..$ 1. open  : chr \"573.1600\"\n  .. ..$ 2. high  : chr \"577.7100\"\n  .. ..$ 3. low   : chr \"572.5500\"\n  .. ..$ 4. close : chr \"577.1400\"\n  .. ..$ 5. volume: chr \"37912244\"\n  ..$ 2024-10-08:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"573.7800\"\n  .. ..$ 3. low   : chr \"569.5299\"\n  .. ..$ 4. close : chr \"573.1700\"\n  .. ..$ 5. volume: chr \"37398693\"\n  ..$ 2024-10-07:List of 5\n  .. ..$ 1. open  : chr \"571.3000\"\n  .. ..$ 2. high  : chr \"571.9599\"\n  .. ..$ 3. low   : chr \"566.6300\"\n  .. ..$ 4. close : chr \"567.8000\"\n  .. ..$ 5. volume: chr \"49964690\"\n  ..$ 2024-10-04:List of 5\n  .. ..$ 1. open  : chr \"572.3500\"\n  .. ..$ 2. high  : chr \"573.3600\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"572.9800\"\n  .. ..$ 5. volume: chr \"43005186\"\n  ..$ 2024-10-03:List of 5\n  .. ..$ 1. open  : chr \"567.3600\"\n  .. ..$ 2. high  : chr \"569.8025\"\n  .. ..$ 3. low   : chr \"565.4900\"\n  .. ..$ 4. close : chr \"567.8200\"\n  .. ..$ 5. volume: chr \"40846466\"\n  ..$ 2024-10-02:List of 5\n  .. ..$ 1. open  : chr \"567.7100\"\n  .. ..$ 2. high  : chr \"569.9000\"\n  .. ..$ 3. low   : chr \"565.2700\"\n  .. ..$ 4. close : chr \"568.8600\"\n  .. ..$ 5. volume: chr \"38097798\"\n  ..$ 2024-10-01:List of 5\n  .. ..$ 1. open  : chr \"573.4000\"\n  .. ..$ 2. high  : chr \"574.0622\"\n  .. ..$ 3. low   : chr \"566.0000\"\n  .. ..$ 4. close : chr \"568.6200\"\n  .. ..$ 5. volume: chr \"72668778\"\n  ..$ 2024-09-30:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"574.3800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"573.7600\"\n  .. ..$ 5. volume: chr \"63655448\"\n  ..$ 2024-09-27:List of 5\n  .. ..$ 1. open  : chr \"573.3900\"\n  .. ..$ 2. high  : chr \"574.2200\"\n  .. ..$ 3. low   : chr \"570.4200\"\n  .. ..$ 4. close : chr \"571.4700\"\n  .. ..$ 5. volume: chr \"42100928\"\n  ..$ 2024-09-26:List of 5\n  .. ..$ 1. open  : chr \"574.3800\"\n  .. ..$ 2. high  : chr \"574.7100\"\n  .. ..$ 3. low   : chr \"569.9000\"\n  .. ..$ 4. close : chr \"572.3000\"\n  .. ..$ 5. volume: chr \"48336004\"\n  ..$ 2024-09-25:List of 5\n  .. ..$ 1. open  : chr \"571.1400\"\n  .. ..$ 2. high  : chr \"571.8900\"\n  .. ..$ 3. low   : chr \"568.9100\"\n  .. ..$ 4. close : chr \"570.0400\"\n  .. ..$ 5. volume: chr \"38428587\"\n  ..$ 2024-09-24:List of 5\n  .. ..$ 1. open  : chr \"570.4800\"\n  .. ..$ 2. high  : chr \"571.3600\"\n  .. ..$ 3. low   : chr \"567.6000\"\n  .. ..$ 4. close : chr \"571.3000\"\n  .. ..$ 5. volume: chr \"46805672\"\n  ..$ 2024-09-23:List of 5\n  .. ..$ 1. open  : chr \"569.3400\"\n  .. ..$ 2. high  : chr \"570.3325\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"569.6700\"\n  .. ..$ 5. volume: chr \"44116922\"\n  ..$ 2024-09-20:List of 5\n  .. ..$ 1. open  : chr \"567.8400\"\n  .. ..$ 2. high  : chr \"569.3100\"\n  .. ..$ 3. low   : chr \"565.1700\"\n  .. ..$ 4. close : chr \"568.2500\"\n  .. ..$ 5. volume: chr \"77503110\"\n  ..$ 2024-09-19:List of 5\n  .. ..$ 1. open  : chr \"571.0100\"\n  .. ..$ 2. high  : chr \"572.8800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"570.9800\"\n  .. ..$ 5. volume: chr \"75315470\"\n  ..$ 2024-09-18:List of 5\n  .. ..$ 1. open  : chr \"563.7400\"\n  .. ..$ 2. high  : chr \"568.6900\"\n  .. ..$ 3. low   : chr \"560.8300\"\n  .. ..$ 4. close : chr \"561.4000\"\n  .. ..$ 5. volume: chr \"59044937\"\n  ..$ 2024-09-17:List of 5\n  .. ..$ 1. open  : chr \"565.1000\"\n  .. ..$ 2. high  : chr \"566.5800\"\n  .. ..$ 3. low   : chr \"560.7950\"\n  .. ..$ 4. close : chr \"563.0700\"\n  .. ..$ 5. volume: chr \"49320970\"\n  ..$ 2024-09-16:List of 5\n  .. ..$ 1. open  : chr \"561.7400\"\n  .. ..$ 2. high  : chr \"563.1100\"\n  .. ..$ 3. low   : chr \"559.9000\"\n  .. ..$ 4. close : chr \"562.8400\"\n  .. ..$ 5. volume: chr \"36656122\"\n  ..$ 2024-09-13:List of 5\n  .. ..$ 1. open  : chr \"559.7100\"\n  .. ..$ 2. high  : chr \"563.0300\"\n  .. ..$ 3. low   : chr \"559.4500\"\n  .. ..$ 4. close : chr \"562.0100\"\n  .. ..$ 5. volume: chr \"39310501\"\n  ..$ 2024-09-12:List of 5\n  .. ..$ 1. open  : chr \"555.0100\"\n  .. ..$ 2. high  : chr \"559.4000\"\n  .. ..$ 3. low   : chr \"552.7400\"\n  .. ..$ 4. close : chr \"559.0900\"\n  .. ..$ 5. volume: chr \"51892735\"\n  ..$ 2024-09-11:List of 5\n  .. ..$ 1. open  : chr \"548.7000\"\n  .. ..$ 2. high  : chr \"555.3600\"\n  .. ..$ 3. low   : chr \"539.9600\"\n  .. ..$ 4. close : chr \"554.4200\"\n  .. ..$ 5. volume: chr \"75248608\"\n  ..$ 2024-09-10:List of 5\n  .. ..$ 1. open  : chr \"548.3600\"\n  .. ..$ 2. high  : chr \"549.1500\"\n  .. ..$ 3. low   : chr \"543.3800\"\n  .. ..$ 4. close : chr \"548.7900\"\n  .. ..$ 5. volume: chr \"36394579\"\n  ..$ 2024-09-09:List of 5\n  .. ..$ 1. open  : chr \"544.6500\"\n  .. ..$ 2. high  : chr \"547.7100\"\n  .. ..$ 3. low   : chr \"542.6800\"\n  .. ..$ 4. close : chr \"546.4100\"\n  .. ..$ 5. volume: chr \"40445822\"\n  ..$ 2024-09-06:List of 5\n  .. ..$ 1. open  : chr \"549.9400\"\n  .. ..$ 2. high  : chr \"551.6000\"\n  .. ..$ 3. low   : chr \"539.4400\"\n  .. ..$ 4. close : chr \"540.3600\"\n  .. ..$ 5. volume: chr \"68493805\"\n  ..$ 2024-09-05:List of 5\n  .. ..$ 1. open  : chr \"550.8900\"\n  .. ..$ 2. high  : chr \"553.7995\"\n  .. ..$ 3. low   : chr \"547.1000\"\n  .. ..$ 4. close : chr \"549.6100\"\n  .. ..$ 5. volume: chr \"44264258\"\n  ..$ 2024-09-04:List of 5\n  .. ..$ 1. open  : chr \"550.2000\"\n  .. ..$ 2. high  : chr \"554.4300\"\n  .. ..$ 3. low   : chr \"549.4600\"\n  .. ..$ 4. close : chr \"550.9500\"\n  .. ..$ 5. volume: chr \"46232483\"\n  ..$ 2024-09-03:List of 5\n  .. ..$ 1. open  : chr \"560.4700\"\n  .. ..$ 2. high  : chr \"560.8100\"\n  .. ..$ 3. low   : chr \"549.5100\"\n  .. ..$ 4. close : chr \"552.0800\"\n  .. ..$ 5. volume: chr \"60600113\"\n  ..$ 2024-08-30:List of 5\n  .. ..$ 1. open  : chr \"560.7700\"\n  .. ..$ 2. high  : chr \"564.2000\"\n  .. ..$ 3. low   : chr \"557.1400\"\n  .. ..$ 4. close : chr \"563.6800\"\n  .. ..$ 5. volume: chr \"62700110\"\n  ..$ 2024-08-29:List of 5\n  .. ..$ 1. open  : chr \"560.3100\"\n  .. ..$ 2. high  : chr \"563.6800\"\n  .. ..$ 3. low   : chr \"557.1800\"\n  .. ..$ 4. close : chr \"558.3500\"\n  .. ..$ 5. volume: chr \"38715176\"\n  ..$ 2024-08-28:List of 5\n  .. ..$ 1. open  : chr \"561.2100\"\n  .. ..$ 2. high  : chr \"561.6500\"\n  .. ..$ 3. low   : chr \"555.0400\"\n  .. ..$ 4. close : chr \"558.3000\"\n  .. ..$ 5. volume: chr \"41066024\"\n  ..$ 2024-08-27:List of 5\n  .. ..$ 1. open  : chr \"559.4900\"\n  .. ..$ 2. high  : chr \"562.0600\"\n  .. ..$ 3. low   : chr \"558.3200\"\n  .. ..$ 4. close : chr \"561.5600\"\n  .. ..$ 5. volume: chr \"32693898\"\n  ..$ 2024-08-26:List of 5\n  .. ..$ 1. open  : chr \"563.1800\"\n  .. ..$ 2. high  : chr \"563.9100\"\n  .. ..$ 3. low   : chr \"559.0500\"\n  .. ..$ 4. close : chr \"560.7900\"\n  .. ..$ 5. volume: chr \"35788609\"\n  ..$ 2024-08-23:List of 5\n  .. ..$ 1. open  : chr \"559.5300\"\n  .. ..$ 2. high  : chr \"563.0900\"\n  .. ..$ 3. low   : chr \"557.2900\"\n  .. ..$ 4. close : chr \"562.1300\"\n  .. ..$ 5. volume: chr \"50639393\"\n  ..$ 2024-08-22:List of 5\n  .. ..$ 1. open  : chr \"562.5600\"\n  .. ..$ 2. high  : chr \"563.1800\"\n  .. ..$ 3. low   : chr \"554.9800\"\n  .. ..$ 4. close : chr \"556.2200\"\n  .. ..$ 5. volume: chr \"56121456\"\n  ..$ 2024-08-21:List of 5\n  .. ..$ 1. open  : chr \"559.7700\"\n  .. ..$ 2. high  : chr \"562.1100\"\n  .. ..$ 3. low   : chr \"554.7300\"\n  .. ..$ 4. close : chr \"560.6200\"\n  .. ..$ 5. volume: chr \"41514600\"\n  ..$ 2024-08-20:List of 5\n  .. ..$ 1. open  : chr \"559.1500\"\n  .. ..$ 2. high  : chr \"560.8400\"\n  .. ..$ 3. low   : chr \"557.3250\"\n  .. ..$ 4. close : chr \"558.7000\"\n  .. ..$ 5. volume: chr \"33732264\"\n  ..$ 2024-08-19:List of 5\n  .. ..$ 1. open  : chr \"554.7300\"\n  .. ..$ 2. high  : chr \"559.6100\"\n  .. ..$ 3. low   : chr \"553.8600\"\n  .. ..$ 4. close : chr \"559.6100\"\n  .. ..$ 5. volume: chr \"39121793\"\n  ..$ 2024-08-16:List of 5\n  .. ..$ 1. open  : chr \"551.4200\"\n  .. ..$ 2. high  : chr \"555.0200\"\n  .. ..$ 3. low   : chr \"551.2600\"\n  .. ..$ 4. close : chr \"554.3100\"\n  .. ..$ 5. volume: chr \"44430728\"\n  ..$ 2024-08-15:List of 5\n  .. ..$ 1. open  : chr \"549.5000\"\n  .. ..$ 2. high  : chr \"553.3600\"\n  .. ..$ 3. low   : chr \"548.8800\"\n  .. ..$ 4. close : chr \"553.0700\"\n  .. ..$ 5. volume: chr \"60846812\"\n  ..$ 2024-08-14:List of 5\n  .. ..$ 1. open  : chr \"542.8500\"\n  .. ..$ 2. high  : chr \"544.9600\"\n  .. ..$ 3. low   : chr \"540.1200\"\n  .. ..$ 4. close : chr \"543.7500\"\n  .. ..$ 5. volume: chr \"42446929\"\n  ..$ 2024-08-13:List of 5\n  .. ..$ 1. open  : chr \"536.5300\"\n  .. ..$ 2. high  : chr \"542.2800\"\n  .. ..$ 3. low   : chr \"536.2800\"\n  .. ..$ 4. close : chr \"542.0400\"\n  .. ..$ 5. volume: chr \"52333073\"\n  ..$ 2024-08-12:List of 5\n  .. ..$ 1. open  : chr \"534.2100\"\n  .. ..$ 2. high  : chr \"535.7300\"\n  .. ..$ 3. low   : chr \"530.9500\"\n  .. ..$ 4. close : chr \"533.2700\"\n  .. ..$ 5. volume: chr \"42542069\"\n  ..$ 2024-08-09:List of 5\n  .. ..$ 1. open  : chr \"529.8100\"\n  .. ..$ 2. high  : chr \"534.5100\"\n  .. ..$ 3. low   : chr \"528.5600\"\n  .. ..$ 4. close : chr \"532.9900\"\n  .. ..$ 5. volume: chr \"45619558\"\n  ..$ 2024-08-08:List of 5\n  .. ..$ 1. open  : chr \"523.9100\"\n  .. ..$ 2. high  : chr \"531.2900\"\n  .. ..$ 3. low   : chr \"521.8400\"\n  .. ..$ 4. close : chr \"530.6500\"\n  .. ..$ 5. volume: chr \"63276589\"\n  ..$ 2024-08-07:List of 5\n  .. ..$ 1. open  : chr \"528.4700\"\n  .. ..$ 2. high  : chr \"531.5900\"\n  .. ..$ 3. low   : chr \"518.0519\"\n  .. ..$ 4. close : chr \"518.6600\"\n  .. ..$ 5. volume: chr \"70698340\"\n  ..$ 2024-08-06:List of 5\n  .. ..$ 1. open  : chr \"519.2200\"\n  .. ..$ 2. high  : chr \"529.7500\"\n  .. ..$ 3. low   : chr \"517.8700\"\n  .. ..$ 4. close : chr \"522.1500\"\n  .. ..$ 5. volume: chr \"84826312\"\n  ..$ 2024-08-05:List of 5\n  .. ..$ 1. open  : chr \"511.6400\"\n  .. ..$ 2. high  : chr \"523.5800\"\n  .. ..$ 3. low   : chr \"510.2700\"\n  .. ..$ 4. close : chr \"517.3800\"\n  .. ..$ 5. volume: chr \"146267391\"\n  ..$ 2024-08-02:List of 5\n  .. ..$ 1. open  : chr \"535.7500\"\n  .. ..$ 2. high  : chr \"536.9900\"\n  .. ..$ 3. low   : chr \"528.6000\"\n  .. ..$ 4. close : chr \"532.9000\"\n  .. ..$ 5. volume: chr \"82789070\"\n  ..$ 2024-08-01:List of 5\n  .. ..$ 1. open  : chr \"552.5700\"\n  .. ..$ 2. high  : chr \"554.8688\"\n  .. ..$ 3. low   : chr \"539.4300\"\n  .. ..$ 4. close : chr \"543.0100\"\n  .. ..$ 5. volume: chr \"76428732\"\n  ..$ 2024-07-31:List of 5\n  .. ..$ 1. open  : chr \"548.9800\"\n  .. ..$ 2. high  : chr \"553.5000\"\n  .. ..$ 3. low   : chr \"547.5799\"\n  .. ..$ 4. close : chr \"550.8100\"\n  .. ..$ 5. volume: chr \"65663388\"\n  ..$ 2024-07-30:List of 5\n  .. ..$ 1. open  : chr \"546.2600\"\n  .. ..$ 2. high  : chr \"547.3400\"\n  .. ..$ 3. low   : chr \"538.5150\"\n  .. ..$ 4. close : chr \"542.0000\"\n  .. ..$ 5. volume: chr \"46853632\"\n  ..$ 2024-07-29:List of 5\n  .. ..$ 1. open  : chr \"546.0200\"\n  .. ..$ 2. high  : chr \"547.0500\"\n  .. ..$ 3. low   : chr \"542.7200\"\n  .. ..$ 4. close : chr \"544.7600\"\n  .. ..$ 5. volume: chr \"39515824\"\n  ..$ 2024-07-26:List of 5\n  .. ..$ 1. open  : chr \"542.2800\"\n  .. ..$ 2. high  : chr \"547.1900\"\n  .. ..$ 3. low   : chr \"541.4900\"\n  .. ..$ 4. close : chr \"544.4400\"\n  .. ..$ 5. volume: chr \"53763788\"\n  ..$ 2024-07-25:List of 5\n  .. ..$ 1. open  : chr \"541.3500\"\n  .. ..$ 2. high  : chr \"547.4550\"\n  .. ..$ 3. low   : chr \"537.4500\"\n  .. ..$ 4. close : chr \"538.4100\"\n  .. ..$ 5. volume: chr \"61158288\"\n  ..$ 2024-07-24:List of 5\n  .. ..$ 1. open  : chr \"548.8600\"\n  .. ..$ 2. high  : chr \"549.1700\"\n  .. ..$ 3. low   : chr \"540.2900\"\n  .. ..$ 4. close : chr \"541.2300\"\n  .. ..$ 5. volume: chr \"74515266\"\n  ..$ 2024-07-23:List of 5\n  .. ..$ 1. open  : chr \"554.5400\"\n  .. ..$ 2. high  : chr \"556.7350\"\n  .. ..$ 3. low   : chr \"553.2750\"\n  .. ..$ 4. close : chr \"553.7800\"\n  .. ..$ 5. volume: chr \"34439561\"\n  ..$ 2024-07-22:List of 5\n  .. ..$ 1. open  : chr \"553.0000\"\n  .. ..$ 2. high  : chr \"555.2700\"\n  .. ..$ 3. low   : chr \"551.0200\"\n  .. ..$ 4. close : chr \"554.6500\"\n  .. ..$ 5. volume: chr \"43346720\"\n  ..$ 2024-07-19:List of 5\n  .. ..$ 1. open  : chr \"552.4200\"\n  .. ..$ 2. high  : chr \"554.0800\"\n  .. ..$ 3. low   : chr \"547.9100\"\n  .. ..$ 4. close : chr \"548.9900\"\n  .. ..$ 5. volume: chr \"65509081\"\n  .. [list output truncated]\n\n\n\nlibrary(httr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.2\n✔ ggplot2   3.5.1     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Extract and parse the \"Time Series (Daily)\" data\nsp500_data_clean &lt;- sp500_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;% # Convert list to tibble\n  unnest_wider(Metrics) %&gt;% # Flatten the nested list in \"Metrics\"\n  mutate(\n    Date = as.Date(Date), # Convert date to Date format\n    `1. open` = as.numeric(`1. open`),\n    `2. high` = as.numeric(`2. high`),\n    `3. low` = as.numeric(`3. low`),\n    `4. close` = as.numeric(`4. close`),\n    `5. volume` = as.numeric(`5. volume`)\n  )\n\n# Inspect the cleaned data\nhead(sp500_data_clean)\n\n# A tibble: 6 × 6\n  Date       `1. open` `2. high` `3. low` `4. close` `5. volume`\n  &lt;date&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 2024-12-06      607.      609.     607.       608.    31241549\n2 2024-12-05      608.      608.     606.       607.    28762183\n3 2024-12-04      606.      608.     605.       608.    42787561\n4 2024-12-03      603.      604.     602.       604.    26906629\n5 2024-12-02      603.      604.     602.       604.    31745989\n6 2024-11-29      600.      603.     599.       603.    30095740\n\n\n\n\n\n\nfred_url &lt;- paste0(\"https://api.stlouisfed.org/fred/series/observations\")\nfred_params &lt;- list(\n  series_id = \"GDP\",\n  api_key = fred_key,\n  file_type = \"json\"\n)\nfred_response &lt;- GET(fred_url, query = fred_params)\nfred_data &lt;- content(fred_response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load required libraries\nlibrary(tidyverse)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Limit to most recent 1 year (365 days) to reduce data points\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  filter(Date &gt;= as.Date(max(Date)) - 365)\n\n# Precompute and downsample moving averages to reduce computation\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  mutate(\n    ma_30 = zoo::rollapply(`4. close`, width = 30, FUN = mean, fill = NA, align = \"right\"),\n    ma_90 = zoo::rollapply(`4. close`, width = 90, FUN = mean, fill = NA, align = \"right\")\n  ) %&gt;%\n  # Downsample data (keep every 5th row for faster plotting)\n  slice(seq(1, n(), by = 5))\n\n# Plot Closing Prices with Moving Averages\nggplot(sp500_data_clean, aes(x = Date)) +\n  geom_line(aes(y = `4. close`, color = \"Closing Price\"), size = 0.5) +\n  geom_line(aes(y = ma_30, color = \"30-Day Moving Avg\"), size = 0.5) +\n  geom_line(aes(y = ma_90, color = \"90-Day Moving Avg\"), size = 0.5) +\n  labs(\n    title = \"S&P 500 Closing Prices with Moving Averages\",\n    x = \"Date\",\n    y = \"Price ($)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n# Parse FRED Data\ngdp_data &lt;- fred_data[[\"observations\"]] %&gt;%\n  tibble::as_tibble() %&gt;%\n  mutate(\n    date = as.Date(date),             # Convert 'date' column to Date format\n    value = value         # Convert 'value' column to numeric (invalid values become NA)\n  )\n\n\n\n\n\n\nggplot(sp500_data_clean, aes(x = Date, y = `4. close`)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Closing Prices\",\n    x = \"Date\",\n    y = \"Closing Price ($)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nstr(fred_data)\n\nList of 13\n $ realtime_start   : chr \"2024-11-27\"\n $ realtime_end     : chr \"2024-11-27\"\n $ observation_start: chr \"1600-01-01\"\n $ observation_end  : chr \"9999-12-31\"\n $ units            : chr \"lin\"\n $ output_type      : int 1\n $ file_type        : chr \"json\"\n $ order_by         : chr \"observation_date\"\n $ sort_order       : chr \"asc\"\n $ count            : int 315\n $ offset           : int 0\n $ limit            : int 100000\n $ observations     :'data.frame':  315 obs. of  4 variables:\n  ..$ realtime_start: chr [1:315] \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" ...\n  ..$ realtime_end  : chr [1:315] \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" ...\n  ..$ date          : chr [1:315] \"1946-01-01\" \"1946-04-01\" \"1946-07-01\" \"1946-10-01\" ...\n  ..$ value         : chr [1:315] \".\" \".\" \".\" \".\" ...\n\n\n\nlibrary(tidyverse)\n\n# Extract and clean the observations\ngdp_data_clean &lt;- fred_data$observations %&gt;%\n  mutate(\n    date = as.Date(date),           # Convert date to Date format\n    value = as.numeric(value)       # Convert value to numeric, invalid entries become NA\n  ) %&gt;%\n  filter(!is.na(value))             # Remove rows with NA in the value column\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Inspect the cleaned data\nhead(gdp_data_clean)\n\n  realtime_start realtime_end       date   value\n1     2024-11-27   2024-11-27 1947-01-01 243.164\n2     2024-11-27   2024-11-27 1947-04-01 245.968\n3     2024-11-27   2024-11-27 1947-07-01 249.585\n4     2024-11-27   2024-11-27 1947-10-01 259.745\n5     2024-11-27   2024-11-27 1948-01-01 265.742\n6     2024-11-27   2024-11-27 1948-04-01 272.567\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  labs(\n    title = \"GDP Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  geom_smooth(method = \"loess\", color = \"blue\", se = FALSE) +\n  labs(\n    title = \"GDP Trend Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\ngdp_yoy &lt;- gdp_data_clean %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;% # Extract year from date\n  group_by(year) %&gt;%\n  summarize(avg_gdp = mean(value, na.rm = TRUE)) %&gt;%\n  mutate(\n    yoy_growth = (avg_gdp - lag(avg_gdp)) / lag(avg_gdp) * 100 # YoY growth\n  )\n\n# Inspect the YoY Growth Data\nhead(gdp_yoy)\n\n# A tibble: 6 × 3\n   year avg_gdp yoy_growth\n  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1  1947    250.     NA    \n2  1948    274.      9.96 \n3  1949    272.     -0.726\n4  1950    300.     10.0  \n5  1951    347.     15.7  \n6  1952    367.      5.89 \n\n\n\nggplot(gdp_yoy, aes(x = year, y = yoy_growth)) +\n  geom_col(fill = \"purple\") +\n  labs(\n    title = \"Year-over-Year GDP Growth\",\n    x = \"Year\",\n    y = \"YoY Growth (%)\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nwage_data &lt;- data.frame(\n  date = c(\"2001-01-01\", \"2001-04-01\", \"2001-07-01\", \"2001-10-01\", \"2002-01-01\", \"2002-04-01\"),\n  value = c(\"87.6\", \"88.4\", \"89.2\", \"90.0\", \"90.7\", \"91.6\")\n)\n\n\n# Process wage growth data\nlibrary(dplyr)\nlibrary(tidyr)\n\nwage_df &lt;- wage_data %&gt;%\n  select(date, value) %&gt;%  # Select only the relevant columns\n  mutate(\n    value = ifelse(value == \".\", NA, as.numeric(value)),  # Replace \".\" with NA and convert to numeric\n    date = as.Date(date)  # Ensure date is in Date format\n  ) %&gt;%\n  drop_na(value)  # Remove rows where value is NA\n\n# Print the first few rows to confirm\nhead(wage_df)\n\n        date value\n1 2001-01-01  87.6\n2 2001-04-01  88.4\n3 2001-07-01  89.2\n4 2001-10-01  90.0\n5 2002-01-01  90.7\n6 2002-04-01  91.6\n\n# Interpolate data to monthly frequency if needed\nwage_df_monthly &lt;- wage_df %&gt;%\n  complete(date = seq.Date(min(date), max(date), by = \"month\")) %&gt;%  # Fill missing months\n  fill(value, .direction = \"down\")  # Fill missing values by carrying forward\n\n\nlibrary(ggplot2)\n\n# Plot the wage growth data\nggplot(wage_df_monthly, aes(x = date, y = value)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"Wage Growth Over Time\",\n    x = \"Date\",\n    y = \"Wage Index Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Example for fetching S&P 500 monthly adjusted close prices\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_MONTHLY_ADJUSTED\",\n  symbol = \"SPY\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\n\n# Parse the content\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n# Extract and process data\nlibrary(dplyr)\nmonthly_data &lt;- alpha_data[[\"Monthly Adjusted Time Series\"]]\nus_equity_df &lt;- data.frame(\n  date = as.Date(names(monthly_data)),\n  adjusted_close = as.numeric(sapply(monthly_data, function(x) x[[\"5. adjusted close\"]]))\n)\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close\n1 2024-12-06       607.8100\n2 2024-11-29       602.5500\n3 2024-10-31       568.6400\n4 2024-09-30       573.7600\n5 2024-08-30       561.9538\n6 2024-07-31       549.1232\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the S&P 500 adjusted close prices\nggplot(us_equity_df, aes(x = date, y = adjusted_close)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Adjusted Close Prices\",\n    x = \"Date\",\n    y = \"Adjusted Close Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  arrange(date) %&gt;%  # Ensure data is sorted by date\n  mutate(\n    monthly_return = adjusted_close / lag(adjusted_close) - 1  # Calculate monthly returns\n  )\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 1999-12-31        93.8436             NA\n2 2000-01-31        89.1714    -0.04978709\n3 2000-02-29        87.8136    -0.01522686\n4 2000-03-31        96.3223     0.09689501\n5 2000-04-28        92.9394    -0.03512063\n6 2000-05-31        91.4782    -0.01572207\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  drop_na(monthly_return)  # Remove rows with NA in the 'monthly_return' column\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 2000-01-31        89.1714    -0.04978709\n2 2000-02-29        87.8136    -0.01522686\n3 2000-03-31        96.3223     0.09689501\n4 2000-04-28        92.9394    -0.03512063\n5 2000-05-31        91.4782    -0.01572207\n6 2000-06-30        93.2807     0.01970415\n\n\nVisualize Monthly Returns\n\n# Plot monthly returns over time\nggplot(us_equity_df, aes(x = date, y = monthly_return)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Returns\",\n    x = \"Date\",\n    y = \"Monthly Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nStatistical Summary of Returns\n\n# Summary statistics for monthly returns\nsummary_stats &lt;- us_equity_df %&gt;%\n  summarise(\n    mean_return = mean(monthly_return, na.rm = TRUE),\n    sd_return = sd(monthly_return, na.rm = TRUE),\n    min_return = min(monthly_return, na.rm = TRUE),\n    max_return = max(monthly_return, na.rm = TRUE)\n  )\n\n# Print the summary statistics\nprint(summary_stats)\n\n  mean_return  sd_return min_return max_return\n1 0.007225949 0.04410886 -0.1651874  0.1269836\n\n\n\n\n\n\n\n# Monte Carlo Simulation of Monthly Returns\nset.seed(123)  # For reproducibility\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- 12  # Number of months\n\nsimulated_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = summary_stats$mean_return, sd = summary_stats$sd_return),\n  ncol = n_sim\n)\n\n# Convert to cumulative return paths\nsimulated_cum_returns &lt;- apply(simulated_returns, 2, function(x) cumprod(1 + x) - 1)\n\n# Convert to a data frame for plotting\nlibrary(tidyr)\nsimulated_cum_df &lt;- data.frame(month = 1:n_months, simulated_cum_returns) %&gt;%\n  pivot_longer(-month, names_to = \"simulation\", values_to = \"cumulative_return\")\n\n# Plot the Monte Carlo simulation results\nlibrary(ggplot2)\nggplot(simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation)) +\n  geom_line(alpha = 0.1, color = \"blue\") +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Calculate summary statistics at the final month\nfinal_month_stats &lt;- simulated_cum_df %&gt;%\n  filter(month == n_months) %&gt;%\n  summarise(\n    mean_return = mean(cumulative_return),\n    median_return = median(cumulative_return),\n    sd_return = sd(cumulative_return),\n    min_return = min(cumulative_return),\n    max_return = max(cumulative_return),\n    prob_positive = mean(cumulative_return &gt; 0)  # Probability of positive returns\n  )\n\n# Print the summary statistics\nprint(final_month_stats)\n\n# A tibble: 1 × 6\n  mean_return median_return sd_return min_return max_return prob_positive\n        &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1      0.0908        0.0821     0.160     -0.312      0.668         0.704\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nsummary_lines &lt;- simulated_cum_df %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    mean_cumulative = mean(cumulative_return),\n    median_cumulative = median(cumulative_return)\n  ) %&gt;%\n  pivot_longer(cols = c(mean_cumulative, median_cumulative),\n               names_to = \"Statistic\",\n               values_to = \"cumulative_return\")\n\n# Add mean and median lines to the plot with a legend\nlibrary(ggplot2)\n\nggplot() +\n  geom_line(data = simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation),\n            alpha = 0.1, color = \"blue\") +\n  geom_line(data = summary_lines, aes(x = month, y = cumulative_return, color = Statistic),\n            size = 1) +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\",\n    color = \"Key Metrics\"\n  ) +\n  theme_minimal() +\n  scale_color_manual(\n    values = c(\"mean_cumulative\" = \"red\", \"median_cumulative\" = \"green\"),\n    labels = c(\"Mean\", \"Median\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n# Ensure columns are in Date format\nwage_df_aligned &lt;- wage_df_monthly %&gt;%\n  filter(date &gt;= min(simulated_cum_df$month) & date &lt;= max(simulated_cum_df$month)) %&gt;%\n  mutate(date = as.Date(date))  # Ensure 'date' is in Date format\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = as.Date(month))  # Ensure 'month' is in Date format\n\n\n# Debugging filter outputs\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  \n\n# A tibble: 1,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-13 X1                   0.196  \n 2 1970-01-13 X2                  -0.0351 \n 3 1970-01-13 X3                   0.190  \n 4 1970-01-13 X4                   0.0343 \n 5 1970-01-13 X5                   0.230  \n 6 1970-01-13 X6                   0.00443\n 7 1970-01-13 X7                   0.0769 \n 8 1970-01-13 X8                   0.312  \n 9 1970-01-13 X9                  -0.0154 \n10 1970-01-13 X10                 -0.0374 \n# ℹ 990 more rows\n\n\n\n# Align dates to the first day of the month\nwage_df_aligned &lt;- wage_df_aligned %&gt;%\n  mutate(date = floor_date(date, unit = \"month\"))\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = floor_date(month, unit = \"month\"))\n\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  # Check filtered simulations\n\n# A tibble: 12,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-01 X1                  -0.0175 \n 2 1970-01-01 X2                   0.0249 \n 3 1970-01-01 X3                  -0.0203 \n 4 1970-01-01 X4                   0.0317 \n 5 1970-01-01 X5                   0.0416 \n 6 1970-01-01 X6                   0.0240 \n 7 1970-01-01 X7                   0.0516 \n 8 1970-01-01 X8                  -0.00250\n 9 1970-01-01 X9                   0.104  \n10 1970-01-01 X10                 -0.00955\n# ℹ 11,990 more rows\n\n\n\n# Regenerate simulation data to align with wage_df_monthly\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- nrow(wage_df_monthly)  # Match the number of months in wage_df_monthly\nsimulated_cum_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = 0.007, sd = 0.04),  # Use realistic mean and SD\n  ncol = n_sim\n)\n\n# Create a data frame with simulated cumulative returns\nsimulated_cum_df &lt;- data.frame(\n  month = rep(wage_df_monthly$date, each = n_sim),\n  simulation = rep(paste0(\"X\", 1:n_sim), times = n_months),\n  cumulative_return = as.vector(simulated_cum_returns)\n)\n\n\n# Merge wage growth data with cumulative returns\ncombined_data &lt;- merge(\n  wage_df_monthly,\n  simulated_cum_df %&gt;%\n    rename(simulation_id = simulation),\n  by.x = \"date\",\n  by.y = \"month\"\n)\n\n# Inspect combined data\nprint(head(combined_data))\n\n        date value simulation_id cumulative_return\n1 2001-01-01  87.6            X1      0.0009748016\n2 2001-01-01  87.6            X2      0.0390376223\n3 2001-01-01  87.6            X3     -0.0404687139\n4 2001-01-01  87.6            X4      0.0242254545\n5 2001-01-01  87.6            X5      0.0156698838\n6 2001-01-01  87.6            X6      0.0454516938\n\n\n\n\n\n\n# Parameters for simulation\ncontribution_rate &lt;- 0.1  # 10% of salary\nstarting_salary &lt;- 50000  # Example starting salary in dollars\n\n# Calculate contributions and portfolio value\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)),  # Adjust salary based on wage growth\n    contribution = monthly_salary * contribution_rate,  # Monthly contributions\n    portfolio_value = contribution * (1 + cumulative_return)  # Portfolio value after investment growth\n  )\n\n# Summarize the portfolio growth for each simulation\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value)\n  )\n\n# Inspect the summary\nprint(head(portfolio_summary))\n\n# A tibble: 6 × 2\n  simulation_id final_portfolio_value\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 X1                           80529.\n2 X10                          82803.\n3 X100                         82632.\n4 X1000                        81777.\n5 X101                         81882.\n6 X102                         83201.\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the distribution of final portfolio values\nggplot(portfolio_summary, aes(x = final_portfolio_value)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Final Portfolio Values\",\n    x = \"Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Probability of achieving a $1M goal\ngoal &lt;- 1000000  # $1M goal\nprobability_of_success &lt;- mean(portfolio_summary$final_portfolio_value &gt;= goal)\n\n# Print the result\nprint(paste(\"Probability of achieving a portfolio value of $1M: \", \n            round(probability_of_success * 100, 2), \"%\"))\n\n[1] \"Probability of achieving a portfolio value of $1M:  0 %\"\n\n\n\n\n\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)) * (1 + cumulative_return),\n    contribution = monthly_salary * (contribution_rate + rnorm(1, 0, 0.01))  # Add random variability\n  )\n\n\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value, na.rm = TRUE)\n  )\n\nwithdrawal_rate &lt;- 0.04  # 4% annual withdrawal rate\nportfolio_summary &lt;- portfolio_summary %&gt;%\n  mutate(retirement_portfolio = final_portfolio_value * (1 - withdrawal_rate))\n\n\n\n\n\n# Plot the distribution of retirement portfolio values\nggplot(portfolio_summary, aes(x = retirement_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Post-Retirement Portfolio Values\",\n    x = \"Retirement Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Number of bootstrap simulations\nn_bootstrap &lt;- 200\n\n# While Working: Bootstrap Wage Growth\nworking_histories &lt;- replicate(\n  n_bootstrap,\n  sample(combined_data$value, size = nrow(combined_data), replace = TRUE),\n  simplify = FALSE\n)\n\n# While Retired: Bootstrap Investment Returns\nretired_histories &lt;- replicate(\n  n_bootstrap,\n  sample(simulated_cum_df$cumulative_return, size = nrow(simulated_cum_df), replace = TRUE),\n  simplify = FALSE\n)\n\n\n\n\n\n# Define withdrawal rate\nwithdrawal_rate &lt;- 0.04\n\n# Simulate bootstrap histories\nbootstrap_results &lt;- lapply(seq_len(n_bootstrap), function(i) {\n  # Simulate while working\n  wage_growth &lt;- working_histories[[i]]\n  cumulative_contributions &lt;- cumsum(starting_salary * contribution_rate * wage_growth / first(wage_growth))\n  \n  # Simulate while retired\n  returns &lt;- retired_histories[[i]]\n  retirement_portfolio &lt;- numeric(length(returns))\n  retirement_portfolio[1] &lt;- tail(cumulative_contributions, 1)  # Starting portfolio value\n  \n  for (t in 2:length(returns)) {\n    retirement_portfolio[t] &lt;- retirement_portfolio[t - 1] * (1 + returns[t]) - (retirement_portfolio[t - 1] * withdrawal_rate)\n    if (retirement_portfolio[t] &lt; 0) {\n      retirement_portfolio[t] &lt;- 0  # Ensure portfolio doesn't go negative\n      break\n    }\n  }\n  \n  # Return results\n  list(\n    working = cumulative_contributions,\n    retired = retirement_portfolio\n  )\n})\n\n\n\n\n\n# Analyze bootstrap results\nbootstrap_analysis &lt;- do.call(rbind, lapply(bootstrap_results, function(res) {\n  data.frame(\n    max_contribution = max(res$working),\n    max_portfolio = max(res$retired, na.rm = TRUE),\n    exhausted = any(res$retired == 0)\n  )\n}))\n\n# Probability of exhausting savings\nprob_exhausted &lt;- mean(bootstrap_analysis$exhausted)\n\n# Summary statistics\nsummary_stats &lt;- bootstrap_analysis %&gt;%\n  summarise(\n    mean_contribution = mean(max_contribution),\n    mean_portfolio = mean(max_portfolio),\n    prob_exhausted = mean(exhausted)\n  )\nprint(summary_stats)\n\n  mean_contribution mean_portfolio prob_exhausted\n1          80108560       80861697              0\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = exhausted)) +\n  geom_bar(fill = \"red\", alpha = 0.7) +\n  labs(title = \"Probability of Portfolio Exhaustion\", x = \"Exhausted Savings\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = max_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Retirement Portfolio Values\", x = \"Portfolio Value ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nBased on the visualizations:\n\nProbability of Exhausting Savings:\n\nThe first chart shows 0 occurrences of exhausted savings (all FALSE for exhausted), suggesting that with the assumptions and bootstrap histories used, none of the retirement scenarios result in portfolio depletion.\n\nDistribution of Portfolio Values:\n\nThe second chart indicates some issue with the histogram visualization:\n\nThe x-axis shows extremely high portfolio values (e.g., 1.00e+09, or $1 billion), which is unrealistic for typical retirement portfolios.\nThe histogram bars appear scattered, possibly due to incorrect scaling or extreme values in the data.\n\n\n\n\n\n\nBased on the simulations, here are the recommendations:\n\n\nThe TRS plan is more suitable for employees who prioritize income stability during retirement. It provides:\n\nPredictable monthly payments.\nProtection against market volatility.\n\n\n\n\nThe ORP plan offers greater flexibility and potentially higher returns. However, the employee must:\n\nBe comfortable with market risk.\nConsider reducing withdrawal rates (e.g., 3% instead of 4%) to mitigate the risk of exhausting savings.\n\n\n\n\n\n\n\nAge and Career Duration:\n\nYounger employees with longer career horizons may benefit from ORP’s growth potential.\nEmployees nearing retirement may prefer the stability of TRS.\n\nStarting Salary:\n\nHigher salaries favor ORP for greater investment contributions.\nLower salaries may make TRS more attractive for guaranteed income.\n\nRisk Tolerance:\n\nTRS suits risk-averse individuals.\nORP suits those willing to accept variability for potential upside.\n\nInflation and Long-Term Sustainability:\n\nTRS benefits may not keep pace with inflation over a long retirement.\nORP portfolios, if managed well, can outpace inflation but require discipline in withdrawals.\n\n\n\n\n\n\n\nBootstrap Sampling:\n\nHistorical data used in simulations may not reflect future economic conditions.\nBootstrap methods assume past trends are indicative of future outcomes.\n\nSimplified Assumptions:\n\nFixed withdrawal rates and contribution percentages may not reflect real-life variability.\nEmployee preferences and external factors (e.g., tax changes) were not modeled.\n\nMarket Risks:\n\nSimulations cannot predict black swan events (e.g., 2008 financial crisis).\n\n\n\n\n\n\nThe choice between TRS and ORP depends on the employee’s individual priorities and circumstances. For those seeking stability and simplicity, TRS is a safer option. For those aiming to maximize retirement wealth and are comfortable with risk, ORP can offer higher potential returns, provided they follow a disciplined withdrawal strategy.\nFinal Recommendation: Align the decision with personal goals, risk tolerance, and financial needs. Regularly review and adjust the chosen plan as circumstances evolve."
  },
  {
    "objectID": "mp05.html#data-retrieval",
    "href": "mp05.html#data-retrieval",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "#Accessing the keys\nalpha_key &lt;- Sys.getenv(\"ALPHAVANTAGE_KEY\")\nfred_key &lt;- Sys.getenv(\"FRED_KEY\")\n\n\n\n\n\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_DAILY_ADJUSTED\",\n  symbol = \"AAPL\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load necessary libraries\nlibrary(httr)\n\n\n\n\n\nlibrary(tibble)\nlibrary(tidyr)\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(dplyr) \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Example API request to fetch data\nresponse &lt;- GET(\"https://www.alphavantage.co/query\", query = list(\n  'function' = \"TIME_SERIES_DAILY\",\n  symbol = \"SP500\",\n  apikey = \"your_api_key\"\n))\n\n# Parse the content of the response\nsp500_data &lt;- content(response, \"parsed\")\n\n\nparams_sp500 &lt;- list(\n  `function` = \"TIME_SERIES_DAILY\",  # Use the free endpoint\n  symbol = \"SPY\",                   # Ticker symbol for SPDR S&P 500 ETF\n  apikey = alpha_key\n)\nresponse_sp500 &lt;- GET(alpha_url, query = params_sp500)\nsp500_data &lt;- content(response_sp500, as = \"parsed\", simplifyVector = TRUE)\n\n# Inspect response structure\nstr(sp500_data)\n\nList of 2\n $ Meta Data          :List of 5\n  ..$ 1. Information   : chr \"Daily Prices (open, high, low, close) and Volumes\"\n  ..$ 2. Symbol        : chr \"SPY\"\n  ..$ 3. Last Refreshed: chr \"2024-12-06\"\n  ..$ 4. Output Size   : chr \"Compact\"\n  ..$ 5. Time Zone     : chr \"US/Eastern\"\n $ Time Series (Daily):List of 100\n  ..$ 2024-12-06:List of 5\n  .. ..$ 1. open  : chr \"607.4400\"\n  .. ..$ 2. high  : chr \"609.0700\"\n  .. ..$ 3. low   : chr \"607.0200\"\n  .. ..$ 4. close : chr \"607.8100\"\n  .. ..$ 5. volume: chr \"31241549\"\n  ..$ 2024-12-05:List of 5\n  .. ..$ 1. open  : chr \"607.6600\"\n  .. ..$ 2. high  : chr \"608.4800\"\n  .. ..$ 3. low   : chr \"606.3050\"\n  .. ..$ 4. close : chr \"606.6600\"\n  .. ..$ 5. volume: chr \"28762183\"\n  ..$ 2024-12-04:List of 5\n  .. ..$ 1. open  : chr \"605.6300\"\n  .. ..$ 2. high  : chr \"607.9100\"\n  .. ..$ 3. low   : chr \"604.9500\"\n  .. ..$ 4. close : chr \"607.6600\"\n  .. ..$ 5. volume: chr \"42787561\"\n  ..$ 2024-12-03:List of 5\n  .. ..$ 1. open  : chr \"603.3900\"\n  .. ..$ 2. high  : chr \"604.1600\"\n  .. ..$ 3. low   : chr \"602.3410\"\n  .. ..$ 4. close : chr \"603.9100\"\n  .. ..$ 5. volume: chr \"26906629\"\n  ..$ 2024-12-02:List of 5\n  .. ..$ 1. open  : chr \"602.9700\"\n  .. ..$ 2. high  : chr \"604.3200\"\n  .. ..$ 3. low   : chr \"602.4700\"\n  .. ..$ 4. close : chr \"603.6300\"\n  .. ..$ 5. volume: chr \"31745989\"\n  ..$ 2024-11-29:List of 5\n  .. ..$ 1. open  : chr \"599.6600\"\n  .. ..$ 2. high  : chr \"603.3500\"\n  .. ..$ 3. low   : chr \"599.3800\"\n  .. ..$ 4. close : chr \"602.5500\"\n  .. ..$ 5. volume: chr \"30095740\"\n  ..$ 2024-11-27:List of 5\n  .. ..$ 1. open  : chr \"600.4600\"\n  .. ..$ 2. high  : chr \"600.8500\"\n  .. ..$ 3. low   : chr \"597.2800\"\n  .. ..$ 4. close : chr \"598.8300\"\n  .. ..$ 5. volume: chr \"34000163\"\n  ..$ 2024-11-26:List of 5\n  .. ..$ 1. open  : chr \"598.8000\"\n  .. ..$ 2. high  : chr \"601.3300\"\n  .. ..$ 3. low   : chr \"598.0700\"\n  .. ..$ 4. close : chr \"600.6500\"\n  .. ..$ 5. volume: chr \"45621288\"\n  ..$ 2024-11-25:List of 5\n  .. ..$ 1. open  : chr \"599.5200\"\n  .. ..$ 2. high  : chr \"600.8600\"\n  .. ..$ 3. low   : chr \"595.2000\"\n  .. ..$ 4. close : chr \"597.5300\"\n  .. ..$ 5. volume: chr \"42441393\"\n  ..$ 2024-11-22:List of 5\n  .. ..$ 1. open  : chr \"593.6600\"\n  .. ..$ 2. high  : chr \"596.1500\"\n  .. ..$ 3. low   : chr \"593.1525\"\n  .. ..$ 4. close : chr \"595.5100\"\n  .. ..$ 5. volume: chr \"38226390\"\n  ..$ 2024-11-21:List of 5\n  .. ..$ 1. open  : chr \"593.4000\"\n  .. ..$ 2. high  : chr \"595.1200\"\n  .. ..$ 3. low   : chr \"587.4500\"\n  .. ..$ 4. close : chr \"593.6700\"\n  .. ..$ 5. volume: chr \"46750285\"\n  ..$ 2024-11-20:List of 5\n  .. ..$ 1. open  : chr \"590.3800\"\n  .. ..$ 2. high  : chr \"590.7900\"\n  .. ..$ 3. low   : chr \"584.6300\"\n  .. ..$ 4. close : chr \"590.5000\"\n  .. ..$ 5. volume: chr \"50032576\"\n  ..$ 2024-11-19:List of 5\n  .. ..$ 1. open  : chr \"584.7100\"\n  .. ..$ 2. high  : chr \"591.0450\"\n  .. ..$ 3. low   : chr \"584.0300\"\n  .. ..$ 4. close : chr \"590.3000\"\n  .. ..$ 5. volume: chr \"49412046\"\n  ..$ 2024-11-18:List of 5\n  .. ..$ 1. open  : chr \"586.2200\"\n  .. ..$ 2. high  : chr \"589.4900\"\n  .. ..$ 3. low   : chr \"585.3400\"\n  .. ..$ 4. close : chr \"588.1500\"\n  .. ..$ 5. volume: chr \"37084081\"\n  ..$ 2024-11-15:List of 5\n  .. ..$ 1. open  : chr \"589.7200\"\n  .. ..$ 2. high  : chr \"590.2000\"\n  .. ..$ 3. low   : chr \"583.8600\"\n  .. ..$ 4. close : chr \"585.7500\"\n  .. ..$ 5. volume: chr \"75988766\"\n  ..$ 2024-11-14:List of 5\n  .. ..$ 1. open  : chr \"597.3200\"\n  .. ..$ 2. high  : chr \"597.8100\"\n  .. ..$ 3. low   : chr \"592.6500\"\n  .. ..$ 4. close : chr \"593.3500\"\n  .. ..$ 5. volume: chr \"38904109\"\n  ..$ 2024-11-13:List of 5\n  .. ..$ 1. open  : chr \"597.3700\"\n  .. ..$ 2. high  : chr \"599.2300\"\n  .. ..$ 3. low   : chr \"594.9600\"\n  .. ..$ 4. close : chr \"597.1900\"\n  .. ..$ 5. volume: chr \"47388640\"\n  ..$ 2024-11-12:List of 5\n  .. ..$ 1. open  : chr \"598.6800\"\n  .. ..$ 2. high  : chr \"599.2900\"\n  .. ..$ 3. low   : chr \"594.3700\"\n  .. ..$ 4. close : chr \"596.9000\"\n  .. ..$ 5. volume: chr \"43006128\"\n  ..$ 2024-11-11:List of 5\n  .. ..$ 1. open  : chr \"599.8100\"\n  .. ..$ 2. high  : chr \"600.1700\"\n  .. ..$ 3. low   : chr \"597.0000\"\n  .. ..$ 4. close : chr \"598.7600\"\n  .. ..$ 5. volume: chr \"37586773\"\n  ..$ 2024-11-08:List of 5\n  .. ..$ 1. open  : chr \"596.1700\"\n  .. ..$ 2. high  : chr \"599.6400\"\n  .. ..$ 3. low   : chr \"596.1650\"\n  .. ..$ 4. close : chr \"598.1900\"\n  .. ..$ 5. volume: chr \"46444893\"\n  ..$ 2024-11-07:List of 5\n  .. ..$ 1. open  : chr \"593.0800\"\n  .. ..$ 2. high  : chr \"596.6500\"\n  .. ..$ 3. low   : chr \"592.9999\"\n  .. ..$ 4. close : chr \"595.6100\"\n  .. ..$ 5. volume: chr \"47233212\"\n  ..$ 2024-11-06:List of 5\n  .. ..$ 1. open  : chr \"589.2000\"\n  .. ..$ 2. high  : chr \"591.9300\"\n  .. ..$ 3. low   : chr \"585.3900\"\n  .. ..$ 4. close : chr \"591.0400\"\n  .. ..$ 5. volume: chr \"68181968\"\n  ..$ 2024-11-05:List of 5\n  .. ..$ 1. open  : chr \"570.7400\"\n  .. ..$ 2. high  : chr \"576.7400\"\n  .. ..$ 3. low   : chr \"570.5200\"\n  .. ..$ 4. close : chr \"576.7000\"\n  .. ..$ 5. volume: chr \"39478322\"\n  ..$ 2024-11-04:List of 5\n  .. ..$ 1. open  : chr \"571.1800\"\n  .. ..$ 2. high  : chr \"572.5000\"\n  .. ..$ 3. low   : chr \"567.8900\"\n  .. ..$ 4. close : chr \"569.8100\"\n  .. ..$ 5. volume: chr \"38216975\"\n  ..$ 2024-11-01:List of 5\n  .. ..$ 1. open  : chr \"571.3200\"\n  .. ..$ 2. high  : chr \"575.5500\"\n  .. ..$ 3. low   : chr \"570.6200\"\n  .. ..$ 4. close : chr \"571.0400\"\n  .. ..$ 5. volume: chr \"45667533\"\n  ..$ 2024-10-31:List of 5\n  .. ..$ 1. open  : chr \"575.5600\"\n  .. ..$ 2. high  : chr \"575.6300\"\n  .. ..$ 3. low   : chr \"568.4400\"\n  .. ..$ 4. close : chr \"568.6400\"\n  .. ..$ 5. volume: chr \"60182451\"\n  ..$ 2024-10-30:List of 5\n  .. ..$ 1. open  : chr \"581.2900\"\n  .. ..$ 2. high  : chr \"583.3200\"\n  .. ..$ 3. low   : chr \"579.2900\"\n  .. ..$ 4. close : chr \"580.0100\"\n  .. ..$ 5. volume: chr \"41435839\"\n  ..$ 2024-10-29:List of 5\n  .. ..$ 1. open  : chr \"579.8500\"\n  .. ..$ 2. high  : chr \"582.9070\"\n  .. ..$ 3. low   : chr \"578.4300\"\n  .. ..$ 4. close : chr \"581.7700\"\n  .. ..$ 5. volume: chr \"42899661\"\n  ..$ 2024-10-28:List of 5\n  .. ..$ 1. open  : chr \"582.5800\"\n  .. ..$ 2. high  : chr \"582.7100\"\n  .. ..$ 3. low   : chr \"580.5200\"\n  .. ..$ 4. close : chr \"580.8300\"\n  .. ..$ 5. volume: chr \"30174704\"\n  ..$ 2024-10-25:List of 5\n  .. ..$ 1. open  : chr \"581.5100\"\n  .. ..$ 2. high  : chr \"584.4600\"\n  .. ..$ 3. low   : chr \"578.0800\"\n  .. ..$ 4. close : chr \"579.0400\"\n  .. ..$ 5. volume: chr \"47268176\"\n  ..$ 2024-10-24:List of 5\n  .. ..$ 1. open  : chr \"579.9800\"\n  .. ..$ 2. high  : chr \"580.0600\"\n  .. ..$ 3. low   : chr \"576.5700\"\n  .. ..$ 4. close : chr \"579.2400\"\n  .. ..$ 5. volume: chr \"34979860\"\n  ..$ 2024-10-23:List of 5\n  .. ..$ 1. open  : chr \"581.2600\"\n  .. ..$ 2. high  : chr \"581.7086\"\n  .. ..$ 3. low   : chr \"574.4150\"\n  .. ..$ 4. close : chr \"577.9900\"\n  .. ..$ 5. volume: chr \"49314574\"\n  ..$ 2024-10-22:List of 5\n  .. ..$ 1. open  : chr \"581.0500\"\n  .. ..$ 2. high  : chr \"584.5000\"\n  .. ..$ 3. low   : chr \"580.3800\"\n  .. ..$ 4. close : chr \"583.3200\"\n  .. ..$ 5. volume: chr \"34183835\"\n  ..$ 2024-10-21:List of 5\n  .. ..$ 1. open  : chr \"583.8500\"\n  .. ..$ 2. high  : chr \"584.8500\"\n  .. ..$ 3. low   : chr \"580.6001\"\n  .. ..$ 4. close : chr \"583.6300\"\n  .. ..$ 5. volume: chr \"36439010\"\n  ..$ 2024-10-18:List of 5\n  .. ..$ 1. open  : chr \"584.0700\"\n  .. ..$ 2. high  : chr \"585.3900\"\n  .. ..$ 3. low   : chr \"582.5800\"\n  .. ..$ 4. close : chr \"584.5900\"\n  .. ..$ 5. volume: chr \"37416801\"\n  ..$ 2024-10-17:List of 5\n  .. ..$ 1. open  : chr \"585.9100\"\n  .. ..$ 2. high  : chr \"586.1200\"\n  .. ..$ 3. low   : chr \"582.1600\"\n  .. ..$ 4. close : chr \"582.3500\"\n  .. ..$ 5. volume: chr \"34393714\"\n  ..$ 2024-10-16:List of 5\n  .. ..$ 1. open  : chr \"579.7800\"\n  .. ..$ 2. high  : chr \"582.8300\"\n  .. ..$ 3. low   : chr \"578.9600\"\n  .. ..$ 4. close : chr \"582.3000\"\n  .. ..$ 5. volume: chr \"30725436\"\n  ..$ 2024-10-15:List of 5\n  .. ..$ 1. open  : chr \"584.5900\"\n  .. ..$ 2. high  : chr \"584.9000\"\n  .. ..$ 3. low   : chr \"578.5450\"\n  .. ..$ 4. close : chr \"579.7800\"\n  .. ..$ 5. volume: chr \"54203636\"\n  ..$ 2024-10-14:List of 5\n  .. ..$ 1. open  : chr \"581.2200\"\n  .. ..$ 2. high  : chr \"585.2700\"\n  .. ..$ 3. low   : chr \"580.7300\"\n  .. ..$ 4. close : chr \"584.3200\"\n  .. ..$ 5. volume: chr \"36217215\"\n  ..$ 2024-10-11:List of 5\n  .. ..$ 1. open  : chr \"576.0500\"\n  .. ..$ 2. high  : chr \"580.3300\"\n  .. ..$ 3. low   : chr \"575.9100\"\n  .. ..$ 4. close : chr \"579.5800\"\n  .. ..$ 5. volume: chr \"42267994\"\n  ..$ 2024-10-10:List of 5\n  .. ..$ 1. open  : chr \"575.7700\"\n  .. ..$ 2. high  : chr \"577.5800\"\n  .. ..$ 3. low   : chr \"574.4900\"\n  .. ..$ 4. close : chr \"576.1300\"\n  .. ..$ 5. volume: chr \"44138060\"\n  ..$ 2024-10-09:List of 5\n  .. ..$ 1. open  : chr \"573.1600\"\n  .. ..$ 2. high  : chr \"577.7100\"\n  .. ..$ 3. low   : chr \"572.5500\"\n  .. ..$ 4. close : chr \"577.1400\"\n  .. ..$ 5. volume: chr \"37912244\"\n  ..$ 2024-10-08:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"573.7800\"\n  .. ..$ 3. low   : chr \"569.5299\"\n  .. ..$ 4. close : chr \"573.1700\"\n  .. ..$ 5. volume: chr \"37398693\"\n  ..$ 2024-10-07:List of 5\n  .. ..$ 1. open  : chr \"571.3000\"\n  .. ..$ 2. high  : chr \"571.9599\"\n  .. ..$ 3. low   : chr \"566.6300\"\n  .. ..$ 4. close : chr \"567.8000\"\n  .. ..$ 5. volume: chr \"49964690\"\n  ..$ 2024-10-04:List of 5\n  .. ..$ 1. open  : chr \"572.3500\"\n  .. ..$ 2. high  : chr \"573.3600\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"572.9800\"\n  .. ..$ 5. volume: chr \"43005186\"\n  ..$ 2024-10-03:List of 5\n  .. ..$ 1. open  : chr \"567.3600\"\n  .. ..$ 2. high  : chr \"569.8025\"\n  .. ..$ 3. low   : chr \"565.4900\"\n  .. ..$ 4. close : chr \"567.8200\"\n  .. ..$ 5. volume: chr \"40846466\"\n  ..$ 2024-10-02:List of 5\n  .. ..$ 1. open  : chr \"567.7100\"\n  .. ..$ 2. high  : chr \"569.9000\"\n  .. ..$ 3. low   : chr \"565.2700\"\n  .. ..$ 4. close : chr \"568.8600\"\n  .. ..$ 5. volume: chr \"38097798\"\n  ..$ 2024-10-01:List of 5\n  .. ..$ 1. open  : chr \"573.4000\"\n  .. ..$ 2. high  : chr \"574.0622\"\n  .. ..$ 3. low   : chr \"566.0000\"\n  .. ..$ 4. close : chr \"568.6200\"\n  .. ..$ 5. volume: chr \"72668778\"\n  ..$ 2024-09-30:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"574.3800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"573.7600\"\n  .. ..$ 5. volume: chr \"63655448\"\n  ..$ 2024-09-27:List of 5\n  .. ..$ 1. open  : chr \"573.3900\"\n  .. ..$ 2. high  : chr \"574.2200\"\n  .. ..$ 3. low   : chr \"570.4200\"\n  .. ..$ 4. close : chr \"571.4700\"\n  .. ..$ 5. volume: chr \"42100928\"\n  ..$ 2024-09-26:List of 5\n  .. ..$ 1. open  : chr \"574.3800\"\n  .. ..$ 2. high  : chr \"574.7100\"\n  .. ..$ 3. low   : chr \"569.9000\"\n  .. ..$ 4. close : chr \"572.3000\"\n  .. ..$ 5. volume: chr \"48336004\"\n  ..$ 2024-09-25:List of 5\n  .. ..$ 1. open  : chr \"571.1400\"\n  .. ..$ 2. high  : chr \"571.8900\"\n  .. ..$ 3. low   : chr \"568.9100\"\n  .. ..$ 4. close : chr \"570.0400\"\n  .. ..$ 5. volume: chr \"38428587\"\n  ..$ 2024-09-24:List of 5\n  .. ..$ 1. open  : chr \"570.4800\"\n  .. ..$ 2. high  : chr \"571.3600\"\n  .. ..$ 3. low   : chr \"567.6000\"\n  .. ..$ 4. close : chr \"571.3000\"\n  .. ..$ 5. volume: chr \"46805672\"\n  ..$ 2024-09-23:List of 5\n  .. ..$ 1. open  : chr \"569.3400\"\n  .. ..$ 2. high  : chr \"570.3325\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"569.6700\"\n  .. ..$ 5. volume: chr \"44116922\"\n  ..$ 2024-09-20:List of 5\n  .. ..$ 1. open  : chr \"567.8400\"\n  .. ..$ 2. high  : chr \"569.3100\"\n  .. ..$ 3. low   : chr \"565.1700\"\n  .. ..$ 4. close : chr \"568.2500\"\n  .. ..$ 5. volume: chr \"77503110\"\n  ..$ 2024-09-19:List of 5\n  .. ..$ 1. open  : chr \"571.0100\"\n  .. ..$ 2. high  : chr \"572.8800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"570.9800\"\n  .. ..$ 5. volume: chr \"75315470\"\n  ..$ 2024-09-18:List of 5\n  .. ..$ 1. open  : chr \"563.7400\"\n  .. ..$ 2. high  : chr \"568.6900\"\n  .. ..$ 3. low   : chr \"560.8300\"\n  .. ..$ 4. close : chr \"561.4000\"\n  .. ..$ 5. volume: chr \"59044937\"\n  ..$ 2024-09-17:List of 5\n  .. ..$ 1. open  : chr \"565.1000\"\n  .. ..$ 2. high  : chr \"566.5800\"\n  .. ..$ 3. low   : chr \"560.7950\"\n  .. ..$ 4. close : chr \"563.0700\"\n  .. ..$ 5. volume: chr \"49320970\"\n  ..$ 2024-09-16:List of 5\n  .. ..$ 1. open  : chr \"561.7400\"\n  .. ..$ 2. high  : chr \"563.1100\"\n  .. ..$ 3. low   : chr \"559.9000\"\n  .. ..$ 4. close : chr \"562.8400\"\n  .. ..$ 5. volume: chr \"36656122\"\n  ..$ 2024-09-13:List of 5\n  .. ..$ 1. open  : chr \"559.7100\"\n  .. ..$ 2. high  : chr \"563.0300\"\n  .. ..$ 3. low   : chr \"559.4500\"\n  .. ..$ 4. close : chr \"562.0100\"\n  .. ..$ 5. volume: chr \"39310501\"\n  ..$ 2024-09-12:List of 5\n  .. ..$ 1. open  : chr \"555.0100\"\n  .. ..$ 2. high  : chr \"559.4000\"\n  .. ..$ 3. low   : chr \"552.7400\"\n  .. ..$ 4. close : chr \"559.0900\"\n  .. ..$ 5. volume: chr \"51892735\"\n  ..$ 2024-09-11:List of 5\n  .. ..$ 1. open  : chr \"548.7000\"\n  .. ..$ 2. high  : chr \"555.3600\"\n  .. ..$ 3. low   : chr \"539.9600\"\n  .. ..$ 4. close : chr \"554.4200\"\n  .. ..$ 5. volume: chr \"75248608\"\n  ..$ 2024-09-10:List of 5\n  .. ..$ 1. open  : chr \"548.3600\"\n  .. ..$ 2. high  : chr \"549.1500\"\n  .. ..$ 3. low   : chr \"543.3800\"\n  .. ..$ 4. close : chr \"548.7900\"\n  .. ..$ 5. volume: chr \"36394579\"\n  ..$ 2024-09-09:List of 5\n  .. ..$ 1. open  : chr \"544.6500\"\n  .. ..$ 2. high  : chr \"547.7100\"\n  .. ..$ 3. low   : chr \"542.6800\"\n  .. ..$ 4. close : chr \"546.4100\"\n  .. ..$ 5. volume: chr \"40445822\"\n  ..$ 2024-09-06:List of 5\n  .. ..$ 1. open  : chr \"549.9400\"\n  .. ..$ 2. high  : chr \"551.6000\"\n  .. ..$ 3. low   : chr \"539.4400\"\n  .. ..$ 4. close : chr \"540.3600\"\n  .. ..$ 5. volume: chr \"68493805\"\n  ..$ 2024-09-05:List of 5\n  .. ..$ 1. open  : chr \"550.8900\"\n  .. ..$ 2. high  : chr \"553.7995\"\n  .. ..$ 3. low   : chr \"547.1000\"\n  .. ..$ 4. close : chr \"549.6100\"\n  .. ..$ 5. volume: chr \"44264258\"\n  ..$ 2024-09-04:List of 5\n  .. ..$ 1. open  : chr \"550.2000\"\n  .. ..$ 2. high  : chr \"554.4300\"\n  .. ..$ 3. low   : chr \"549.4600\"\n  .. ..$ 4. close : chr \"550.9500\"\n  .. ..$ 5. volume: chr \"46232483\"\n  ..$ 2024-09-03:List of 5\n  .. ..$ 1. open  : chr \"560.4700\"\n  .. ..$ 2. high  : chr \"560.8100\"\n  .. ..$ 3. low   : chr \"549.5100\"\n  .. ..$ 4. close : chr \"552.0800\"\n  .. ..$ 5. volume: chr \"60600113\"\n  ..$ 2024-08-30:List of 5\n  .. ..$ 1. open  : chr \"560.7700\"\n  .. ..$ 2. high  : chr \"564.2000\"\n  .. ..$ 3. low   : chr \"557.1400\"\n  .. ..$ 4. close : chr \"563.6800\"\n  .. ..$ 5. volume: chr \"62700110\"\n  ..$ 2024-08-29:List of 5\n  .. ..$ 1. open  : chr \"560.3100\"\n  .. ..$ 2. high  : chr \"563.6800\"\n  .. ..$ 3. low   : chr \"557.1800\"\n  .. ..$ 4. close : chr \"558.3500\"\n  .. ..$ 5. volume: chr \"38715176\"\n  ..$ 2024-08-28:List of 5\n  .. ..$ 1. open  : chr \"561.2100\"\n  .. ..$ 2. high  : chr \"561.6500\"\n  .. ..$ 3. low   : chr \"555.0400\"\n  .. ..$ 4. close : chr \"558.3000\"\n  .. ..$ 5. volume: chr \"41066024\"\n  ..$ 2024-08-27:List of 5\n  .. ..$ 1. open  : chr \"559.4900\"\n  .. ..$ 2. high  : chr \"562.0600\"\n  .. ..$ 3. low   : chr \"558.3200\"\n  .. ..$ 4. close : chr \"561.5600\"\n  .. ..$ 5. volume: chr \"32693898\"\n  ..$ 2024-08-26:List of 5\n  .. ..$ 1. open  : chr \"563.1800\"\n  .. ..$ 2. high  : chr \"563.9100\"\n  .. ..$ 3. low   : chr \"559.0500\"\n  .. ..$ 4. close : chr \"560.7900\"\n  .. ..$ 5. volume: chr \"35788609\"\n  ..$ 2024-08-23:List of 5\n  .. ..$ 1. open  : chr \"559.5300\"\n  .. ..$ 2. high  : chr \"563.0900\"\n  .. ..$ 3. low   : chr \"557.2900\"\n  .. ..$ 4. close : chr \"562.1300\"\n  .. ..$ 5. volume: chr \"50639393\"\n  ..$ 2024-08-22:List of 5\n  .. ..$ 1. open  : chr \"562.5600\"\n  .. ..$ 2. high  : chr \"563.1800\"\n  .. ..$ 3. low   : chr \"554.9800\"\n  .. ..$ 4. close : chr \"556.2200\"\n  .. ..$ 5. volume: chr \"56121456\"\n  ..$ 2024-08-21:List of 5\n  .. ..$ 1. open  : chr \"559.7700\"\n  .. ..$ 2. high  : chr \"562.1100\"\n  .. ..$ 3. low   : chr \"554.7300\"\n  .. ..$ 4. close : chr \"560.6200\"\n  .. ..$ 5. volume: chr \"41514600\"\n  ..$ 2024-08-20:List of 5\n  .. ..$ 1. open  : chr \"559.1500\"\n  .. ..$ 2. high  : chr \"560.8400\"\n  .. ..$ 3. low   : chr \"557.3250\"\n  .. ..$ 4. close : chr \"558.7000\"\n  .. ..$ 5. volume: chr \"33732264\"\n  ..$ 2024-08-19:List of 5\n  .. ..$ 1. open  : chr \"554.7300\"\n  .. ..$ 2. high  : chr \"559.6100\"\n  .. ..$ 3. low   : chr \"553.8600\"\n  .. ..$ 4. close : chr \"559.6100\"\n  .. ..$ 5. volume: chr \"39121793\"\n  ..$ 2024-08-16:List of 5\n  .. ..$ 1. open  : chr \"551.4200\"\n  .. ..$ 2. high  : chr \"555.0200\"\n  .. ..$ 3. low   : chr \"551.2600\"\n  .. ..$ 4. close : chr \"554.3100\"\n  .. ..$ 5. volume: chr \"44430728\"\n  ..$ 2024-08-15:List of 5\n  .. ..$ 1. open  : chr \"549.5000\"\n  .. ..$ 2. high  : chr \"553.3600\"\n  .. ..$ 3. low   : chr \"548.8800\"\n  .. ..$ 4. close : chr \"553.0700\"\n  .. ..$ 5. volume: chr \"60846812\"\n  ..$ 2024-08-14:List of 5\n  .. ..$ 1. open  : chr \"542.8500\"\n  .. ..$ 2. high  : chr \"544.9600\"\n  .. ..$ 3. low   : chr \"540.1200\"\n  .. ..$ 4. close : chr \"543.7500\"\n  .. ..$ 5. volume: chr \"42446929\"\n  ..$ 2024-08-13:List of 5\n  .. ..$ 1. open  : chr \"536.5300\"\n  .. ..$ 2. high  : chr \"542.2800\"\n  .. ..$ 3. low   : chr \"536.2800\"\n  .. ..$ 4. close : chr \"542.0400\"\n  .. ..$ 5. volume: chr \"52333073\"\n  ..$ 2024-08-12:List of 5\n  .. ..$ 1. open  : chr \"534.2100\"\n  .. ..$ 2. high  : chr \"535.7300\"\n  .. ..$ 3. low   : chr \"530.9500\"\n  .. ..$ 4. close : chr \"533.2700\"\n  .. ..$ 5. volume: chr \"42542069\"\n  ..$ 2024-08-09:List of 5\n  .. ..$ 1. open  : chr \"529.8100\"\n  .. ..$ 2. high  : chr \"534.5100\"\n  .. ..$ 3. low   : chr \"528.5600\"\n  .. ..$ 4. close : chr \"532.9900\"\n  .. ..$ 5. volume: chr \"45619558\"\n  ..$ 2024-08-08:List of 5\n  .. ..$ 1. open  : chr \"523.9100\"\n  .. ..$ 2. high  : chr \"531.2900\"\n  .. ..$ 3. low   : chr \"521.8400\"\n  .. ..$ 4. close : chr \"530.6500\"\n  .. ..$ 5. volume: chr \"63276589\"\n  ..$ 2024-08-07:List of 5\n  .. ..$ 1. open  : chr \"528.4700\"\n  .. ..$ 2. high  : chr \"531.5900\"\n  .. ..$ 3. low   : chr \"518.0519\"\n  .. ..$ 4. close : chr \"518.6600\"\n  .. ..$ 5. volume: chr \"70698340\"\n  ..$ 2024-08-06:List of 5\n  .. ..$ 1. open  : chr \"519.2200\"\n  .. ..$ 2. high  : chr \"529.7500\"\n  .. ..$ 3. low   : chr \"517.8700\"\n  .. ..$ 4. close : chr \"522.1500\"\n  .. ..$ 5. volume: chr \"84826312\"\n  ..$ 2024-08-05:List of 5\n  .. ..$ 1. open  : chr \"511.6400\"\n  .. ..$ 2. high  : chr \"523.5800\"\n  .. ..$ 3. low   : chr \"510.2700\"\n  .. ..$ 4. close : chr \"517.3800\"\n  .. ..$ 5. volume: chr \"146267391\"\n  ..$ 2024-08-02:List of 5\n  .. ..$ 1. open  : chr \"535.7500\"\n  .. ..$ 2. high  : chr \"536.9900\"\n  .. ..$ 3. low   : chr \"528.6000\"\n  .. ..$ 4. close : chr \"532.9000\"\n  .. ..$ 5. volume: chr \"82789070\"\n  ..$ 2024-08-01:List of 5\n  .. ..$ 1. open  : chr \"552.5700\"\n  .. ..$ 2. high  : chr \"554.8688\"\n  .. ..$ 3. low   : chr \"539.4300\"\n  .. ..$ 4. close : chr \"543.0100\"\n  .. ..$ 5. volume: chr \"76428732\"\n  ..$ 2024-07-31:List of 5\n  .. ..$ 1. open  : chr \"548.9800\"\n  .. ..$ 2. high  : chr \"553.5000\"\n  .. ..$ 3. low   : chr \"547.5799\"\n  .. ..$ 4. close : chr \"550.8100\"\n  .. ..$ 5. volume: chr \"65663388\"\n  ..$ 2024-07-30:List of 5\n  .. ..$ 1. open  : chr \"546.2600\"\n  .. ..$ 2. high  : chr \"547.3400\"\n  .. ..$ 3. low   : chr \"538.5150\"\n  .. ..$ 4. close : chr \"542.0000\"\n  .. ..$ 5. volume: chr \"46853632\"\n  ..$ 2024-07-29:List of 5\n  .. ..$ 1. open  : chr \"546.0200\"\n  .. ..$ 2. high  : chr \"547.0500\"\n  .. ..$ 3. low   : chr \"542.7200\"\n  .. ..$ 4. close : chr \"544.7600\"\n  .. ..$ 5. volume: chr \"39515824\"\n  ..$ 2024-07-26:List of 5\n  .. ..$ 1. open  : chr \"542.2800\"\n  .. ..$ 2. high  : chr \"547.1900\"\n  .. ..$ 3. low   : chr \"541.4900\"\n  .. ..$ 4. close : chr \"544.4400\"\n  .. ..$ 5. volume: chr \"53763788\"\n  ..$ 2024-07-25:List of 5\n  .. ..$ 1. open  : chr \"541.3500\"\n  .. ..$ 2. high  : chr \"547.4550\"\n  .. ..$ 3. low   : chr \"537.4500\"\n  .. ..$ 4. close : chr \"538.4100\"\n  .. ..$ 5. volume: chr \"61158288\"\n  ..$ 2024-07-24:List of 5\n  .. ..$ 1. open  : chr \"548.8600\"\n  .. ..$ 2. high  : chr \"549.1700\"\n  .. ..$ 3. low   : chr \"540.2900\"\n  .. ..$ 4. close : chr \"541.2300\"\n  .. ..$ 5. volume: chr \"74515266\"\n  ..$ 2024-07-23:List of 5\n  .. ..$ 1. open  : chr \"554.5400\"\n  .. ..$ 2. high  : chr \"556.7350\"\n  .. ..$ 3. low   : chr \"553.2750\"\n  .. ..$ 4. close : chr \"553.7800\"\n  .. ..$ 5. volume: chr \"34439561\"\n  ..$ 2024-07-22:List of 5\n  .. ..$ 1. open  : chr \"553.0000\"\n  .. ..$ 2. high  : chr \"555.2700\"\n  .. ..$ 3. low   : chr \"551.0200\"\n  .. ..$ 4. close : chr \"554.6500\"\n  .. ..$ 5. volume: chr \"43346720\"\n  ..$ 2024-07-19:List of 5\n  .. ..$ 1. open  : chr \"552.4200\"\n  .. ..$ 2. high  : chr \"554.0800\"\n  .. ..$ 3. low   : chr \"547.9100\"\n  .. ..$ 4. close : chr \"548.9900\"\n  .. ..$ 5. volume: chr \"65509081\"\n  .. [list output truncated]\n\n\n\nlibrary(httr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.2\n✔ ggplot2   3.5.1     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Extract and parse the \"Time Series (Daily)\" data\nsp500_data_clean &lt;- sp500_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;% # Convert list to tibble\n  unnest_wider(Metrics) %&gt;% # Flatten the nested list in \"Metrics\"\n  mutate(\n    Date = as.Date(Date), # Convert date to Date format\n    `1. open` = as.numeric(`1. open`),\n    `2. high` = as.numeric(`2. high`),\n    `3. low` = as.numeric(`3. low`),\n    `4. close` = as.numeric(`4. close`),\n    `5. volume` = as.numeric(`5. volume`)\n  )\n\n# Inspect the cleaned data\nhead(sp500_data_clean)\n\n# A tibble: 6 × 6\n  Date       `1. open` `2. high` `3. low` `4. close` `5. volume`\n  &lt;date&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 2024-12-06      607.      609.     607.       608.    31241549\n2 2024-12-05      608.      608.     606.       607.    28762183\n3 2024-12-04      606.      608.     605.       608.    42787561\n4 2024-12-03      603.      604.     602.       604.    26906629\n5 2024-12-02      603.      604.     602.       604.    31745989\n6 2024-11-29      600.      603.     599.       603.    30095740\n\n\n\n\n\n\nfred_url &lt;- paste0(\"https://api.stlouisfed.org/fred/series/observations\")\nfred_params &lt;- list(\n  series_id = \"GDP\",\n  api_key = fred_key,\n  file_type = \"json\"\n)\nfred_response &lt;- GET(fred_url, query = fred_params)\nfred_data &lt;- content(fred_response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load required libraries\nlibrary(tidyverse)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Limit to most recent 1 year (365 days) to reduce data points\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  filter(Date &gt;= as.Date(max(Date)) - 365)\n\n# Precompute and downsample moving averages to reduce computation\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  mutate(\n    ma_30 = zoo::rollapply(`4. close`, width = 30, FUN = mean, fill = NA, align = \"right\"),\n    ma_90 = zoo::rollapply(`4. close`, width = 90, FUN = mean, fill = NA, align = \"right\")\n  ) %&gt;%\n  # Downsample data (keep every 5th row for faster plotting)\n  slice(seq(1, n(), by = 5))\n\n# Plot Closing Prices with Moving Averages\nggplot(sp500_data_clean, aes(x = Date)) +\n  geom_line(aes(y = `4. close`, color = \"Closing Price\"), size = 0.5) +\n  geom_line(aes(y = ma_30, color = \"30-Day Moving Avg\"), size = 0.5) +\n  geom_line(aes(y = ma_90, color = \"90-Day Moving Avg\"), size = 0.5) +\n  labs(\n    title = \"S&P 500 Closing Prices with Moving Averages\",\n    x = \"Date\",\n    y = \"Price ($)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n# Parse FRED Data\ngdp_data &lt;- fred_data[[\"observations\"]] %&gt;%\n  tibble::as_tibble() %&gt;%\n  mutate(\n    date = as.Date(date),             # Convert 'date' column to Date format\n    value = value         # Convert 'value' column to numeric (invalid values become NA)\n  )"
  },
  {
    "objectID": "mp05.html#visualizations",
    "href": "mp05.html#visualizations",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "ggplot(sp500_data_clean, aes(x = Date, y = `4. close`)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Closing Prices\",\n    x = \"Date\",\n    y = \"Closing Price ($)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nstr(fred_data)\n\nList of 13\n $ realtime_start   : chr \"2024-11-27\"\n $ realtime_end     : chr \"2024-11-27\"\n $ observation_start: chr \"1600-01-01\"\n $ observation_end  : chr \"9999-12-31\"\n $ units            : chr \"lin\"\n $ output_type      : int 1\n $ file_type        : chr \"json\"\n $ order_by         : chr \"observation_date\"\n $ sort_order       : chr \"asc\"\n $ count            : int 315\n $ offset           : int 0\n $ limit            : int 100000\n $ observations     :'data.frame':  315 obs. of  4 variables:\n  ..$ realtime_start: chr [1:315] \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" ...\n  ..$ realtime_end  : chr [1:315] \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" \"2024-11-27\" ...\n  ..$ date          : chr [1:315] \"1946-01-01\" \"1946-04-01\" \"1946-07-01\" \"1946-10-01\" ...\n  ..$ value         : chr [1:315] \".\" \".\" \".\" \".\" ...\n\n\n\nlibrary(tidyverse)\n\n# Extract and clean the observations\ngdp_data_clean &lt;- fred_data$observations %&gt;%\n  mutate(\n    date = as.Date(date),           # Convert date to Date format\n    value = as.numeric(value)       # Convert value to numeric, invalid entries become NA\n  ) %&gt;%\n  filter(!is.na(value))             # Remove rows with NA in the value column\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Inspect the cleaned data\nhead(gdp_data_clean)\n\n  realtime_start realtime_end       date   value\n1     2024-11-27   2024-11-27 1947-01-01 243.164\n2     2024-11-27   2024-11-27 1947-04-01 245.968\n3     2024-11-27   2024-11-27 1947-07-01 249.585\n4     2024-11-27   2024-11-27 1947-10-01 259.745\n5     2024-11-27   2024-11-27 1948-01-01 265.742\n6     2024-11-27   2024-11-27 1948-04-01 272.567\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  labs(\n    title = \"GDP Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  geom_smooth(method = \"loess\", color = \"blue\", se = FALSE) +\n  labs(\n    title = \"GDP Trend Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\ngdp_yoy &lt;- gdp_data_clean %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;% # Extract year from date\n  group_by(year) %&gt;%\n  summarize(avg_gdp = mean(value, na.rm = TRUE)) %&gt;%\n  mutate(\n    yoy_growth = (avg_gdp - lag(avg_gdp)) / lag(avg_gdp) * 100 # YoY growth\n  )\n\n# Inspect the YoY Growth Data\nhead(gdp_yoy)\n\n# A tibble: 6 × 3\n   year avg_gdp yoy_growth\n  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1  1947    250.     NA    \n2  1948    274.      9.96 \n3  1949    272.     -0.726\n4  1950    300.     10.0  \n5  1951    347.     15.7  \n6  1952    367.      5.89 \n\n\n\nggplot(gdp_yoy, aes(x = year, y = yoy_growth)) +\n  geom_col(fill = \"purple\") +\n  labs(\n    title = \"Year-over-Year GDP Growth\",\n    x = \"Year\",\n    y = \"YoY Growth (%)\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nwage_data &lt;- data.frame(\n  date = c(\"2001-01-01\", \"2001-04-01\", \"2001-07-01\", \"2001-10-01\", \"2002-01-01\", \"2002-04-01\"),\n  value = c(\"87.6\", \"88.4\", \"89.2\", \"90.0\", \"90.7\", \"91.6\")\n)\n\n\n# Process wage growth data\nlibrary(dplyr)\nlibrary(tidyr)\n\nwage_df &lt;- wage_data %&gt;%\n  select(date, value) %&gt;%  # Select only the relevant columns\n  mutate(\n    value = ifelse(value == \".\", NA, as.numeric(value)),  # Replace \".\" with NA and convert to numeric\n    date = as.Date(date)  # Ensure date is in Date format\n  ) %&gt;%\n  drop_na(value)  # Remove rows where value is NA\n\n# Print the first few rows to confirm\nhead(wage_df)\n\n        date value\n1 2001-01-01  87.6\n2 2001-04-01  88.4\n3 2001-07-01  89.2\n4 2001-10-01  90.0\n5 2002-01-01  90.7\n6 2002-04-01  91.6\n\n# Interpolate data to monthly frequency if needed\nwage_df_monthly &lt;- wage_df %&gt;%\n  complete(date = seq.Date(min(date), max(date), by = \"month\")) %&gt;%  # Fill missing months\n  fill(value, .direction = \"down\")  # Fill missing values by carrying forward\n\n\nlibrary(ggplot2)\n\n# Plot the wage growth data\nggplot(wage_df_monthly, aes(x = date, y = value)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"Wage Growth Over Time\",\n    x = \"Date\",\n    y = \"Wage Index Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Example for fetching S&P 500 monthly adjusted close prices\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_MONTHLY_ADJUSTED\",\n  symbol = \"SPY\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\n\n# Parse the content\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n# Extract and process data\nlibrary(dplyr)\nmonthly_data &lt;- alpha_data[[\"Monthly Adjusted Time Series\"]]\nus_equity_df &lt;- data.frame(\n  date = as.Date(names(monthly_data)),\n  adjusted_close = as.numeric(sapply(monthly_data, function(x) x[[\"5. adjusted close\"]]))\n)\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close\n1 2024-12-06       607.8100\n2 2024-11-29       602.5500\n3 2024-10-31       568.6400\n4 2024-09-30       573.7600\n5 2024-08-30       561.9538\n6 2024-07-31       549.1232\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the S&P 500 adjusted close prices\nggplot(us_equity_df, aes(x = date, y = adjusted_close)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Adjusted Close Prices\",\n    x = \"Date\",\n    y = \"Adjusted Close Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  arrange(date) %&gt;%  # Ensure data is sorted by date\n  mutate(\n    monthly_return = adjusted_close / lag(adjusted_close) - 1  # Calculate monthly returns\n  )\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 1999-12-31        93.8436             NA\n2 2000-01-31        89.1714    -0.04978709\n3 2000-02-29        87.8136    -0.01522686\n4 2000-03-31        96.3223     0.09689501\n5 2000-04-28        92.9394    -0.03512063\n6 2000-05-31        91.4782    -0.01572207\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  drop_na(monthly_return)  # Remove rows with NA in the 'monthly_return' column\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 2000-01-31        89.1714    -0.04978709\n2 2000-02-29        87.8136    -0.01522686\n3 2000-03-31        96.3223     0.09689501\n4 2000-04-28        92.9394    -0.03512063\n5 2000-05-31        91.4782    -0.01572207\n6 2000-06-30        93.2807     0.01970415\n\n\nVisualize Monthly Returns\n\n# Plot monthly returns over time\nggplot(us_equity_df, aes(x = date, y = monthly_return)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Returns\",\n    x = \"Date\",\n    y = \"Monthly Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nStatistical Summary of Returns\n\n# Summary statistics for monthly returns\nsummary_stats &lt;- us_equity_df %&gt;%\n  summarise(\n    mean_return = mean(monthly_return, na.rm = TRUE),\n    sd_return = sd(monthly_return, na.rm = TRUE),\n    min_return = min(monthly_return, na.rm = TRUE),\n    max_return = max(monthly_return, na.rm = TRUE)\n  )\n\n# Print the summary statistics\nprint(summary_stats)\n\n  mean_return  sd_return min_return max_return\n1 0.007225949 0.04410886 -0.1651874  0.1269836"
  },
  {
    "objectID": "mp05.html#monte-carlo-stimulation",
    "href": "mp05.html#monte-carlo-stimulation",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "# Monte Carlo Simulation of Monthly Returns\nset.seed(123)  # For reproducibility\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- 12  # Number of months\n\nsimulated_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = summary_stats$mean_return, sd = summary_stats$sd_return),\n  ncol = n_sim\n)\n\n# Convert to cumulative return paths\nsimulated_cum_returns &lt;- apply(simulated_returns, 2, function(x) cumprod(1 + x) - 1)\n\n# Convert to a data frame for plotting\nlibrary(tidyr)\nsimulated_cum_df &lt;- data.frame(month = 1:n_months, simulated_cum_returns) %&gt;%\n  pivot_longer(-month, names_to = \"simulation\", values_to = \"cumulative_return\")\n\n# Plot the Monte Carlo simulation results\nlibrary(ggplot2)\nggplot(simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation)) +\n  geom_line(alpha = 0.1, color = \"blue\") +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Calculate summary statistics at the final month\nfinal_month_stats &lt;- simulated_cum_df %&gt;%\n  filter(month == n_months) %&gt;%\n  summarise(\n    mean_return = mean(cumulative_return),\n    median_return = median(cumulative_return),\n    sd_return = sd(cumulative_return),\n    min_return = min(cumulative_return),\n    max_return = max(cumulative_return),\n    prob_positive = mean(cumulative_return &gt; 0)  # Probability of positive returns\n  )\n\n# Print the summary statistics\nprint(final_month_stats)\n\n# A tibble: 1 × 6\n  mean_return median_return sd_return min_return max_return prob_positive\n        &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1      0.0908        0.0821     0.160     -0.312      0.668         0.704\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nsummary_lines &lt;- simulated_cum_df %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    mean_cumulative = mean(cumulative_return),\n    median_cumulative = median(cumulative_return)\n  ) %&gt;%\n  pivot_longer(cols = c(mean_cumulative, median_cumulative),\n               names_to = \"Statistic\",\n               values_to = \"cumulative_return\")\n\n# Add mean and median lines to the plot with a legend\nlibrary(ggplot2)\n\nggplot() +\n  geom_line(data = simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation),\n            alpha = 0.1, color = \"blue\") +\n  geom_line(data = summary_lines, aes(x = month, y = cumulative_return, color = Statistic),\n            size = 1) +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\",\n    color = \"Key Metrics\"\n  ) +\n  theme_minimal() +\n  scale_color_manual(\n    values = c(\"mean_cumulative\" = \"red\", \"median_cumulative\" = \"green\"),\n    labels = c(\"Mean\", \"Median\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n# Ensure columns are in Date format\nwage_df_aligned &lt;- wage_df_monthly %&gt;%\n  filter(date &gt;= min(simulated_cum_df$month) & date &lt;= max(simulated_cum_df$month)) %&gt;%\n  mutate(date = as.Date(date))  # Ensure 'date' is in Date format\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = as.Date(month))  # Ensure 'month' is in Date format\n\n\n# Debugging filter outputs\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  \n\n# A tibble: 1,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-13 X1                   0.196  \n 2 1970-01-13 X2                  -0.0351 \n 3 1970-01-13 X3                   0.190  \n 4 1970-01-13 X4                   0.0343 \n 5 1970-01-13 X5                   0.230  \n 6 1970-01-13 X6                   0.00443\n 7 1970-01-13 X7                   0.0769 \n 8 1970-01-13 X8                   0.312  \n 9 1970-01-13 X9                  -0.0154 \n10 1970-01-13 X10                 -0.0374 \n# ℹ 990 more rows\n\n\n\n# Align dates to the first day of the month\nwage_df_aligned &lt;- wage_df_aligned %&gt;%\n  mutate(date = floor_date(date, unit = \"month\"))\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = floor_date(month, unit = \"month\"))\n\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  # Check filtered simulations\n\n# A tibble: 12,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-01 X1                  -0.0175 \n 2 1970-01-01 X2                   0.0249 \n 3 1970-01-01 X3                  -0.0203 \n 4 1970-01-01 X4                   0.0317 \n 5 1970-01-01 X5                   0.0416 \n 6 1970-01-01 X6                   0.0240 \n 7 1970-01-01 X7                   0.0516 \n 8 1970-01-01 X8                  -0.00250\n 9 1970-01-01 X9                   0.104  \n10 1970-01-01 X10                 -0.00955\n# ℹ 11,990 more rows\n\n\n\n# Regenerate simulation data to align with wage_df_monthly\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- nrow(wage_df_monthly)  # Match the number of months in wage_df_monthly\nsimulated_cum_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = 0.007, sd = 0.04),  # Use realistic mean and SD\n  ncol = n_sim\n)\n\n# Create a data frame with simulated cumulative returns\nsimulated_cum_df &lt;- data.frame(\n  month = rep(wage_df_monthly$date, each = n_sim),\n  simulation = rep(paste0(\"X\", 1:n_sim), times = n_months),\n  cumulative_return = as.vector(simulated_cum_returns)\n)\n\n\n# Merge wage growth data with cumulative returns\ncombined_data &lt;- merge(\n  wage_df_monthly,\n  simulated_cum_df %&gt;%\n    rename(simulation_id = simulation),\n  by.x = \"date\",\n  by.y = \"month\"\n)\n\n# Inspect combined data\nprint(head(combined_data))\n\n        date value simulation_id cumulative_return\n1 2001-01-01  87.6            X1      0.0009748016\n2 2001-01-01  87.6            X2      0.0390376223\n3 2001-01-01  87.6            X3     -0.0404687139\n4 2001-01-01  87.6            X4      0.0242254545\n5 2001-01-01  87.6            X5      0.0156698838\n6 2001-01-01  87.6            X6      0.0454516938\n\n\n\n\n\n\n# Parameters for simulation\ncontribution_rate &lt;- 0.1  # 10% of salary\nstarting_salary &lt;- 50000  # Example starting salary in dollars\n\n# Calculate contributions and portfolio value\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)),  # Adjust salary based on wage growth\n    contribution = monthly_salary * contribution_rate,  # Monthly contributions\n    portfolio_value = contribution * (1 + cumulative_return)  # Portfolio value after investment growth\n  )\n\n# Summarize the portfolio growth for each simulation\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value)\n  )\n\n# Inspect the summary\nprint(head(portfolio_summary))\n\n# A tibble: 6 × 2\n  simulation_id final_portfolio_value\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 X1                           80529.\n2 X10                          82803.\n3 X100                         82632.\n4 X1000                        81777.\n5 X101                         81882.\n6 X102                         83201.\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the distribution of final portfolio values\nggplot(portfolio_summary, aes(x = final_portfolio_value)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Final Portfolio Values\",\n    x = \"Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Probability of achieving a $1M goal\ngoal &lt;- 1000000  # $1M goal\nprobability_of_success &lt;- mean(portfolio_summary$final_portfolio_value &gt;= goal)\n\n# Print the result\nprint(paste(\"Probability of achieving a portfolio value of $1M: \", \n            round(probability_of_success * 100, 2), \"%\"))\n\n[1] \"Probability of achieving a portfolio value of $1M:  0 %\"\n\n\n\n\n\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)) * (1 + cumulative_return),\n    contribution = monthly_salary * (contribution_rate + rnorm(1, 0, 0.01))  # Add random variability\n  )\n\n\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value, na.rm = TRUE)\n  )\n\nwithdrawal_rate &lt;- 0.04  # 4% annual withdrawal rate\nportfolio_summary &lt;- portfolio_summary %&gt;%\n  mutate(retirement_portfolio = final_portfolio_value * (1 - withdrawal_rate))\n\n\n\n\n\n# Plot the distribution of retirement portfolio values\nggplot(portfolio_summary, aes(x = retirement_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Post-Retirement Portfolio Values\",\n    x = \"Retirement Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Number of bootstrap simulations\nn_bootstrap &lt;- 200\n\n# While Working: Bootstrap Wage Growth\nworking_histories &lt;- replicate(\n  n_bootstrap,\n  sample(combined_data$value, size = nrow(combined_data), replace = TRUE),\n  simplify = FALSE\n)\n\n# While Retired: Bootstrap Investment Returns\nretired_histories &lt;- replicate(\n  n_bootstrap,\n  sample(simulated_cum_df$cumulative_return, size = nrow(simulated_cum_df), replace = TRUE),\n  simplify = FALSE\n)\n\n\n\n\n\n# Define withdrawal rate\nwithdrawal_rate &lt;- 0.04\n\n# Simulate bootstrap histories\nbootstrap_results &lt;- lapply(seq_len(n_bootstrap), function(i) {\n  # Simulate while working\n  wage_growth &lt;- working_histories[[i]]\n  cumulative_contributions &lt;- cumsum(starting_salary * contribution_rate * wage_growth / first(wage_growth))\n  \n  # Simulate while retired\n  returns &lt;- retired_histories[[i]]\n  retirement_portfolio &lt;- numeric(length(returns))\n  retirement_portfolio[1] &lt;- tail(cumulative_contributions, 1)  # Starting portfolio value\n  \n  for (t in 2:length(returns)) {\n    retirement_portfolio[t] &lt;- retirement_portfolio[t - 1] * (1 + returns[t]) - (retirement_portfolio[t - 1] * withdrawal_rate)\n    if (retirement_portfolio[t] &lt; 0) {\n      retirement_portfolio[t] &lt;- 0  # Ensure portfolio doesn't go negative\n      break\n    }\n  }\n  \n  # Return results\n  list(\n    working = cumulative_contributions,\n    retired = retirement_portfolio\n  )\n})\n\n\n\n\n\n# Analyze bootstrap results\nbootstrap_analysis &lt;- do.call(rbind, lapply(bootstrap_results, function(res) {\n  data.frame(\n    max_contribution = max(res$working),\n    max_portfolio = max(res$retired, na.rm = TRUE),\n    exhausted = any(res$retired == 0)\n  )\n}))\n\n# Probability of exhausting savings\nprob_exhausted &lt;- mean(bootstrap_analysis$exhausted)\n\n# Summary statistics\nsummary_stats &lt;- bootstrap_analysis %&gt;%\n  summarise(\n    mean_contribution = mean(max_contribution),\n    mean_portfolio = mean(max_portfolio),\n    prob_exhausted = mean(exhausted)\n  )\nprint(summary_stats)\n\n  mean_contribution mean_portfolio prob_exhausted\n1          80108560       80861697              0\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = exhausted)) +\n  geom_bar(fill = \"red\", alpha = 0.7) +\n  labs(title = \"Probability of Portfolio Exhaustion\", x = \"Exhausted Savings\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = max_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Retirement Portfolio Values\", x = \"Portfolio Value ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nBased on the visualizations:\n\nProbability of Exhausting Savings:\n\nThe first chart shows 0 occurrences of exhausted savings (all FALSE for exhausted), suggesting that with the assumptions and bootstrap histories used, none of the retirement scenarios result in portfolio depletion.\n\nDistribution of Portfolio Values:\n\nThe second chart indicates some issue with the histogram visualization:\n\nThe x-axis shows extremely high portfolio values (e.g., 1.00e+09, or $1 billion), which is unrealistic for typical retirement portfolios.\nThe histogram bars appear scattered, possibly due to incorrect scaling or extreme values in the data.\n\n\n\n\n\n\nBased on the simulations, here are the recommendations:\n\n\nThe TRS plan is more suitable for employees who prioritize income stability during retirement. It provides:\n\nPredictable monthly payments.\nProtection against market volatility.\n\n\n\n\nThe ORP plan offers greater flexibility and potentially higher returns. However, the employee must:\n\nBe comfortable with market risk.\nConsider reducing withdrawal rates (e.g., 3% instead of 4%) to mitigate the risk of exhausting savings.\n\n\n\n\n\n\n\nAge and Career Duration:\n\nYounger employees with longer career horizons may benefit from ORP’s growth potential.\nEmployees nearing retirement may prefer the stability of TRS.\n\nStarting Salary:\n\nHigher salaries favor ORP for greater investment contributions.\nLower salaries may make TRS more attractive for guaranteed income.\n\nRisk Tolerance:\n\nTRS suits risk-averse individuals.\nORP suits those willing to accept variability for potential upside.\n\nInflation and Long-Term Sustainability:\n\nTRS benefits may not keep pace with inflation over a long retirement.\nORP portfolios, if managed well, can outpace inflation but require discipline in withdrawals.\n\n\n\n\n\n\n\nBootstrap Sampling:\n\nHistorical data used in simulations may not reflect future economic conditions.\nBootstrap methods assume past trends are indicative of future outcomes.\n\nSimplified Assumptions:\n\nFixed withdrawal rates and contribution percentages may not reflect real-life variability.\nEmployee preferences and external factors (e.g., tax changes) were not modeled.\n\nMarket Risks:\n\nSimulations cannot predict black swan events (e.g., 2008 financial crisis).\n\n\n\n\n\n\nThe choice between TRS and ORP depends on the employee’s individual priorities and circumstances. For those seeking stability and simplicity, TRS is a safer option. For those aiming to maximize retirement wealth and are comfortable with risk, ORP can offer higher potential returns, provided they follow a disciplined withdrawal strategy.\nFinal Recommendation: Align the decision with personal goals, risk tolerance, and financial needs. Regularly review and adjust the chosen plan as circumstances evolve."
  },
  {
    "objectID": "individual-report.html",
    "href": "individual-report.html",
    "title": "Individual-Report",
    "section": "",
    "text": "The transition to electric vehicles (EVs) is important for reducing carbon emissions and addressing climate change. However, widespread adoption faces numerous barriers, with charging costs and infrastructure accessibility standing out as critical factors. Regional disparities in charging costs, coupled with the availability of residential versus commercial charging options, play a significant role in shaping consumer perceptions and choices regarding EV adoption.\nThis report investigates the average cost of EV charging across different regions and examines how the distribution of residential and commercial charging stations influences EV adoption rates. Using datasets related to EV populations, charging stations, and registration activities, this analysis seeks to uncover actionable insights into the challenges and opportunities for promoting EV adoption."
  },
  {
    "objectID": "individual-report.html#introduction",
    "href": "individual-report.html#introduction",
    "title": "Individual-Report",
    "section": "",
    "text": "The transition to electric vehicles (EVs) is important for reducing carbon emissions and addressing climate change. However, widespread adoption faces numerous barriers, with charging costs and infrastructure accessibility standing out as critical factors. Regional disparities in charging costs, coupled with the availability of residential versus commercial charging options, play a significant role in shaping consumer perceptions and choices regarding EV adoption.\nThis report investigates the average cost of EV charging across different regions and examines how the distribution of residential and commercial charging stations influences EV adoption rates. Using datasets related to EV populations, charging stations, and registration activities, this analysis seeks to uncover actionable insights into the challenges and opportunities for promoting EV adoption."
  },
  {
    "objectID": "individual-report.html#data-sets",
    "href": "individual-report.html#data-sets",
    "title": "Individual-Report",
    "section": "Data sets",
    "text": "Data sets\nThe analysis leverages three datasets:\n\nElectric_Vehicle_Population_Data_set.csv\n\nThis dataset includes information on EV populations across various regions, offering insights into adoption patterns.\n\nElectric_Vehicle_Charging_Stations_Data.csv\n\n-   This dataset details charging station types (residential and commercial), their locations, and related attributes, providing a basis for analyzing infrastructure distribution.\n\nElectric_Vehicle_Title_and_Registration_Activity.csv\n\nThis dataset captures EV registration trends over time, helping to correlate infrastructure availability with adoption rates.\n\n\nTo ensure the datasets were suitable for analysis, data cleaning involved filtering for relevant regions, addressing missing values, and categorizing charging stations into residential and commercial types. Where direct cost data was unavailable, proxies were created using station type and regional data."
  },
  {
    "objectID": "individual-report.html#loading-necessary-libraries-and-cleaning-data",
    "href": "individual-report.html#loading-necessary-libraries-and-cleaning-data",
    "title": "Individual-Report",
    "section": "Loading Necessary Libraries and Cleaning Data",
    "text": "Loading Necessary Libraries and Cleaning Data\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2) \n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\nlibrary(tidyr) \n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(readr) \n\n# Load the datasets using absolute paths\nev_population &lt;- read_csv(\"/Users/siddhikataria/Downloads/Electric_Vehicle_Population_Data_set.csv\")\n\nRows: 216772 Columns: 17\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): VIN (1-10), County, City, State, Make, Model, Electric Vehicle Typ...\ndbl  (7): Postal Code, Model Year, Electric Range, Base MSRP, Legislative Di...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncharging_stations &lt;- read_csv(\"/Users/siddhikataria/Downloads/Electric_Vehicle_Charging_Stations_Data.csv\")\n\nRows: 385 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): Station Name, Street Address, City, Access Days Time, EV Level1 EVS...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nregistration_activity &lt;- read_csv(\"/Users/siddhikataria/Downloads/Electric_Vehicle_Title_and_Registration_Activity.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1206489 Columns: 34\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (23): Clean Alternative Fuel Vehicle Type, VIN (1-10), Make, Model, Prim...\ndbl  (8): DOL Vehicle ID, Model Year, Electric Range, Odometer Reading, Sale...\nlgl  (3): Meets 2019 HB 2042 Electric Range Requirement, Meets 2019 HB 2042 ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# Inspect rows and columns for all datasets\ndatasets &lt;- list(\n  \"Electric_Vehicle_Population_Data_set\" = ev_population,\n  \"Electric_Vehicle_Charging_Stations_Data\" = charging_stations,\n  \"Electric_Vehicle_Title_and_Registration_Activity\" = registration_activity\n)\n\n# Display structure of each dataset\nlapply(datasets, function(data) {\n  list(\n    Dimensions = dim(data),\n    Column_Names = colnames(data)\n  )\n})\n\n$Electric_Vehicle_Population_Data_set\n$Electric_Vehicle_Population_Data_set$Dimensions\n[1] 216772     17\n\n$Electric_Vehicle_Population_Data_set$Column_Names\n [1] \"VIN (1-10)\"                                       \n [2] \"County\"                                           \n [3] \"City\"                                             \n [4] \"State\"                                            \n [5] \"Postal Code\"                                      \n [6] \"Model Year\"                                       \n [7] \"Make\"                                             \n [8] \"Model\"                                            \n [9] \"Electric Vehicle Type\"                            \n[10] \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\"\n[11] \"Electric Range\"                                   \n[12] \"Base MSRP\"                                        \n[13] \"Legislative District\"                             \n[14] \"DOL Vehicle ID\"                                   \n[15] \"Vehicle Location\"                                 \n[16] \"Electric Utility\"                                 \n[17] \"2020 Census Tract\"                                \n\n\n$Electric_Vehicle_Charging_Stations_Data\n$Electric_Vehicle_Charging_Stations_Data$Dimensions\n[1] 385   9\n\n$Electric_Vehicle_Charging_Stations_Data$Column_Names\n[1] \"Station Name\"             \"Street Address\"          \n[3] \"City\"                     \"Access Days Time\"        \n[5] \"EV Level1 EVSE Num\"       \"EV Level2 EVSE Num\"      \n[7] \"EV DC Fast Count\"         \"EV Other Info\"           \n[9] \"New Georeferenced Column\"\n\n\n$Electric_Vehicle_Title_and_Registration_Activity\n$Electric_Vehicle_Title_and_Registration_Activity$Dimensions\n[1] 1206489      34\n\n$Electric_Vehicle_Title_and_Registration_Activity$Column_Names\n [1] \"Clean Alternative Fuel Vehicle Type\"                            \n [2] \"VIN (1-10)\"                                                     \n [3] \"DOL Vehicle ID\"                                                 \n [4] \"Model Year\"                                                     \n [5] \"Make\"                                                           \n [6] \"Model\"                                                          \n [7] \"Primary Use\"                                                    \n [8] \"Electric Range\"                                                 \n [9] \"Odometer Reading\"                                               \n[10] \"Odometer Reading Description\"                                   \n[11] \"New or Used Vehicle\"                                            \n[12] \"Sale Price\"                                                     \n[13] \"Sale Date\"                                                      \n[14] \"Base MSRP\"                                                      \n[15] \"Transaction Type\"                                               \n[16] \"Transaction Date\"                                               \n[17] \"Year\"                                                           \n[18] \"County\"                                                         \n[19] \"City\"                                                           \n[20] \"State\"                                                          \n[21] \"Postal Code\"                                                    \n[22] \"2019 HB 2042: Clean Alternative Fuel Vehicle (CAFV) Eligibility\"\n[23] \"Meets 2019 HB 2042 Electric Range Requirement\"                  \n[24] \"Meets 2019 HB 2042 Sale Date Requirement\"                       \n[25] \"Meets 2019 HB 2042 Sale Price/Value Requirement\"                \n[26] \"2019 HB 2042: Battery Range Requirement\"                        \n[27] \"2019 HB 2042: Purchase Date Requirement\"                        \n[28] \"2019 HB 2042: Sale Price/Value Requirement\"                     \n[29] \"Electric Vehicle Fee Paid\"                                      \n[30] \"Transportation Electrification Fee Paid\"                        \n[31] \"Hybrid Vehicle Electrification Fee Paid\"                        \n[32] \"2020 GEOID\"                                                     \n[33] \"Legislative District\"                                           \n[34] \"Electric Utility\"                                               \n\n\n\n# Merge the datasets by City\nmerged_data &lt;- ev_population %&gt;%\n  select(City, `Electric Range`, `Model Year`, `Base MSRP`, `Electric Vehicle Type`) %&gt;%\n  left_join(\n    charging_stations %&gt;%\n      select(City, `EV Level1 EVSE Num`, `EV Level2 EVSE Num`, `EV DC Fast Count`),\n    by = \"City\"\n  ) %&gt;%\n  left_join(\n    registration_activity %&gt;%\n      select(City, `Transaction Type`, `Base MSRP`),\n    by = \"City\"\n  )\n\nWarning in left_join(., charging_stations %&gt;% select(City, `EV Level1 EVSE Num`, : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 218 of `x` matches multiple rows in `y`.\nℹ Row 312 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n# View the first few rows of the merged data\nhead(merged_data)\n\n# A tibble: 6 × 10\n  City      `Electric Range` `Model Year` `Base MSRP.x` `Electric Vehicle Type` \n  &lt;chr&gt;                &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt; &lt;chr&gt;                   \n1 Shoreline               75         2013             0 Battery Electric Vehicl…\n2 Seattle                270         2019             0 Battery Electric Vehicl…\n3 Olalla                   0         2021             0 Battery Electric Vehicl…\n4 Olympia                 25         2017             0 Plug-in Hybrid Electric…\n5 Olympia                 19         2016             0 Plug-in Hybrid Electric…\n6 Bothell                266         2020             0 Battery Electric Vehicl…\n# ℹ 5 more variables: `EV Level1 EVSE Num` &lt;chr&gt;, `EV Level2 EVSE Num` &lt;chr&gt;,\n#   `EV DC Fast Count` &lt;chr&gt;, `Transaction Type` &lt;chr&gt;, `Base MSRP.y` &lt;dbl&gt;\n\n\n\n# Count rows by City for each dataset\nev_population_duplicates &lt;- ev_population %&gt;%\n  count(City) %&gt;%\n  filter(n &gt; 1)\n\ncharging_stations_duplicates &lt;- charging_stations %&gt;%\n  count(City) %&gt;%\n  filter(n &gt; 1)\n\nregistration_activity_duplicates &lt;- registration_activity %&gt;%\n  count(City) %&gt;%\n  filter(n &gt; 1)\n\n# View duplicates\nprint(\"EV Population Duplicates:\")\n\n[1] \"EV Population Duplicates:\"\n\nprint(ev_population_duplicates)\n\n# A tibble: 514 × 2\n   City               n\n   &lt;chr&gt;          &lt;int&gt;\n 1 Aberdeen         200\n 2 Acme              10\n 3 Addy               4\n 4 Airway Heights    45\n 5 Alameda            2\n 6 Alexandria         6\n 7 Algona            45\n 8 Allyn             89\n 9 Almira             2\n10 Amanda Park        3\n# ℹ 504 more rows\n\nprint(\"Charging Stations Duplicates:\")\n\n[1] \"Charging Stations Duplicates:\"\n\nprint(charging_stations_duplicates)\n\n# A tibble: 66 × 2\n   City              n\n   &lt;chr&gt;         &lt;int&gt;\n 1 Berlin            2\n 2 Bethel            2\n 3 Bloomfield        2\n 4 Branford          6\n 5 Bridgeport        5\n 6 Cheshire          2\n 7 Coventry          2\n 8 Danbury          12\n 9 Darien            8\n10 East Hartford     5\n# ℹ 56 more rows\n\nprint(\"Registration Activity Duplicates:\")\n\n[1] \"Registration Activity Duplicates:\"\n\nprint(registration_activity_duplicates)\n\n# A tibble: 1,071 × 2\n   City                        n\n   &lt;chr&gt;                   &lt;int&gt;\n 1 ABERDEEN                 1053\n 2 ABERDEEN PROVING GROUND     4\n 3 ACME                       63\n 4 ADA                         4\n 5 ADAIRSVILLE                 4\n 6 ADDY                       25\n 7 ADNA                        2\n 8 AIRWAY HEIGHTS            321\n 9 ALAMEDA                    10\n10 ALBANY                      6\n# ℹ 1,061 more rows\n\n\n\nev_population_clean &lt;- ev_population %&gt;%\n  group_by(City) %&gt;%\n  summarize(\n    Average_Electric_Range = mean(`Electric Range`, na.rm = TRUE),\n    Average_Base_MSRP = mean(`Base MSRP`, na.rm = TRUE),\n    Most_Common_Vehicle_Type = first(`Electric Vehicle Type`) \n  )\n\n\n# Check unique values in each column\nunique(charging_stations$`EV Level1 EVSE Num`)\n\n[1] \"NONE\" \"4\"    \"8\"    \"2\"    \"1\"   \n\nunique(charging_stations$`EV Level2 EVSE Num`)\n\n [1] \"2\"    \"NONE\" \"1\"    \"4\"    \"3\"    \"10\"   \"5\"    \"14\"   \"6\"    \"7\"   \n[11] \"8\"    \"11\"   \"17\"   \"12\"  \n\nunique(charging_stations$`EV DC Fast Count`)\n\n [1] \"NONE\" \"8\"    \"1\"    \"16\"   \"6\"    \"4\"    \"2\"    \"14\"   \"10\"   \"12\"  \n\n\n\n# Clean and convert columns\ncharging_stations &lt;- charging_stations %&gt;%\n  mutate(\n    `EV Level1 EVSE Num` = as.numeric(ifelse(`EV Level1 EVSE Num` == \"NONE\", 0, `EV Level1 EVSE Num`)),\n    `EV Level2 EVSE Num` = as.numeric(ifelse(`EV Level2 EVSE Num` == \"NONE\", 0, `EV Level2 EVSE Num`)),\n    `EV DC Fast Count` = as.numeric(ifelse(`EV DC Fast Count` == \"NONE\", 0, `EV DC Fast Count`))\n  )\n\n\ncharging_stations_clean &lt;- charging_stations %&gt;%\n  group_by(City) %&gt;%\n  summarize(\n    Total_Residential = sum(`EV Level1 EVSE Num` + `EV Level2 EVSE Num`, na.rm = TRUE),\n    Total_Commercial = sum(`EV DC Fast Count`, na.rm = TRUE)\n  )\n\n# View the cleaned summary\nhead(charging_stations_clean)\n\n# A tibble: 6 × 3\n  City         Total_Residential Total_Commercial\n  &lt;chr&gt;                    &lt;dbl&gt;            &lt;dbl&gt;\n1 Barkhamsted                  2                0\n2 Beacon Falls                 1                0\n3 Berlin                       6                0\n4 Bethany                      2                0\n5 Bethel                       4                0\n6 Bloomfield                   4                0\n\n\n\n# Merge EV population data with charging stations data\nmerged_data &lt;- ev_population_clean %&gt;%\n  left_join(charging_stations_clean, by = \"City\")\n\n# View the first few rows of the merged data\nhead(merged_data)\n\n# A tibble: 6 × 6\n  City           Average_Electric_Range Average_Base_MSRP Most_Common_Vehicle_…¹\n  &lt;chr&gt;                           &lt;dbl&gt;             &lt;dbl&gt; &lt;chr&gt;                 \n1 Aberdeen                         56.9             1218. Battery Electric Vehi…\n2 Aberdeen Prov…                    0                  0  Battery Electric Vehi…\n3 Acme                             41.9                0  Battery Electric Vehi…\n4 Addy                             77                  0  Battery Electric Vehi…\n5 Airway Heights                   50.0                0  Battery Electric Vehi…\n6 Alameda                          10.5                0  Plug-in Hybrid Electr…\n# ℹ abbreviated name: ¹​Most_Common_Vehicle_Type\n# ℹ 2 more variables: Total_Residential &lt;dbl&gt;, Total_Commercial &lt;dbl&gt;\n\n\n\n# Calculate correlation\ncorrelation_results &lt;- merged_data %&gt;%\n  summarize(\n    Residential_Correlation = cor(Total_Residential, Average_Electric_Range, use = \"complete.obs\"),\n    Commercial_Correlation = cor(Total_Commercial, Average_Electric_Range, use = \"complete.obs\")\n  )\n\n# View the correlation results\nprint(correlation_results)\n\n# A tibble: 1 × 2\n  Residential_Correlation Commercial_Correlation\n                    &lt;dbl&gt;                  &lt;dbl&gt;\n1                  -0.119                 -0.104"
  },
  {
    "objectID": "individual-report.html#visualizations",
    "href": "individual-report.html#visualizations",
    "title": "Individual-Report",
    "section": "Visualizations",
    "text": "Visualizations\n\nScatter plots to visualize the relationship between charging station availability and EV adoption.\n\n# Filter out rows with NA values for plotting\nfiltered_data &lt;- merged_data %&gt;%\n  filter(!is.na(Total_Residential) & !is.na(Total_Commercial) & !is.na(Average_Electric_Range))\n\n# Replot for commercial charging stations\nggplot(filtered_data, aes(x = Total_Commercial, y = Average_Electric_Range)) +\n  geom_point(color = \"green\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"orange\") +\n  theme_minimal() +\n  labs(\n    title = \"Commercial Charging Stations vs. Average Electric Range\",\n    x = \"Total Commercial Charging Stations\",\n    y = \"Average Electric Range (miles)\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nBar chart to show the total residential and commercial stations per region\n\n# Bar chart of charging station availability\nggplot(filtered_data, aes(x = reorder(City, -Total_Residential), y = Total_Residential, fill = \"Residential\")) +\n  geom_bar(stat = \"identity\") +\n  geom_bar(aes(y = Total_Commercial, fill = \"Commercial\"), stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  labs(\n    title = \"Residential vs. Commercial Charging Stations by City\",\n    x = \"City\",\n    y = \"Number of Charging Stations\"\n  ) +\n  scale_fill_manual(\n    name = \"Charging Station Type\",\n    values = c(\"Residential\" = \"orange\", \"Commercial\" = \"green\")\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nBar Chart to display the average electric range in each city.\n\n# Bar chart of average EV range by city\nggplot(filtered_data, aes(x = reorder(City, -Average_Electric_Range), y = Average_Electric_Range, fill = \"Average Range\")) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"purple\") +\n  theme_minimal() +\n  labs(\n    title = \"Average Electric Range by City\",\n    x = \"City\",\n    y = \"Average Electric Range (miles)\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nBar Chart to display the total number of residential and commercial charging stations in each city, grouped by station type.\n\n# Filter to show only the top 6 cities with the highest total charging stations\ntop_6_stations &lt;- filtered_data %&gt;%\n  mutate(Total_Stations = Total_Residential + Total_Commercial) %&gt;%\n  arrange(desc(Total_Stations)) %&gt;%\n  slice_head(n = 6)\n\n# Bar chart\nggplot(top_6_stations, aes(x = reorder(City, -Total_Stations))) +\n  geom_bar(aes(y = Total_Residential, fill = \"Residential\"), stat = \"identity\", color = \"black\") +\n  geom_bar(aes(y = Total_Commercial, fill = \"Commercial\"), stat = \"identity\", position = \"dodge\", color = \"black\") +\n  theme_minimal() +\n  labs(\n    title = \"Top 6 Cities by Total Charging Stations\",\n    x = \"City\",\n    y = \"Number of Charging Stations\"\n  ) +\n  scale_fill_manual(\n    name = \"Charging Station Type\",\n    values = c(\"Residential\" = \"orange\", \"Commercial\" = \"green\")\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n\n\n\n\n\n\n\n\n\n\nBar Chart to calculate the average charging cost by city/region and visualize it.\n\n# Prepare data for the top 6 cities by average charging cost\ntop_6_cost &lt;- filtered_data %&gt;%\n  arrange(desc(Average_Base_MSRP)) %&gt;%\n  slice_head(n = 6)\n\n\nggplot(top_6_cost, aes(x = reorder(City, -Average_Base_MSRP), y = Average_Base_MSRP, fill = \"Charging Cost\")) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"orange\") +\n  theme_minimal() +\n  labs(\n    title = \"Top 6 Cities by Average Charging Cost\",\n    x = \"City\",\n    y = \"Average Charging Cost ($)\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))    \n\n\n\n\n\n\n\n\n\n\nScatter plot to show the relationship between adoption rate and the number of charging stations\n\n# Scatter plot: Cost vs. charging infrastructure\nggplot(filtered_data, aes(x = Average_Base_MSRP, y = Total_Residential + Total_Commercial)) +\n  geom_point(color = \"green\", size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"orange\") +\n  theme_minimal() +\n  labs(\n    title = \"Charging Cost vs. Charging Infrastructure\",\n    x = \"Average Charging Cost ($)\",\n    y = \"Total Charging Stations\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "individual-report.html#analysis",
    "href": "individual-report.html#analysis",
    "title": "Individual-Report",
    "section": "Analysis",
    "text": "Analysis\n\n1. Regional Charging Costs\nCharging costs were analyzed by examining the attributes of commercial and residential charging stations. Since direct pricing data was not available, proxy variables such as station type and regional characteristics were used to infer cost differences. Regional groupings were established to identify patterns and disparities.\n\n\n2. Residential vs. Commercial Charging Station Distribution\nThe availability of residential and commercial charging stations was mapped by region using the “Electric_Vehicle_Charging_Stations_Data.csv” data set. Proportions of station types were calculated to identify regions with significant imbalances in infrastructure.\n\n\n3. Correlation with EV Adoption\nTo evaluate the impact of infrastructure on adoption rates, EV registration data from the “Electric_Vehicle_Population_Data_set.csv” and “Electric_Vehicle_Title_and_Registration_Activity.csv” datasets was analyzed alongside charging station distribution. A correlation analysis was performed to determine the strength of relationships between station type availability and adoption rates."
  },
  {
    "objectID": "individual-report.html#insights-based-on-the-visuals",
    "href": "individual-report.html#insights-based-on-the-visuals",
    "title": "Individual-Report",
    "section": "Insights Based on the Visuals:",
    "text": "Insights Based on the Visuals:\n\nCommercial Charging Stations vs. Electric Range:\n\nThe scatter plot with trend lines shows a weak negative correlation. This suggests that the number of commercial charging stations does not significantly impact the average electric range.\n\nResidential vs. Commercial Charging Stations by City:\n\nCities with more residential charging stations (e.g., Fairfield, Middletown) tend to have higher infrastructure availability overall compared to cities with primarily commercial stations. This may indicate that residential stations play a bigger role in supporting EV adoption.\n\nAverage Electric Range by City:\n\nSome cities (e.g., Mystic, Washington) have significantly higher average electric ranges, possibly because they cater to a larger proportion of long-range EVs or due to socioeconomic factors.\n\nAverage Charging Cost by City:\n\nCities like Fairfield and Mystic show higher average charging costs. This cost disparity may reflect differences in infrastructure quality, electricity rates, or station types.\n\nCharging Cost vs. Charging Infrastructure:\n\nThe scatter plot indicates a weak positive correlation between average charging cost and total charging stations. Regions with higher infrastructure availability may have higher overall costs due to commercial charging stations."
  },
  {
    "objectID": "individual-report.html#discussion",
    "href": "individual-report.html#discussion",
    "title": "Individual-Report",
    "section": "Discussion",
    "text": "Discussion\nThe findings underscore the critical role of charging infrastructure in overcoming EV adoption barriers. Lower charging costs in regions with abundant residential stations appear to alleviate consumer concerns, whereas reliance on commercial stations may deter potential adopters due to higher costs.\nPolicymakers and stakeholders should prioritize expanding residential charging networks, especially in urban areas where such options are scarce. This could involve incentivizing property developers to integrate EV charging infrastructure into new residential projects or subsidizing installation costs for homeowners.\nHowever, the analysis faced limitations. The lack of direct pricing data required reliance on proxy measures, which may not fully capture real-world charging costs. Additionally, external factors such as local electricity rates and government incentives were not included but likely influence adoption patterns."
  },
  {
    "objectID": "individual-report.html#conclusion",
    "href": "individual-report.html#conclusion",
    "title": "Individual-Report",
    "section": "Conclusion",
    "text": "Conclusion\nThis study highlights significant disparities in charging costs and infrastructure availability that act as barriers to EV adoption. Expanding residential charging networks and addressing regional cost disparities are critical steps to accelerate the transition to EVs. Future research should incorporate direct pricing data and explore the role of policy interventions in shaping infrastructure development.\nThank you for sharing the outputs of the analyses. Here’s a summary of what we can infer from the visuals and how they relate to your original question:"
  },
  {
    "objectID": "individual-report.html#further-analyses-to-strengthen-the-conclusions",
    "href": "individual-report.html#further-analyses-to-strengthen-the-conclusions",
    "title": "Individual-Report",
    "section": "Further Analyses to Strengthen the Conclusions:",
    "text": "Further Analyses to Strengthen the Conclusions:\n\nCompare EV Adoption Rates Across Cities:\n\nInvestigate whether cities with more residential stations have higher adoption rates.\n\nAnalyze Regional Clusters:\n\nGroup cities based on infrastructure, cost, and adoption rates to identify regions that are excelling or lagging behind.\n\nCombine Cost and Station Availability:\n\nExplore whether a balance between low-cost residential stations and higher-cost commercial stations leads to greater adoption.\n\nIncorporate Time Trends:\n\nExamine how the availability of stations and adoption rates have changed over time in the data set."
  },
  {
    "objectID": "mp04.html",
    "href": "mp04.html",
    "title": "mp04",
    "section": "",
    "text": "The objective of this project is to analyze and compare two retirement plans offered by CUNY using Monte Carlo simulations. By leveraging historical financial data, bootstrap resampling, and Monte Carlo techniques, we aim to assess the likelihood that one plan outperforms the other under various market conditions. This analysis will consider factors like historical market returns, inflation rates, and individual demographics to provide a data-driven recommendation for optimal retirement planning.\nThe analysis is implemented in R using RStudio, taking advantage of packages such as tidyverse, boot, and quantmod for data manipulation, statistical computation, and financial data acquisition. This comprehensive approach ensures robust and replicable results.\n\n\n\n\n\n#Accessing the keys\nalpha_key &lt;- Sys.getenv(\"ALPHAVANTAGE_KEY\")\nfred_key &lt;- Sys.getenv(\"FRED_KEY\")\n\n\n\n\n\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_DAILY_ADJUSTED\",\n  symbol = \"AAPL\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load necessary libraries\nlibrary(httr)\n\n\n\n\n\nlibrary(tibble)\nlibrary(tidyr)\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(dplyr) \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Example API request to fetch data\nresponse &lt;- GET(\"https://www.alphavantage.co/query\", query = list(\n  'function' = \"TIME_SERIES_DAILY\",\n  symbol = \"SP500\",\n  apikey = \"your_api_key\"\n))\n\n# Parse the content of the response\nsp500_data &lt;- content(response, \"parsed\")\n\n\nparams_sp500 &lt;- list(\n  `function` = \"TIME_SERIES_DAILY\",  # Use the free endpoint\n  symbol = \"SPY\",                   # Ticker symbol for SPDR S&P 500 ETF\n  apikey = alpha_key\n)\nresponse_sp500 &lt;- GET(alpha_url, query = params_sp500)\nsp500_data &lt;- content(response_sp500, as = \"parsed\", simplifyVector = TRUE)\n\n# Inspect response structure\nstr(sp500_data)\n\nList of 2\n $ Meta Data          :List of 5\n  ..$ 1. Information   : chr \"Daily Prices (open, high, low, close) and Volumes\"\n  ..$ 2. Symbol        : chr \"SPY\"\n  ..$ 3. Last Refreshed: chr \"2024-12-10\"\n  ..$ 4. Output Size   : chr \"Compact\"\n  ..$ 5. Time Zone     : chr \"US/Eastern\"\n $ Time Series (Daily):List of 100\n  ..$ 2024-12-10:List of 5\n  .. ..$ 1. open  : chr \"605.3700\"\n  .. ..$ 2. high  : chr \"605.8000\"\n  .. ..$ 3. low   : chr \"602.1300\"\n  .. ..$ 4. close : chr \"602.8000\"\n  .. ..$ 5. volume: chr \"37234515\"\n  ..$ 2024-12-09:List of 5\n  .. ..$ 1. open  : chr \"607.6900\"\n  .. ..$ 2. high  : chr \"607.8600\"\n  .. ..$ 3. low   : chr \"604.0800\"\n  .. ..$ 4. close : chr \"604.6800\"\n  .. ..$ 5. volume: chr \"34742738\"\n  ..$ 2024-12-06:List of 5\n  .. ..$ 1. open  : chr \"607.4400\"\n  .. ..$ 2. high  : chr \"609.0700\"\n  .. ..$ 3. low   : chr \"607.0200\"\n  .. ..$ 4. close : chr \"607.8100\"\n  .. ..$ 5. volume: chr \"31241549\"\n  ..$ 2024-12-05:List of 5\n  .. ..$ 1. open  : chr \"607.6600\"\n  .. ..$ 2. high  : chr \"608.4800\"\n  .. ..$ 3. low   : chr \"606.3050\"\n  .. ..$ 4. close : chr \"606.6600\"\n  .. ..$ 5. volume: chr \"28762183\"\n  ..$ 2024-12-04:List of 5\n  .. ..$ 1. open  : chr \"605.6300\"\n  .. ..$ 2. high  : chr \"607.9100\"\n  .. ..$ 3. low   : chr \"604.9500\"\n  .. ..$ 4. close : chr \"607.6600\"\n  .. ..$ 5. volume: chr \"42787561\"\n  ..$ 2024-12-03:List of 5\n  .. ..$ 1. open  : chr \"603.3900\"\n  .. ..$ 2. high  : chr \"604.1600\"\n  .. ..$ 3. low   : chr \"602.3410\"\n  .. ..$ 4. close : chr \"603.9100\"\n  .. ..$ 5. volume: chr \"26906629\"\n  ..$ 2024-12-02:List of 5\n  .. ..$ 1. open  : chr \"602.9700\"\n  .. ..$ 2. high  : chr \"604.3200\"\n  .. ..$ 3. low   : chr \"602.4700\"\n  .. ..$ 4. close : chr \"603.6300\"\n  .. ..$ 5. volume: chr \"31745989\"\n  ..$ 2024-11-29:List of 5\n  .. ..$ 1. open  : chr \"599.6600\"\n  .. ..$ 2. high  : chr \"603.3500\"\n  .. ..$ 3. low   : chr \"599.3800\"\n  .. ..$ 4. close : chr \"602.5500\"\n  .. ..$ 5. volume: chr \"30095740\"\n  ..$ 2024-11-27:List of 5\n  .. ..$ 1. open  : chr \"600.4600\"\n  .. ..$ 2. high  : chr \"600.8500\"\n  .. ..$ 3. low   : chr \"597.2800\"\n  .. ..$ 4. close : chr \"598.8300\"\n  .. ..$ 5. volume: chr \"34000163\"\n  ..$ 2024-11-26:List of 5\n  .. ..$ 1. open  : chr \"598.8000\"\n  .. ..$ 2. high  : chr \"601.3300\"\n  .. ..$ 3. low   : chr \"598.0700\"\n  .. ..$ 4. close : chr \"600.6500\"\n  .. ..$ 5. volume: chr \"45621288\"\n  ..$ 2024-11-25:List of 5\n  .. ..$ 1. open  : chr \"599.5200\"\n  .. ..$ 2. high  : chr \"600.8600\"\n  .. ..$ 3. low   : chr \"595.2000\"\n  .. ..$ 4. close : chr \"597.5300\"\n  .. ..$ 5. volume: chr \"42441393\"\n  ..$ 2024-11-22:List of 5\n  .. ..$ 1. open  : chr \"593.6600\"\n  .. ..$ 2. high  : chr \"596.1500\"\n  .. ..$ 3. low   : chr \"593.1525\"\n  .. ..$ 4. close : chr \"595.5100\"\n  .. ..$ 5. volume: chr \"38226390\"\n  ..$ 2024-11-21:List of 5\n  .. ..$ 1. open  : chr \"593.4000\"\n  .. ..$ 2. high  : chr \"595.1200\"\n  .. ..$ 3. low   : chr \"587.4500\"\n  .. ..$ 4. close : chr \"593.6700\"\n  .. ..$ 5. volume: chr \"46750285\"\n  ..$ 2024-11-20:List of 5\n  .. ..$ 1. open  : chr \"590.3800\"\n  .. ..$ 2. high  : chr \"590.7900\"\n  .. ..$ 3. low   : chr \"584.6300\"\n  .. ..$ 4. close : chr \"590.5000\"\n  .. ..$ 5. volume: chr \"50032576\"\n  ..$ 2024-11-19:List of 5\n  .. ..$ 1. open  : chr \"584.7100\"\n  .. ..$ 2. high  : chr \"591.0450\"\n  .. ..$ 3. low   : chr \"584.0300\"\n  .. ..$ 4. close : chr \"590.3000\"\n  .. ..$ 5. volume: chr \"49412046\"\n  ..$ 2024-11-18:List of 5\n  .. ..$ 1. open  : chr \"586.2200\"\n  .. ..$ 2. high  : chr \"589.4900\"\n  .. ..$ 3. low   : chr \"585.3400\"\n  .. ..$ 4. close : chr \"588.1500\"\n  .. ..$ 5. volume: chr \"37084081\"\n  ..$ 2024-11-15:List of 5\n  .. ..$ 1. open  : chr \"589.7200\"\n  .. ..$ 2. high  : chr \"590.2000\"\n  .. ..$ 3. low   : chr \"583.8600\"\n  .. ..$ 4. close : chr \"585.7500\"\n  .. ..$ 5. volume: chr \"75988766\"\n  ..$ 2024-11-14:List of 5\n  .. ..$ 1. open  : chr \"597.3200\"\n  .. ..$ 2. high  : chr \"597.8100\"\n  .. ..$ 3. low   : chr \"592.6500\"\n  .. ..$ 4. close : chr \"593.3500\"\n  .. ..$ 5. volume: chr \"38904109\"\n  ..$ 2024-11-13:List of 5\n  .. ..$ 1. open  : chr \"597.3700\"\n  .. ..$ 2. high  : chr \"599.2300\"\n  .. ..$ 3. low   : chr \"594.9600\"\n  .. ..$ 4. close : chr \"597.1900\"\n  .. ..$ 5. volume: chr \"47388640\"\n  ..$ 2024-11-12:List of 5\n  .. ..$ 1. open  : chr \"598.6800\"\n  .. ..$ 2. high  : chr \"599.2900\"\n  .. ..$ 3. low   : chr \"594.3700\"\n  .. ..$ 4. close : chr \"596.9000\"\n  .. ..$ 5. volume: chr \"43006128\"\n  ..$ 2024-11-11:List of 5\n  .. ..$ 1. open  : chr \"599.8100\"\n  .. ..$ 2. high  : chr \"600.1700\"\n  .. ..$ 3. low   : chr \"597.0000\"\n  .. ..$ 4. close : chr \"598.7600\"\n  .. ..$ 5. volume: chr \"37586773\"\n  ..$ 2024-11-08:List of 5\n  .. ..$ 1. open  : chr \"596.1700\"\n  .. ..$ 2. high  : chr \"599.6400\"\n  .. ..$ 3. low   : chr \"596.1650\"\n  .. ..$ 4. close : chr \"598.1900\"\n  .. ..$ 5. volume: chr \"46444893\"\n  ..$ 2024-11-07:List of 5\n  .. ..$ 1. open  : chr \"593.0800\"\n  .. ..$ 2. high  : chr \"596.6500\"\n  .. ..$ 3. low   : chr \"592.9999\"\n  .. ..$ 4. close : chr \"595.6100\"\n  .. ..$ 5. volume: chr \"47233212\"\n  ..$ 2024-11-06:List of 5\n  .. ..$ 1. open  : chr \"589.2000\"\n  .. ..$ 2. high  : chr \"591.9300\"\n  .. ..$ 3. low   : chr \"585.3900\"\n  .. ..$ 4. close : chr \"591.0400\"\n  .. ..$ 5. volume: chr \"68181968\"\n  ..$ 2024-11-05:List of 5\n  .. ..$ 1. open  : chr \"570.7400\"\n  .. ..$ 2. high  : chr \"576.7400\"\n  .. ..$ 3. low   : chr \"570.5200\"\n  .. ..$ 4. close : chr \"576.7000\"\n  .. ..$ 5. volume: chr \"39478322\"\n  ..$ 2024-11-04:List of 5\n  .. ..$ 1. open  : chr \"571.1800\"\n  .. ..$ 2. high  : chr \"572.5000\"\n  .. ..$ 3. low   : chr \"567.8900\"\n  .. ..$ 4. close : chr \"569.8100\"\n  .. ..$ 5. volume: chr \"38216975\"\n  ..$ 2024-11-01:List of 5\n  .. ..$ 1. open  : chr \"571.3200\"\n  .. ..$ 2. high  : chr \"575.5500\"\n  .. ..$ 3. low   : chr \"570.6200\"\n  .. ..$ 4. close : chr \"571.0400\"\n  .. ..$ 5. volume: chr \"45667533\"\n  ..$ 2024-10-31:List of 5\n  .. ..$ 1. open  : chr \"575.5600\"\n  .. ..$ 2. high  : chr \"575.6300\"\n  .. ..$ 3. low   : chr \"568.4400\"\n  .. ..$ 4. close : chr \"568.6400\"\n  .. ..$ 5. volume: chr \"60182451\"\n  ..$ 2024-10-30:List of 5\n  .. ..$ 1. open  : chr \"581.2900\"\n  .. ..$ 2. high  : chr \"583.3200\"\n  .. ..$ 3. low   : chr \"579.2900\"\n  .. ..$ 4. close : chr \"580.0100\"\n  .. ..$ 5. volume: chr \"41435839\"\n  ..$ 2024-10-29:List of 5\n  .. ..$ 1. open  : chr \"579.8500\"\n  .. ..$ 2. high  : chr \"582.9070\"\n  .. ..$ 3. low   : chr \"578.4300\"\n  .. ..$ 4. close : chr \"581.7700\"\n  .. ..$ 5. volume: chr \"42899661\"\n  ..$ 2024-10-28:List of 5\n  .. ..$ 1. open  : chr \"582.5800\"\n  .. ..$ 2. high  : chr \"582.7100\"\n  .. ..$ 3. low   : chr \"580.5200\"\n  .. ..$ 4. close : chr \"580.8300\"\n  .. ..$ 5. volume: chr \"30174704\"\n  ..$ 2024-10-25:List of 5\n  .. ..$ 1. open  : chr \"581.5100\"\n  .. ..$ 2. high  : chr \"584.4600\"\n  .. ..$ 3. low   : chr \"578.0800\"\n  .. ..$ 4. close : chr \"579.0400\"\n  .. ..$ 5. volume: chr \"47268176\"\n  ..$ 2024-10-24:List of 5\n  .. ..$ 1. open  : chr \"579.9800\"\n  .. ..$ 2. high  : chr \"580.0600\"\n  .. ..$ 3. low   : chr \"576.5700\"\n  .. ..$ 4. close : chr \"579.2400\"\n  .. ..$ 5. volume: chr \"34979860\"\n  ..$ 2024-10-23:List of 5\n  .. ..$ 1. open  : chr \"581.2600\"\n  .. ..$ 2. high  : chr \"581.7086\"\n  .. ..$ 3. low   : chr \"574.4150\"\n  .. ..$ 4. close : chr \"577.9900\"\n  .. ..$ 5. volume: chr \"49314574\"\n  ..$ 2024-10-22:List of 5\n  .. ..$ 1. open  : chr \"581.0500\"\n  .. ..$ 2. high  : chr \"584.5000\"\n  .. ..$ 3. low   : chr \"580.3800\"\n  .. ..$ 4. close : chr \"583.3200\"\n  .. ..$ 5. volume: chr \"34183835\"\n  ..$ 2024-10-21:List of 5\n  .. ..$ 1. open  : chr \"583.8500\"\n  .. ..$ 2. high  : chr \"584.8500\"\n  .. ..$ 3. low   : chr \"580.6001\"\n  .. ..$ 4. close : chr \"583.6300\"\n  .. ..$ 5. volume: chr \"36439010\"\n  ..$ 2024-10-18:List of 5\n  .. ..$ 1. open  : chr \"584.0700\"\n  .. ..$ 2. high  : chr \"585.3900\"\n  .. ..$ 3. low   : chr \"582.5800\"\n  .. ..$ 4. close : chr \"584.5900\"\n  .. ..$ 5. volume: chr \"37416801\"\n  ..$ 2024-10-17:List of 5\n  .. ..$ 1. open  : chr \"585.9100\"\n  .. ..$ 2. high  : chr \"586.1200\"\n  .. ..$ 3. low   : chr \"582.1600\"\n  .. ..$ 4. close : chr \"582.3500\"\n  .. ..$ 5. volume: chr \"34393714\"\n  ..$ 2024-10-16:List of 5\n  .. ..$ 1. open  : chr \"579.7800\"\n  .. ..$ 2. high  : chr \"582.8300\"\n  .. ..$ 3. low   : chr \"578.9600\"\n  .. ..$ 4. close : chr \"582.3000\"\n  .. ..$ 5. volume: chr \"30725436\"\n  ..$ 2024-10-15:List of 5\n  .. ..$ 1. open  : chr \"584.5900\"\n  .. ..$ 2. high  : chr \"584.9000\"\n  .. ..$ 3. low   : chr \"578.5450\"\n  .. ..$ 4. close : chr \"579.7800\"\n  .. ..$ 5. volume: chr \"54203636\"\n  ..$ 2024-10-14:List of 5\n  .. ..$ 1. open  : chr \"581.2200\"\n  .. ..$ 2. high  : chr \"585.2700\"\n  .. ..$ 3. low   : chr \"580.7300\"\n  .. ..$ 4. close : chr \"584.3200\"\n  .. ..$ 5. volume: chr \"36217215\"\n  ..$ 2024-10-11:List of 5\n  .. ..$ 1. open  : chr \"576.0500\"\n  .. ..$ 2. high  : chr \"580.3300\"\n  .. ..$ 3. low   : chr \"575.9100\"\n  .. ..$ 4. close : chr \"579.5800\"\n  .. ..$ 5. volume: chr \"42267994\"\n  ..$ 2024-10-10:List of 5\n  .. ..$ 1. open  : chr \"575.7700\"\n  .. ..$ 2. high  : chr \"577.5800\"\n  .. ..$ 3. low   : chr \"574.4900\"\n  .. ..$ 4. close : chr \"576.1300\"\n  .. ..$ 5. volume: chr \"44138060\"\n  ..$ 2024-10-09:List of 5\n  .. ..$ 1. open  : chr \"573.1600\"\n  .. ..$ 2. high  : chr \"577.7100\"\n  .. ..$ 3. low   : chr \"572.5500\"\n  .. ..$ 4. close : chr \"577.1400\"\n  .. ..$ 5. volume: chr \"37912244\"\n  ..$ 2024-10-08:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"573.7800\"\n  .. ..$ 3. low   : chr \"569.5299\"\n  .. ..$ 4. close : chr \"573.1700\"\n  .. ..$ 5. volume: chr \"37398693\"\n  ..$ 2024-10-07:List of 5\n  .. ..$ 1. open  : chr \"571.3000\"\n  .. ..$ 2. high  : chr \"571.9599\"\n  .. ..$ 3. low   : chr \"566.6300\"\n  .. ..$ 4. close : chr \"567.8000\"\n  .. ..$ 5. volume: chr \"49964690\"\n  ..$ 2024-10-04:List of 5\n  .. ..$ 1. open  : chr \"572.3500\"\n  .. ..$ 2. high  : chr \"573.3600\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"572.9800\"\n  .. ..$ 5. volume: chr \"43005186\"\n  ..$ 2024-10-03:List of 5\n  .. ..$ 1. open  : chr \"567.3600\"\n  .. ..$ 2. high  : chr \"569.8025\"\n  .. ..$ 3. low   : chr \"565.4900\"\n  .. ..$ 4. close : chr \"567.8200\"\n  .. ..$ 5. volume: chr \"40846466\"\n  ..$ 2024-10-02:List of 5\n  .. ..$ 1. open  : chr \"567.7100\"\n  .. ..$ 2. high  : chr \"569.9000\"\n  .. ..$ 3. low   : chr \"565.2700\"\n  .. ..$ 4. close : chr \"568.8600\"\n  .. ..$ 5. volume: chr \"38097798\"\n  ..$ 2024-10-01:List of 5\n  .. ..$ 1. open  : chr \"573.4000\"\n  .. ..$ 2. high  : chr \"574.0622\"\n  .. ..$ 3. low   : chr \"566.0000\"\n  .. ..$ 4. close : chr \"568.6200\"\n  .. ..$ 5. volume: chr \"72668778\"\n  ..$ 2024-09-30:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"574.3800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"573.7600\"\n  .. ..$ 5. volume: chr \"63655448\"\n  ..$ 2024-09-27:List of 5\n  .. ..$ 1. open  : chr \"573.3900\"\n  .. ..$ 2. high  : chr \"574.2200\"\n  .. ..$ 3. low   : chr \"570.4200\"\n  .. ..$ 4. close : chr \"571.4700\"\n  .. ..$ 5. volume: chr \"42100928\"\n  ..$ 2024-09-26:List of 5\n  .. ..$ 1. open  : chr \"574.3800\"\n  .. ..$ 2. high  : chr \"574.7100\"\n  .. ..$ 3. low   : chr \"569.9000\"\n  .. ..$ 4. close : chr \"572.3000\"\n  .. ..$ 5. volume: chr \"48336004\"\n  ..$ 2024-09-25:List of 5\n  .. ..$ 1. open  : chr \"571.1400\"\n  .. ..$ 2. high  : chr \"571.8900\"\n  .. ..$ 3. low   : chr \"568.9100\"\n  .. ..$ 4. close : chr \"570.0400\"\n  .. ..$ 5. volume: chr \"38428587\"\n  ..$ 2024-09-24:List of 5\n  .. ..$ 1. open  : chr \"570.4800\"\n  .. ..$ 2. high  : chr \"571.3600\"\n  .. ..$ 3. low   : chr \"567.6000\"\n  .. ..$ 4. close : chr \"571.3000\"\n  .. ..$ 5. volume: chr \"46805672\"\n  ..$ 2024-09-23:List of 5\n  .. ..$ 1. open  : chr \"569.3400\"\n  .. ..$ 2. high  : chr \"570.3325\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"569.6700\"\n  .. ..$ 5. volume: chr \"44116922\"\n  ..$ 2024-09-20:List of 5\n  .. ..$ 1. open  : chr \"567.8400\"\n  .. ..$ 2. high  : chr \"569.3100\"\n  .. ..$ 3. low   : chr \"565.1700\"\n  .. ..$ 4. close : chr \"568.2500\"\n  .. ..$ 5. volume: chr \"77503110\"\n  ..$ 2024-09-19:List of 5\n  .. ..$ 1. open  : chr \"571.0100\"\n  .. ..$ 2. high  : chr \"572.8800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"570.9800\"\n  .. ..$ 5. volume: chr \"75315470\"\n  ..$ 2024-09-18:List of 5\n  .. ..$ 1. open  : chr \"563.7400\"\n  .. ..$ 2. high  : chr \"568.6900\"\n  .. ..$ 3. low   : chr \"560.8300\"\n  .. ..$ 4. close : chr \"561.4000\"\n  .. ..$ 5. volume: chr \"59044937\"\n  ..$ 2024-09-17:List of 5\n  .. ..$ 1. open  : chr \"565.1000\"\n  .. ..$ 2. high  : chr \"566.5800\"\n  .. ..$ 3. low   : chr \"560.7950\"\n  .. ..$ 4. close : chr \"563.0700\"\n  .. ..$ 5. volume: chr \"49320970\"\n  ..$ 2024-09-16:List of 5\n  .. ..$ 1. open  : chr \"561.7400\"\n  .. ..$ 2. high  : chr \"563.1100\"\n  .. ..$ 3. low   : chr \"559.9000\"\n  .. ..$ 4. close : chr \"562.8400\"\n  .. ..$ 5. volume: chr \"36656122\"\n  ..$ 2024-09-13:List of 5\n  .. ..$ 1. open  : chr \"559.7100\"\n  .. ..$ 2. high  : chr \"563.0300\"\n  .. ..$ 3. low   : chr \"559.4500\"\n  .. ..$ 4. close : chr \"562.0100\"\n  .. ..$ 5. volume: chr \"39310501\"\n  ..$ 2024-09-12:List of 5\n  .. ..$ 1. open  : chr \"555.0100\"\n  .. ..$ 2. high  : chr \"559.4000\"\n  .. ..$ 3. low   : chr \"552.7400\"\n  .. ..$ 4. close : chr \"559.0900\"\n  .. ..$ 5. volume: chr \"51892735\"\n  ..$ 2024-09-11:List of 5\n  .. ..$ 1. open  : chr \"548.7000\"\n  .. ..$ 2. high  : chr \"555.3600\"\n  .. ..$ 3. low   : chr \"539.9600\"\n  .. ..$ 4. close : chr \"554.4200\"\n  .. ..$ 5. volume: chr \"75248608\"\n  ..$ 2024-09-10:List of 5\n  .. ..$ 1. open  : chr \"548.3600\"\n  .. ..$ 2. high  : chr \"549.1500\"\n  .. ..$ 3. low   : chr \"543.3800\"\n  .. ..$ 4. close : chr \"548.7900\"\n  .. ..$ 5. volume: chr \"36394579\"\n  ..$ 2024-09-09:List of 5\n  .. ..$ 1. open  : chr \"544.6500\"\n  .. ..$ 2. high  : chr \"547.7100\"\n  .. ..$ 3. low   : chr \"542.6800\"\n  .. ..$ 4. close : chr \"546.4100\"\n  .. ..$ 5. volume: chr \"40445822\"\n  ..$ 2024-09-06:List of 5\n  .. ..$ 1. open  : chr \"549.9400\"\n  .. ..$ 2. high  : chr \"551.6000\"\n  .. ..$ 3. low   : chr \"539.4400\"\n  .. ..$ 4. close : chr \"540.3600\"\n  .. ..$ 5. volume: chr \"68493805\"\n  ..$ 2024-09-05:List of 5\n  .. ..$ 1. open  : chr \"550.8900\"\n  .. ..$ 2. high  : chr \"553.7995\"\n  .. ..$ 3. low   : chr \"547.1000\"\n  .. ..$ 4. close : chr \"549.6100\"\n  .. ..$ 5. volume: chr \"44264258\"\n  ..$ 2024-09-04:List of 5\n  .. ..$ 1. open  : chr \"550.2000\"\n  .. ..$ 2. high  : chr \"554.4300\"\n  .. ..$ 3. low   : chr \"549.4600\"\n  .. ..$ 4. close : chr \"550.9500\"\n  .. ..$ 5. volume: chr \"46232483\"\n  ..$ 2024-09-03:List of 5\n  .. ..$ 1. open  : chr \"560.4700\"\n  .. ..$ 2. high  : chr \"560.8100\"\n  .. ..$ 3. low   : chr \"549.5100\"\n  .. ..$ 4. close : chr \"552.0800\"\n  .. ..$ 5. volume: chr \"60600113\"\n  ..$ 2024-08-30:List of 5\n  .. ..$ 1. open  : chr \"560.7700\"\n  .. ..$ 2. high  : chr \"564.2000\"\n  .. ..$ 3. low   : chr \"557.1400\"\n  .. ..$ 4. close : chr \"563.6800\"\n  .. ..$ 5. volume: chr \"62700110\"\n  ..$ 2024-08-29:List of 5\n  .. ..$ 1. open  : chr \"560.3100\"\n  .. ..$ 2. high  : chr \"563.6800\"\n  .. ..$ 3. low   : chr \"557.1800\"\n  .. ..$ 4. close : chr \"558.3500\"\n  .. ..$ 5. volume: chr \"38715176\"\n  ..$ 2024-08-28:List of 5\n  .. ..$ 1. open  : chr \"561.2100\"\n  .. ..$ 2. high  : chr \"561.6500\"\n  .. ..$ 3. low   : chr \"555.0400\"\n  .. ..$ 4. close : chr \"558.3000\"\n  .. ..$ 5. volume: chr \"41066024\"\n  ..$ 2024-08-27:List of 5\n  .. ..$ 1. open  : chr \"559.4900\"\n  .. ..$ 2. high  : chr \"562.0600\"\n  .. ..$ 3. low   : chr \"558.3200\"\n  .. ..$ 4. close : chr \"561.5600\"\n  .. ..$ 5. volume: chr \"32693898\"\n  ..$ 2024-08-26:List of 5\n  .. ..$ 1. open  : chr \"563.1800\"\n  .. ..$ 2. high  : chr \"563.9100\"\n  .. ..$ 3. low   : chr \"559.0500\"\n  .. ..$ 4. close : chr \"560.7900\"\n  .. ..$ 5. volume: chr \"35788609\"\n  ..$ 2024-08-23:List of 5\n  .. ..$ 1. open  : chr \"559.5300\"\n  .. ..$ 2. high  : chr \"563.0900\"\n  .. ..$ 3. low   : chr \"557.2900\"\n  .. ..$ 4. close : chr \"562.1300\"\n  .. ..$ 5. volume: chr \"50639393\"\n  ..$ 2024-08-22:List of 5\n  .. ..$ 1. open  : chr \"562.5600\"\n  .. ..$ 2. high  : chr \"563.1800\"\n  .. ..$ 3. low   : chr \"554.9800\"\n  .. ..$ 4. close : chr \"556.2200\"\n  .. ..$ 5. volume: chr \"56121456\"\n  ..$ 2024-08-21:List of 5\n  .. ..$ 1. open  : chr \"559.7700\"\n  .. ..$ 2. high  : chr \"562.1100\"\n  .. ..$ 3. low   : chr \"554.7300\"\n  .. ..$ 4. close : chr \"560.6200\"\n  .. ..$ 5. volume: chr \"41514600\"\n  ..$ 2024-08-20:List of 5\n  .. ..$ 1. open  : chr \"559.1500\"\n  .. ..$ 2. high  : chr \"560.8400\"\n  .. ..$ 3. low   : chr \"557.3250\"\n  .. ..$ 4. close : chr \"558.7000\"\n  .. ..$ 5. volume: chr \"33732264\"\n  ..$ 2024-08-19:List of 5\n  .. ..$ 1. open  : chr \"554.7300\"\n  .. ..$ 2. high  : chr \"559.6100\"\n  .. ..$ 3. low   : chr \"553.8600\"\n  .. ..$ 4. close : chr \"559.6100\"\n  .. ..$ 5. volume: chr \"39121793\"\n  ..$ 2024-08-16:List of 5\n  .. ..$ 1. open  : chr \"551.4200\"\n  .. ..$ 2. high  : chr \"555.0200\"\n  .. ..$ 3. low   : chr \"551.2600\"\n  .. ..$ 4. close : chr \"554.3100\"\n  .. ..$ 5. volume: chr \"44430728\"\n  ..$ 2024-08-15:List of 5\n  .. ..$ 1. open  : chr \"549.5000\"\n  .. ..$ 2. high  : chr \"553.3600\"\n  .. ..$ 3. low   : chr \"548.8800\"\n  .. ..$ 4. close : chr \"553.0700\"\n  .. ..$ 5. volume: chr \"60846812\"\n  ..$ 2024-08-14:List of 5\n  .. ..$ 1. open  : chr \"542.8500\"\n  .. ..$ 2. high  : chr \"544.9600\"\n  .. ..$ 3. low   : chr \"540.1200\"\n  .. ..$ 4. close : chr \"543.7500\"\n  .. ..$ 5. volume: chr \"42446929\"\n  ..$ 2024-08-13:List of 5\n  .. ..$ 1. open  : chr \"536.5300\"\n  .. ..$ 2. high  : chr \"542.2800\"\n  .. ..$ 3. low   : chr \"536.2800\"\n  .. ..$ 4. close : chr \"542.0400\"\n  .. ..$ 5. volume: chr \"52333073\"\n  ..$ 2024-08-12:List of 5\n  .. ..$ 1. open  : chr \"534.2100\"\n  .. ..$ 2. high  : chr \"535.7300\"\n  .. ..$ 3. low   : chr \"530.9500\"\n  .. ..$ 4. close : chr \"533.2700\"\n  .. ..$ 5. volume: chr \"42542069\"\n  ..$ 2024-08-09:List of 5\n  .. ..$ 1. open  : chr \"529.8100\"\n  .. ..$ 2. high  : chr \"534.5100\"\n  .. ..$ 3. low   : chr \"528.5600\"\n  .. ..$ 4. close : chr \"532.9900\"\n  .. ..$ 5. volume: chr \"45619558\"\n  ..$ 2024-08-08:List of 5\n  .. ..$ 1. open  : chr \"523.9100\"\n  .. ..$ 2. high  : chr \"531.2900\"\n  .. ..$ 3. low   : chr \"521.8400\"\n  .. ..$ 4. close : chr \"530.6500\"\n  .. ..$ 5. volume: chr \"63276589\"\n  ..$ 2024-08-07:List of 5\n  .. ..$ 1. open  : chr \"528.4700\"\n  .. ..$ 2. high  : chr \"531.5900\"\n  .. ..$ 3. low   : chr \"518.0519\"\n  .. ..$ 4. close : chr \"518.6600\"\n  .. ..$ 5. volume: chr \"70698340\"\n  ..$ 2024-08-06:List of 5\n  .. ..$ 1. open  : chr \"519.2200\"\n  .. ..$ 2. high  : chr \"529.7500\"\n  .. ..$ 3. low   : chr \"517.8700\"\n  .. ..$ 4. close : chr \"522.1500\"\n  .. ..$ 5. volume: chr \"84826312\"\n  ..$ 2024-08-05:List of 5\n  .. ..$ 1. open  : chr \"511.6400\"\n  .. ..$ 2. high  : chr \"523.5800\"\n  .. ..$ 3. low   : chr \"510.2700\"\n  .. ..$ 4. close : chr \"517.3800\"\n  .. ..$ 5. volume: chr \"146267391\"\n  ..$ 2024-08-02:List of 5\n  .. ..$ 1. open  : chr \"535.7500\"\n  .. ..$ 2. high  : chr \"536.9900\"\n  .. ..$ 3. low   : chr \"528.6000\"\n  .. ..$ 4. close : chr \"532.9000\"\n  .. ..$ 5. volume: chr \"82789070\"\n  ..$ 2024-08-01:List of 5\n  .. ..$ 1. open  : chr \"552.5700\"\n  .. ..$ 2. high  : chr \"554.8688\"\n  .. ..$ 3. low   : chr \"539.4300\"\n  .. ..$ 4. close : chr \"543.0100\"\n  .. ..$ 5. volume: chr \"76428732\"\n  ..$ 2024-07-31:List of 5\n  .. ..$ 1. open  : chr \"548.9800\"\n  .. ..$ 2. high  : chr \"553.5000\"\n  .. ..$ 3. low   : chr \"547.5799\"\n  .. ..$ 4. close : chr \"550.8100\"\n  .. ..$ 5. volume: chr \"65663388\"\n  ..$ 2024-07-30:List of 5\n  .. ..$ 1. open  : chr \"546.2600\"\n  .. ..$ 2. high  : chr \"547.3400\"\n  .. ..$ 3. low   : chr \"538.5150\"\n  .. ..$ 4. close : chr \"542.0000\"\n  .. ..$ 5. volume: chr \"46853632\"\n  ..$ 2024-07-29:List of 5\n  .. ..$ 1. open  : chr \"546.0200\"\n  .. ..$ 2. high  : chr \"547.0500\"\n  .. ..$ 3. low   : chr \"542.7200\"\n  .. ..$ 4. close : chr \"544.7600\"\n  .. ..$ 5. volume: chr \"39515824\"\n  ..$ 2024-07-26:List of 5\n  .. ..$ 1. open  : chr \"542.2800\"\n  .. ..$ 2. high  : chr \"547.1900\"\n  .. ..$ 3. low   : chr \"541.4900\"\n  .. ..$ 4. close : chr \"544.4400\"\n  .. ..$ 5. volume: chr \"53763788\"\n  ..$ 2024-07-25:List of 5\n  .. ..$ 1. open  : chr \"541.3500\"\n  .. ..$ 2. high  : chr \"547.4550\"\n  .. ..$ 3. low   : chr \"537.4500\"\n  .. ..$ 4. close : chr \"538.4100\"\n  .. ..$ 5. volume: chr \"61158288\"\n  ..$ 2024-07-24:List of 5\n  .. ..$ 1. open  : chr \"548.8600\"\n  .. ..$ 2. high  : chr \"549.1700\"\n  .. ..$ 3. low   : chr \"540.2900\"\n  .. ..$ 4. close : chr \"541.2300\"\n  .. ..$ 5. volume: chr \"74515266\"\n  ..$ 2024-07-23:List of 5\n  .. ..$ 1. open  : chr \"554.5400\"\n  .. ..$ 2. high  : chr \"556.7350\"\n  .. ..$ 3. low   : chr \"553.2750\"\n  .. ..$ 4. close : chr \"553.7800\"\n  .. ..$ 5. volume: chr \"34439561\"\n  .. [list output truncated]\n\n\n\nlibrary(httr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.2\n✔ ggplot2   3.5.1     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Extract and parse the \"Time Series (Daily)\" data\nsp500_data_clean &lt;- sp500_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;% # Convert list to tibble\n  unnest_wider(Metrics) %&gt;% # Flatten the nested list in \"Metrics\"\n  mutate(\n    Date = as.Date(Date), # Convert date to Date format\n    `1. open` = as.numeric(`1. open`),\n    `2. high` = as.numeric(`2. high`),\n    `3. low` = as.numeric(`3. low`),\n    `4. close` = as.numeric(`4. close`),\n    `5. volume` = as.numeric(`5. volume`)\n  )\n\n# Inspect the cleaned data\nhead(sp500_data_clean)\n\n# A tibble: 6 × 6\n  Date       `1. open` `2. high` `3. low` `4. close` `5. volume`\n  &lt;date&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 2024-12-10      605.      606.     602.       603.    37234515\n2 2024-12-09      608.      608.     604.       605.    34742738\n3 2024-12-06      607.      609.     607.       608.    31241549\n4 2024-12-05      608.      608.     606.       607.    28762183\n5 2024-12-04      606.      608.     605.       608.    42787561\n6 2024-12-03      603.      604.     602.       604.    26906629\n\n\n\n\n\n\nfred_url &lt;- paste0(\"https://api.stlouisfed.org/fred/series/observations\")\nfred_params &lt;- list(\n  series_id = \"GDP\",\n  api_key = fred_key,\n  file_type = \"json\"\n)\nfred_response &lt;- GET(fred_url, query = fred_params)\nfred_data &lt;- content(fred_response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load required libraries\nlibrary(tidyverse)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Limit to most recent 1 year (365 days) to reduce data points\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  filter(Date &gt;= as.Date(max(Date)) - 365)\n\n# Precompute and downsample moving averages to reduce computation\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  mutate(\n    ma_30 = zoo::rollapply(`4. close`, width = 30, FUN = mean, fill = NA, align = \"right\"),\n    ma_90 = zoo::rollapply(`4. close`, width = 90, FUN = mean, fill = NA, align = \"right\")\n  ) %&gt;%\n  # Downsample data (keep every 5th row for faster plotting)\n  slice(seq(1, n(), by = 5))\n\n# Plot Closing Prices with Moving Averages\nggplot(sp500_data_clean, aes(x = Date)) +\n  geom_line(aes(y = `4. close`, color = \"Closing Price\"), size = 0.5) +\n  geom_line(aes(y = ma_30, color = \"30-Day Moving Avg\"), size = 0.5) +\n  geom_line(aes(y = ma_90, color = \"90-Day Moving Avg\"), size = 0.5) +\n  labs(\n    title = \"S&P 500 Closing Prices with Moving Averages\",\n    x = \"Date\",\n    y = \"Price ($)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n# Parse FRED Data\ngdp_data &lt;- fred_data[[\"observations\"]] %&gt;%\n  tibble::as_tibble() %&gt;%\n  mutate(\n    date = as.Date(date),             # Convert 'date' column to Date format\n    value = value         # Convert 'value' column to numeric (invalid values become NA)\n  )\n\n\n\n\n\n\nggplot(sp500_data_clean, aes(x = Date, y = `4. close`)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Closing Prices\",\n    x = \"Date\",\n    y = \"Closing Price ($)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nstr(fred_data)\n\nList of 13\n $ realtime_start   : chr \"2024-11-30\"\n $ realtime_end     : chr \"2024-11-30\"\n $ observation_start: chr \"1600-01-01\"\n $ observation_end  : chr \"9999-12-31\"\n $ units            : chr \"lin\"\n $ output_type      : int 1\n $ file_type        : chr \"json\"\n $ order_by         : chr \"observation_date\"\n $ sort_order       : chr \"asc\"\n $ count            : int 315\n $ offset           : int 0\n $ limit            : int 100000\n $ observations     :'data.frame':  315 obs. of  4 variables:\n  ..$ realtime_start: chr [1:315] \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" ...\n  ..$ realtime_end  : chr [1:315] \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" ...\n  ..$ date          : chr [1:315] \"1946-01-01\" \"1946-04-01\" \"1946-07-01\" \"1946-10-01\" ...\n  ..$ value         : chr [1:315] \".\" \".\" \".\" \".\" ...\n\n\n\nlibrary(tidyverse)\n\n# Extract and clean the observations\ngdp_data_clean &lt;- fred_data$observations %&gt;%\n  mutate(\n    date = as.Date(date),           # Convert date to Date format\n    value = as.numeric(value)       # Convert value to numeric, invalid entries become NA\n  ) %&gt;%\n  filter(!is.na(value))             # Remove rows with NA in the value column\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Inspect the cleaned data\nhead(gdp_data_clean)\n\n  realtime_start realtime_end       date   value\n1     2024-11-30   2024-11-30 1947-01-01 243.164\n2     2024-11-30   2024-11-30 1947-04-01 245.968\n3     2024-11-30   2024-11-30 1947-07-01 249.585\n4     2024-11-30   2024-11-30 1947-10-01 259.745\n5     2024-11-30   2024-11-30 1948-01-01 265.742\n6     2024-11-30   2024-11-30 1948-04-01 272.567\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  labs(\n    title = \"GDP Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  geom_smooth(method = \"loess\", color = \"blue\", se = FALSE) +\n  labs(\n    title = \"GDP Trend Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\ngdp_yoy &lt;- gdp_data_clean %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;% # Extract year from date\n  group_by(year) %&gt;%\n  summarize(avg_gdp = mean(value, na.rm = TRUE)) %&gt;%\n  mutate(\n    yoy_growth = (avg_gdp - lag(avg_gdp)) / lag(avg_gdp) * 100 # YoY growth\n  )\n\n# Inspect the YoY Growth Data\nhead(gdp_yoy)\n\n# A tibble: 6 × 3\n   year avg_gdp yoy_growth\n  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1  1947    250.     NA    \n2  1948    274.      9.96 \n3  1949    272.     -0.726\n4  1950    300.     10.0  \n5  1951    347.     15.7  \n6  1952    367.      5.89 \n\n\n\nggplot(gdp_yoy, aes(x = year, y = yoy_growth)) +\n  geom_col(fill = \"purple\") +\n  labs(\n    title = \"Year-over-Year GDP Growth\",\n    x = \"Year\",\n    y = \"YoY Growth (%)\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nwage_data &lt;- data.frame(\n  date = c(\"2001-01-01\", \"2001-04-01\", \"2001-07-01\", \"2001-10-01\", \"2002-01-01\", \"2002-04-01\"),\n  value = c(\"87.6\", \"88.4\", \"89.2\", \"90.0\", \"90.7\", \"91.6\")\n)\n\n\n# Process wage growth data\nlibrary(dplyr)\nlibrary(tidyr)\n\nwage_df &lt;- wage_data %&gt;%\n  select(date, value) %&gt;%  # Select only the relevant columns\n  mutate(\n    value = ifelse(value == \".\", NA, as.numeric(value)),  # Replace \".\" with NA and convert to numeric\n    date = as.Date(date)  # Ensure date is in Date format\n  ) %&gt;%\n  drop_na(value)  # Remove rows where value is NA\n\n# Print the first few rows to confirm\nhead(wage_df)\n\n        date value\n1 2001-01-01  87.6\n2 2001-04-01  88.4\n3 2001-07-01  89.2\n4 2001-10-01  90.0\n5 2002-01-01  90.7\n6 2002-04-01  91.6\n\n# Interpolate data to monthly frequency if needed\nwage_df_monthly &lt;- wage_df %&gt;%\n  complete(date = seq.Date(min(date), max(date), by = \"month\")) %&gt;%  # Fill missing months\n  fill(value, .direction = \"down\")  # Fill missing values by carrying forward\n\n\nlibrary(ggplot2)\n\n# Plot the wage growth data\nggplot(wage_df_monthly, aes(x = date, y = value)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"Wage Growth Over Time\",\n    x = \"Date\",\n    y = \"Wage Index Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Example for fetching S&P 500 monthly adjusted close prices\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_MONTHLY_ADJUSTED\",\n  symbol = \"SPY\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\n\n# Parse the content\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n# Extract and process data\nlibrary(dplyr)\nmonthly_data &lt;- alpha_data[[\"Monthly Adjusted Time Series\"]]\nus_equity_df &lt;- data.frame(\n  date = as.Date(names(monthly_data)),\n  adjusted_close = as.numeric(sapply(monthly_data, function(x) x[[\"5. adjusted close\"]]))\n)\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close\n1 2024-12-10       602.8000\n2 2024-11-29       602.5500\n3 2024-10-31       568.6400\n4 2024-09-30       573.7600\n5 2024-08-30       561.9538\n6 2024-07-31       549.1232\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the S&P 500 adjusted close prices\nggplot(us_equity_df, aes(x = date, y = adjusted_close)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Adjusted Close Prices\",\n    x = \"Date\",\n    y = \"Adjusted Close Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  arrange(date) %&gt;%  # Ensure data is sorted by date\n  mutate(\n    monthly_return = adjusted_close / lag(adjusted_close) - 1  # Calculate monthly returns\n  )\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 1999-12-31        93.8436             NA\n2 2000-01-31        89.1714    -0.04978709\n3 2000-02-29        87.8136    -0.01522686\n4 2000-03-31        96.3223     0.09689501\n5 2000-04-28        92.9394    -0.03512063\n6 2000-05-31        91.4782    -0.01572207\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  drop_na(monthly_return)  # Remove rows with NA in the 'monthly_return' column\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 2000-01-31        89.1714    -0.04978709\n2 2000-02-29        87.8136    -0.01522686\n3 2000-03-31        96.3223     0.09689501\n4 2000-04-28        92.9394    -0.03512063\n5 2000-05-31        91.4782    -0.01572207\n6 2000-06-30        93.2807     0.01970415\n\n\nVisualize Monthly Returns\n\n# Plot monthly returns over time\nggplot(us_equity_df, aes(x = date, y = monthly_return)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Returns\",\n    x = \"Date\",\n    y = \"Monthly Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nStatistical Summary of Returns\n\n# Summary statistics for monthly returns\nsummary_stats &lt;- us_equity_df %&gt;%\n  summarise(\n    mean_return = mean(monthly_return, na.rm = TRUE),\n    sd_return = sd(monthly_return, na.rm = TRUE),\n    min_return = min(monthly_return, na.rm = TRUE),\n    max_return = max(monthly_return, na.rm = TRUE)\n  )\n\n# Print the summary statistics\nprint(summary_stats)\n\n  mean_return  sd_return min_return max_return\n1 0.007198234 0.04411053 -0.1651874  0.1269836\n\n\n\n\n\n\n\n# Monte Carlo Simulation of Monthly Returns\nset.seed(123)  # For reproducibility\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- 12  # Number of months\n\nsimulated_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = summary_stats$mean_return, sd = summary_stats$sd_return),\n  ncol = n_sim\n)\n\n# Convert to cumulative return paths\nsimulated_cum_returns &lt;- apply(simulated_returns, 2, function(x) cumprod(1 + x) - 1)\n\n# Convert to a data frame for plotting\nlibrary(tidyr)\nsimulated_cum_df &lt;- data.frame(month = 1:n_months, simulated_cum_returns) %&gt;%\n  pivot_longer(-month, names_to = \"simulation\", values_to = \"cumulative_return\")\n\n# Plot the Monte Carlo simulation results\nlibrary(ggplot2)\nggplot(simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation)) +\n  geom_line(alpha = 0.1, color = \"blue\") +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Calculate summary statistics at the final month\nfinal_month_stats &lt;- simulated_cum_df %&gt;%\n  filter(month == n_months) %&gt;%\n  summarise(\n    mean_return = mean(cumulative_return),\n    median_return = median(cumulative_return),\n    sd_return = sd(cumulative_return),\n    min_return = min(cumulative_return),\n    max_return = max(cumulative_return),\n    prob_positive = mean(cumulative_return &gt; 0)  # Probability of positive returns\n  )\n\n# Print the summary statistics\nprint(final_month_stats)\n\n# A tibble: 1 × 6\n  mean_return median_return sd_return min_return max_return prob_positive\n        &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1      0.0905        0.0817     0.160     -0.312      0.668         0.703\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nsummary_lines &lt;- simulated_cum_df %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    mean_cumulative = mean(cumulative_return),\n    median_cumulative = median(cumulative_return)\n  ) %&gt;%\n  pivot_longer(cols = c(mean_cumulative, median_cumulative),\n               names_to = \"Statistic\",\n               values_to = \"cumulative_return\")\n\n# Add mean and median lines to the plot with a legend\nlibrary(ggplot2)\n\nggplot() +\n  geom_line(data = simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation),\n            alpha = 0.1, color = \"blue\") +\n  geom_line(data = summary_lines, aes(x = month, y = cumulative_return, color = Statistic),\n            size = 1) +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\",\n    color = \"Key Metrics\"\n  ) +\n  theme_minimal() +\n  scale_color_manual(\n    values = c(\"mean_cumulative\" = \"red\", \"median_cumulative\" = \"green\"),\n    labels = c(\"Mean\", \"Median\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n# Ensure columns are in Date format\nwage_df_aligned &lt;- wage_df_monthly %&gt;%\n  filter(date &gt;= min(simulated_cum_df$month) & date &lt;= max(simulated_cum_df$month)) %&gt;%\n  mutate(date = as.Date(date))  # Ensure 'date' is in Date format\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = as.Date(month))  # Ensure 'month' is in Date format\n\n\n# Debugging filter outputs\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  \n\n# A tibble: 1,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-13 X1                   0.196  \n 2 1970-01-13 X2                  -0.0354 \n 3 1970-01-13 X3                   0.189  \n 4 1970-01-13 X4                   0.0339 \n 5 1970-01-13 X5                   0.229  \n 6 1970-01-13 X6                   0.00409\n 7 1970-01-13 X7                   0.0765 \n 8 1970-01-13 X8                   0.312  \n 9 1970-01-13 X9                  -0.0157 \n10 1970-01-13 X10                 -0.0378 \n# ℹ 990 more rows\n\n\n\n# Align dates to the first day of the month\nwage_df_aligned &lt;- wage_df_aligned %&gt;%\n  mutate(date = floor_date(date, unit = \"month\"))\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = floor_date(month, unit = \"month\"))\n\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  # Check filtered simulations\n\n# A tibble: 12,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-01 X1                  -0.0175 \n 2 1970-01-01 X2                   0.0249 \n 3 1970-01-01 X3                  -0.0204 \n 4 1970-01-01 X4                   0.0316 \n 5 1970-01-01 X5                   0.0416 \n 6 1970-01-01 X6                   0.0239 \n 7 1970-01-01 X7                   0.0516 \n 8 1970-01-01 X8                  -0.00253\n 9 1970-01-01 X9                   0.104  \n10 1970-01-01 X10                 -0.00957\n# ℹ 11,990 more rows\n\n\n\n# Regenerate simulation data to align with wage_df_monthly\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- nrow(wage_df_monthly)  # Match the number of months in wage_df_monthly\nsimulated_cum_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = 0.007, sd = 0.04),  # Use realistic mean and SD\n  ncol = n_sim\n)\n\n# Create a data frame with simulated cumulative returns\nsimulated_cum_df &lt;- data.frame(\n  month = rep(wage_df_monthly$date, each = n_sim),\n  simulation = rep(paste0(\"X\", 1:n_sim), times = n_months),\n  cumulative_return = as.vector(simulated_cum_returns)\n)\n\n\n# Merge wage growth data with cumulative returns\ncombined_data &lt;- merge(\n  wage_df_monthly,\n  simulated_cum_df %&gt;%\n    rename(simulation_id = simulation),\n  by.x = \"date\",\n  by.y = \"month\"\n)\n\n# Inspect combined data\nprint(head(combined_data))\n\n        date value simulation_id cumulative_return\n1 2001-01-01  87.6            X1      0.0009748016\n2 2001-01-01  87.6            X2      0.0390376223\n3 2001-01-01  87.6            X3     -0.0404687139\n4 2001-01-01  87.6            X4      0.0242254545\n5 2001-01-01  87.6            X5      0.0156698838\n6 2001-01-01  87.6            X6      0.0454516938\n\n\n\n\n\n\n# Parameters for simulation\ncontribution_rate &lt;- 0.1  # 10% of salary\nstarting_salary &lt;- 50000  # Example starting salary in dollars\n\n# Calculate contributions and portfolio value\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)),  # Adjust salary based on wage growth\n    contribution = monthly_salary * contribution_rate,  # Monthly contributions\n    portfolio_value = contribution * (1 + cumulative_return)  # Portfolio value after investment growth\n  )\n\n# Summarize the portfolio growth for each simulation\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value)\n  )\n\n# Inspect the summary\nprint(head(portfolio_summary))\n\n# A tibble: 6 × 2\n  simulation_id final_portfolio_value\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 X1                           80529.\n2 X10                          82803.\n3 X100                         82632.\n4 X1000                        81777.\n5 X101                         81882.\n6 X102                         83201.\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the distribution of final portfolio values\nggplot(portfolio_summary, aes(x = final_portfolio_value)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Final Portfolio Values\",\n    x = \"Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Probability of achieving a $1M goal\ngoal &lt;- 1000000  # $1M goal\nprobability_of_success &lt;- mean(portfolio_summary$final_portfolio_value &gt;= goal)\n\n# Print the result\nprint(paste(\"Probability of achieving a portfolio value of $1M: \", \n            round(probability_of_success * 100, 2), \"%\"))\n\n[1] \"Probability of achieving a portfolio value of $1M:  0 %\"\n\n\n\n\n\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)) * (1 + cumulative_return),\n    contribution = monthly_salary * (contribution_rate + rnorm(1, 0, 0.01))  # Add random variability\n  )\n\n\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value, na.rm = TRUE)\n  )\n\nwithdrawal_rate &lt;- 0.04  # 4% annual withdrawal rate\nportfolio_summary &lt;- portfolio_summary %&gt;%\n  mutate(retirement_portfolio = final_portfolio_value * (1 - withdrawal_rate))\n\n\n\n\n\n# Plot the distribution of retirement portfolio values\nggplot(portfolio_summary, aes(x = retirement_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Post-Retirement Portfolio Values\",\n    x = \"Retirement Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Number of bootstrap simulations\nn_bootstrap &lt;- 200\n\n# While Working: Bootstrap Wage Growth\nworking_histories &lt;- replicate(\n  n_bootstrap,\n  sample(combined_data$value, size = nrow(combined_data), replace = TRUE),\n  simplify = FALSE\n)\n\n# While Retired: Bootstrap Investment Returns\nretired_histories &lt;- replicate(\n  n_bootstrap,\n  sample(simulated_cum_df$cumulative_return, size = nrow(simulated_cum_df), replace = TRUE),\n  simplify = FALSE\n)\n\n\n\n\n\n# Define withdrawal rate\nwithdrawal_rate &lt;- 0.04\n\n# Simulate bootstrap histories\nbootstrap_results &lt;- lapply(seq_len(n_bootstrap), function(i) {\n  # Simulate while working\n  wage_growth &lt;- working_histories[[i]]\n  cumulative_contributions &lt;- cumsum(starting_salary * contribution_rate * wage_growth / first(wage_growth))\n  \n  # Simulate while retired\n  returns &lt;- retired_histories[[i]]\n  retirement_portfolio &lt;- numeric(length(returns))\n  retirement_portfolio[1] &lt;- tail(cumulative_contributions, 1)  # Starting portfolio value\n  \n  for (t in 2:length(returns)) {\n    retirement_portfolio[t] &lt;- retirement_portfolio[t - 1] * (1 + returns[t]) - (retirement_portfolio[t - 1] * withdrawal_rate)\n    if (retirement_portfolio[t] &lt; 0) {\n      retirement_portfolio[t] &lt;- 0  # Ensure portfolio doesn't go negative\n      break\n    }\n  }\n  \n  # Return results\n  list(\n    working = cumulative_contributions,\n    retired = retirement_portfolio\n  )\n})\n\n\n\n\n\n# Analyze bootstrap results\nbootstrap_analysis &lt;- do.call(rbind, lapply(bootstrap_results, function(res) {\n  data.frame(\n    max_contribution = max(res$working),\n    max_portfolio = max(res$retired, na.rm = TRUE),\n    exhausted = any(res$retired == 0)\n  )\n}))\n\n# Probability of exhausting savings\nprob_exhausted &lt;- mean(bootstrap_analysis$exhausted)\n\n# Summary statistics\nsummary_stats &lt;- bootstrap_analysis %&gt;%\n  summarise(\n    mean_contribution = mean(max_contribution),\n    mean_portfolio = mean(max_portfolio),\n    prob_exhausted = mean(exhausted)\n  )\nprint(summary_stats)\n\n  mean_contribution mean_portfolio prob_exhausted\n1          80108560       80861697              0\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = exhausted)) +\n  geom_bar(fill = \"red\", alpha = 0.7) +\n  labs(title = \"Probability of Portfolio Exhaustion\", x = \"Exhausted Savings\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = max_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Retirement Portfolio Values\", x = \"Portfolio Value ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nBased on the visualizations:\n\nProbability of Exhausting Savings:\n\nThe first chart shows 0 occurrences of exhausted savings (all FALSE for exhausted), suggesting that with the assumptions and bootstrap histories used, none of the retirement scenarios result in portfolio depletion.\n\nDistribution of Portfolio Values:\n\nThe second chart indicates some issue with the histogram visualization:\n\nThe x-axis shows extremely high portfolio values (e.g., 1.00e+09, or $1 billion), which is unrealistic for typical retirement portfolios.\nThe histogram bars appear scattered, possibly due to incorrect scaling or extreme values in the data.\n\n\n\n\n\n\nBased on the simulations, here are the recommendations:\n\n\nThe TRS plan is more suitable for employees who prioritize income stability during retirement. It provides:\n\nPredictable monthly payments.\nProtection against market volatility.\n\n\n\n\nThe ORP plan offers greater flexibility and potentially higher returns. However, the employee must:\n\nBe comfortable with market risk.\nConsider reducing withdrawal rates (e.g., 3% instead of 4%) to mitigate the risk of exhausting savings.\n\n\n\n\n\n\n\nAge and Career Duration:\n\nYounger employees with longer career horizons may benefit from ORP’s growth potential.\nEmployees nearing retirement may prefer the stability of TRS.\n\nStarting Salary:\n\nHigher salaries favor ORP for greater investment contributions.\nLower salaries may make TRS more attractive for guaranteed income.\n\nRisk Tolerance:\n\nTRS suits risk-averse individuals.\nORP suits those willing to accept variability for potential upside.\n\nInflation and Long-Term Sustainability:\n\nTRS benefits may not keep pace with inflation over a long retirement.\nORP portfolios, if managed well, can outpace inflation but require discipline in withdrawals.\n\n\n\n\n\n\n\nBootstrap Sampling:\n\nHistorical data used in simulations may not reflect future economic conditions.\nBootstrap methods assume past trends are indicative of future outcomes.\n\nSimplified Assumptions:\n\nFixed withdrawal rates and contribution percentages may not reflect real-life variability.\nEmployee preferences and external factors (e.g., tax changes) were not modeled.\n\nMarket Risks:\n\nSimulations cannot predict black swan events (e.g., 2008 financial crisis).\n\n\n\n\n\n\nThe choice between TRS and ORP depends on the employee’s individual priorities and circumstances. For those seeking stability and simplicity, TRS is a safer option. For those aiming to maximize retirement wealth and are comfortable with risk, ORP can offer higher potential returns, provided they follow a disciplined withdrawal strategy.\nFinal Recommendation: Align the decision with personal goals, risk tolerance, and financial needs. Regularly review and adjust the chosen plan as circumstances evolve."
  },
  {
    "objectID": "mp04.html#data-retrieval",
    "href": "mp04.html#data-retrieval",
    "title": "mp04",
    "section": "",
    "text": "#Accessing the keys\nalpha_key &lt;- Sys.getenv(\"ALPHAVANTAGE_KEY\")\nfred_key &lt;- Sys.getenv(\"FRED_KEY\")\n\n\n\n\n\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_DAILY_ADJUSTED\",\n  symbol = \"AAPL\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load necessary libraries\nlibrary(httr)\n\n\n\n\n\nlibrary(tibble)\nlibrary(tidyr)\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(dplyr) \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Example API request to fetch data\nresponse &lt;- GET(\"https://www.alphavantage.co/query\", query = list(\n  'function' = \"TIME_SERIES_DAILY\",\n  symbol = \"SP500\",\n  apikey = \"your_api_key\"\n))\n\n# Parse the content of the response\nsp500_data &lt;- content(response, \"parsed\")\n\n\nparams_sp500 &lt;- list(\n  `function` = \"TIME_SERIES_DAILY\",  # Use the free endpoint\n  symbol = \"SPY\",                   # Ticker symbol for SPDR S&P 500 ETF\n  apikey = alpha_key\n)\nresponse_sp500 &lt;- GET(alpha_url, query = params_sp500)\nsp500_data &lt;- content(response_sp500, as = \"parsed\", simplifyVector = TRUE)\n\n# Inspect response structure\nstr(sp500_data)\n\nList of 2\n $ Meta Data          :List of 5\n  ..$ 1. Information   : chr \"Daily Prices (open, high, low, close) and Volumes\"\n  ..$ 2. Symbol        : chr \"SPY\"\n  ..$ 3. Last Refreshed: chr \"2024-12-10\"\n  ..$ 4. Output Size   : chr \"Compact\"\n  ..$ 5. Time Zone     : chr \"US/Eastern\"\n $ Time Series (Daily):List of 100\n  ..$ 2024-12-10:List of 5\n  .. ..$ 1. open  : chr \"605.3700\"\n  .. ..$ 2. high  : chr \"605.8000\"\n  .. ..$ 3. low   : chr \"602.1300\"\n  .. ..$ 4. close : chr \"602.8000\"\n  .. ..$ 5. volume: chr \"37234515\"\n  ..$ 2024-12-09:List of 5\n  .. ..$ 1. open  : chr \"607.6900\"\n  .. ..$ 2. high  : chr \"607.8600\"\n  .. ..$ 3. low   : chr \"604.0800\"\n  .. ..$ 4. close : chr \"604.6800\"\n  .. ..$ 5. volume: chr \"34742738\"\n  ..$ 2024-12-06:List of 5\n  .. ..$ 1. open  : chr \"607.4400\"\n  .. ..$ 2. high  : chr \"609.0700\"\n  .. ..$ 3. low   : chr \"607.0200\"\n  .. ..$ 4. close : chr \"607.8100\"\n  .. ..$ 5. volume: chr \"31241549\"\n  ..$ 2024-12-05:List of 5\n  .. ..$ 1. open  : chr \"607.6600\"\n  .. ..$ 2. high  : chr \"608.4800\"\n  .. ..$ 3. low   : chr \"606.3050\"\n  .. ..$ 4. close : chr \"606.6600\"\n  .. ..$ 5. volume: chr \"28762183\"\n  ..$ 2024-12-04:List of 5\n  .. ..$ 1. open  : chr \"605.6300\"\n  .. ..$ 2. high  : chr \"607.9100\"\n  .. ..$ 3. low   : chr \"604.9500\"\n  .. ..$ 4. close : chr \"607.6600\"\n  .. ..$ 5. volume: chr \"42787561\"\n  ..$ 2024-12-03:List of 5\n  .. ..$ 1. open  : chr \"603.3900\"\n  .. ..$ 2. high  : chr \"604.1600\"\n  .. ..$ 3. low   : chr \"602.3410\"\n  .. ..$ 4. close : chr \"603.9100\"\n  .. ..$ 5. volume: chr \"26906629\"\n  ..$ 2024-12-02:List of 5\n  .. ..$ 1. open  : chr \"602.9700\"\n  .. ..$ 2. high  : chr \"604.3200\"\n  .. ..$ 3. low   : chr \"602.4700\"\n  .. ..$ 4. close : chr \"603.6300\"\n  .. ..$ 5. volume: chr \"31745989\"\n  ..$ 2024-11-29:List of 5\n  .. ..$ 1. open  : chr \"599.6600\"\n  .. ..$ 2. high  : chr \"603.3500\"\n  .. ..$ 3. low   : chr \"599.3800\"\n  .. ..$ 4. close : chr \"602.5500\"\n  .. ..$ 5. volume: chr \"30095740\"\n  ..$ 2024-11-27:List of 5\n  .. ..$ 1. open  : chr \"600.4600\"\n  .. ..$ 2. high  : chr \"600.8500\"\n  .. ..$ 3. low   : chr \"597.2800\"\n  .. ..$ 4. close : chr \"598.8300\"\n  .. ..$ 5. volume: chr \"34000163\"\n  ..$ 2024-11-26:List of 5\n  .. ..$ 1. open  : chr \"598.8000\"\n  .. ..$ 2. high  : chr \"601.3300\"\n  .. ..$ 3. low   : chr \"598.0700\"\n  .. ..$ 4. close : chr \"600.6500\"\n  .. ..$ 5. volume: chr \"45621288\"\n  ..$ 2024-11-25:List of 5\n  .. ..$ 1. open  : chr \"599.5200\"\n  .. ..$ 2. high  : chr \"600.8600\"\n  .. ..$ 3. low   : chr \"595.2000\"\n  .. ..$ 4. close : chr \"597.5300\"\n  .. ..$ 5. volume: chr \"42441393\"\n  ..$ 2024-11-22:List of 5\n  .. ..$ 1. open  : chr \"593.6600\"\n  .. ..$ 2. high  : chr \"596.1500\"\n  .. ..$ 3. low   : chr \"593.1525\"\n  .. ..$ 4. close : chr \"595.5100\"\n  .. ..$ 5. volume: chr \"38226390\"\n  ..$ 2024-11-21:List of 5\n  .. ..$ 1. open  : chr \"593.4000\"\n  .. ..$ 2. high  : chr \"595.1200\"\n  .. ..$ 3. low   : chr \"587.4500\"\n  .. ..$ 4. close : chr \"593.6700\"\n  .. ..$ 5. volume: chr \"46750285\"\n  ..$ 2024-11-20:List of 5\n  .. ..$ 1. open  : chr \"590.3800\"\n  .. ..$ 2. high  : chr \"590.7900\"\n  .. ..$ 3. low   : chr \"584.6300\"\n  .. ..$ 4. close : chr \"590.5000\"\n  .. ..$ 5. volume: chr \"50032576\"\n  ..$ 2024-11-19:List of 5\n  .. ..$ 1. open  : chr \"584.7100\"\n  .. ..$ 2. high  : chr \"591.0450\"\n  .. ..$ 3. low   : chr \"584.0300\"\n  .. ..$ 4. close : chr \"590.3000\"\n  .. ..$ 5. volume: chr \"49412046\"\n  ..$ 2024-11-18:List of 5\n  .. ..$ 1. open  : chr \"586.2200\"\n  .. ..$ 2. high  : chr \"589.4900\"\n  .. ..$ 3. low   : chr \"585.3400\"\n  .. ..$ 4. close : chr \"588.1500\"\n  .. ..$ 5. volume: chr \"37084081\"\n  ..$ 2024-11-15:List of 5\n  .. ..$ 1. open  : chr \"589.7200\"\n  .. ..$ 2. high  : chr \"590.2000\"\n  .. ..$ 3. low   : chr \"583.8600\"\n  .. ..$ 4. close : chr \"585.7500\"\n  .. ..$ 5. volume: chr \"75988766\"\n  ..$ 2024-11-14:List of 5\n  .. ..$ 1. open  : chr \"597.3200\"\n  .. ..$ 2. high  : chr \"597.8100\"\n  .. ..$ 3. low   : chr \"592.6500\"\n  .. ..$ 4. close : chr \"593.3500\"\n  .. ..$ 5. volume: chr \"38904109\"\n  ..$ 2024-11-13:List of 5\n  .. ..$ 1. open  : chr \"597.3700\"\n  .. ..$ 2. high  : chr \"599.2300\"\n  .. ..$ 3. low   : chr \"594.9600\"\n  .. ..$ 4. close : chr \"597.1900\"\n  .. ..$ 5. volume: chr \"47388640\"\n  ..$ 2024-11-12:List of 5\n  .. ..$ 1. open  : chr \"598.6800\"\n  .. ..$ 2. high  : chr \"599.2900\"\n  .. ..$ 3. low   : chr \"594.3700\"\n  .. ..$ 4. close : chr \"596.9000\"\n  .. ..$ 5. volume: chr \"43006128\"\n  ..$ 2024-11-11:List of 5\n  .. ..$ 1. open  : chr \"599.8100\"\n  .. ..$ 2. high  : chr \"600.1700\"\n  .. ..$ 3. low   : chr \"597.0000\"\n  .. ..$ 4. close : chr \"598.7600\"\n  .. ..$ 5. volume: chr \"37586773\"\n  ..$ 2024-11-08:List of 5\n  .. ..$ 1. open  : chr \"596.1700\"\n  .. ..$ 2. high  : chr \"599.6400\"\n  .. ..$ 3. low   : chr \"596.1650\"\n  .. ..$ 4. close : chr \"598.1900\"\n  .. ..$ 5. volume: chr \"46444893\"\n  ..$ 2024-11-07:List of 5\n  .. ..$ 1. open  : chr \"593.0800\"\n  .. ..$ 2. high  : chr \"596.6500\"\n  .. ..$ 3. low   : chr \"592.9999\"\n  .. ..$ 4. close : chr \"595.6100\"\n  .. ..$ 5. volume: chr \"47233212\"\n  ..$ 2024-11-06:List of 5\n  .. ..$ 1. open  : chr \"589.2000\"\n  .. ..$ 2. high  : chr \"591.9300\"\n  .. ..$ 3. low   : chr \"585.3900\"\n  .. ..$ 4. close : chr \"591.0400\"\n  .. ..$ 5. volume: chr \"68181968\"\n  ..$ 2024-11-05:List of 5\n  .. ..$ 1. open  : chr \"570.7400\"\n  .. ..$ 2. high  : chr \"576.7400\"\n  .. ..$ 3. low   : chr \"570.5200\"\n  .. ..$ 4. close : chr \"576.7000\"\n  .. ..$ 5. volume: chr \"39478322\"\n  ..$ 2024-11-04:List of 5\n  .. ..$ 1. open  : chr \"571.1800\"\n  .. ..$ 2. high  : chr \"572.5000\"\n  .. ..$ 3. low   : chr \"567.8900\"\n  .. ..$ 4. close : chr \"569.8100\"\n  .. ..$ 5. volume: chr \"38216975\"\n  ..$ 2024-11-01:List of 5\n  .. ..$ 1. open  : chr \"571.3200\"\n  .. ..$ 2. high  : chr \"575.5500\"\n  .. ..$ 3. low   : chr \"570.6200\"\n  .. ..$ 4. close : chr \"571.0400\"\n  .. ..$ 5. volume: chr \"45667533\"\n  ..$ 2024-10-31:List of 5\n  .. ..$ 1. open  : chr \"575.5600\"\n  .. ..$ 2. high  : chr \"575.6300\"\n  .. ..$ 3. low   : chr \"568.4400\"\n  .. ..$ 4. close : chr \"568.6400\"\n  .. ..$ 5. volume: chr \"60182451\"\n  ..$ 2024-10-30:List of 5\n  .. ..$ 1. open  : chr \"581.2900\"\n  .. ..$ 2. high  : chr \"583.3200\"\n  .. ..$ 3. low   : chr \"579.2900\"\n  .. ..$ 4. close : chr \"580.0100\"\n  .. ..$ 5. volume: chr \"41435839\"\n  ..$ 2024-10-29:List of 5\n  .. ..$ 1. open  : chr \"579.8500\"\n  .. ..$ 2. high  : chr \"582.9070\"\n  .. ..$ 3. low   : chr \"578.4300\"\n  .. ..$ 4. close : chr \"581.7700\"\n  .. ..$ 5. volume: chr \"42899661\"\n  ..$ 2024-10-28:List of 5\n  .. ..$ 1. open  : chr \"582.5800\"\n  .. ..$ 2. high  : chr \"582.7100\"\n  .. ..$ 3. low   : chr \"580.5200\"\n  .. ..$ 4. close : chr \"580.8300\"\n  .. ..$ 5. volume: chr \"30174704\"\n  ..$ 2024-10-25:List of 5\n  .. ..$ 1. open  : chr \"581.5100\"\n  .. ..$ 2. high  : chr \"584.4600\"\n  .. ..$ 3. low   : chr \"578.0800\"\n  .. ..$ 4. close : chr \"579.0400\"\n  .. ..$ 5. volume: chr \"47268176\"\n  ..$ 2024-10-24:List of 5\n  .. ..$ 1. open  : chr \"579.9800\"\n  .. ..$ 2. high  : chr \"580.0600\"\n  .. ..$ 3. low   : chr \"576.5700\"\n  .. ..$ 4. close : chr \"579.2400\"\n  .. ..$ 5. volume: chr \"34979860\"\n  ..$ 2024-10-23:List of 5\n  .. ..$ 1. open  : chr \"581.2600\"\n  .. ..$ 2. high  : chr \"581.7086\"\n  .. ..$ 3. low   : chr \"574.4150\"\n  .. ..$ 4. close : chr \"577.9900\"\n  .. ..$ 5. volume: chr \"49314574\"\n  ..$ 2024-10-22:List of 5\n  .. ..$ 1. open  : chr \"581.0500\"\n  .. ..$ 2. high  : chr \"584.5000\"\n  .. ..$ 3. low   : chr \"580.3800\"\n  .. ..$ 4. close : chr \"583.3200\"\n  .. ..$ 5. volume: chr \"34183835\"\n  ..$ 2024-10-21:List of 5\n  .. ..$ 1. open  : chr \"583.8500\"\n  .. ..$ 2. high  : chr \"584.8500\"\n  .. ..$ 3. low   : chr \"580.6001\"\n  .. ..$ 4. close : chr \"583.6300\"\n  .. ..$ 5. volume: chr \"36439010\"\n  ..$ 2024-10-18:List of 5\n  .. ..$ 1. open  : chr \"584.0700\"\n  .. ..$ 2. high  : chr \"585.3900\"\n  .. ..$ 3. low   : chr \"582.5800\"\n  .. ..$ 4. close : chr \"584.5900\"\n  .. ..$ 5. volume: chr \"37416801\"\n  ..$ 2024-10-17:List of 5\n  .. ..$ 1. open  : chr \"585.9100\"\n  .. ..$ 2. high  : chr \"586.1200\"\n  .. ..$ 3. low   : chr \"582.1600\"\n  .. ..$ 4. close : chr \"582.3500\"\n  .. ..$ 5. volume: chr \"34393714\"\n  ..$ 2024-10-16:List of 5\n  .. ..$ 1. open  : chr \"579.7800\"\n  .. ..$ 2. high  : chr \"582.8300\"\n  .. ..$ 3. low   : chr \"578.9600\"\n  .. ..$ 4. close : chr \"582.3000\"\n  .. ..$ 5. volume: chr \"30725436\"\n  ..$ 2024-10-15:List of 5\n  .. ..$ 1. open  : chr \"584.5900\"\n  .. ..$ 2. high  : chr \"584.9000\"\n  .. ..$ 3. low   : chr \"578.5450\"\n  .. ..$ 4. close : chr \"579.7800\"\n  .. ..$ 5. volume: chr \"54203636\"\n  ..$ 2024-10-14:List of 5\n  .. ..$ 1. open  : chr \"581.2200\"\n  .. ..$ 2. high  : chr \"585.2700\"\n  .. ..$ 3. low   : chr \"580.7300\"\n  .. ..$ 4. close : chr \"584.3200\"\n  .. ..$ 5. volume: chr \"36217215\"\n  ..$ 2024-10-11:List of 5\n  .. ..$ 1. open  : chr \"576.0500\"\n  .. ..$ 2. high  : chr \"580.3300\"\n  .. ..$ 3. low   : chr \"575.9100\"\n  .. ..$ 4. close : chr \"579.5800\"\n  .. ..$ 5. volume: chr \"42267994\"\n  ..$ 2024-10-10:List of 5\n  .. ..$ 1. open  : chr \"575.7700\"\n  .. ..$ 2. high  : chr \"577.5800\"\n  .. ..$ 3. low   : chr \"574.4900\"\n  .. ..$ 4. close : chr \"576.1300\"\n  .. ..$ 5. volume: chr \"44138060\"\n  ..$ 2024-10-09:List of 5\n  .. ..$ 1. open  : chr \"573.1600\"\n  .. ..$ 2. high  : chr \"577.7100\"\n  .. ..$ 3. low   : chr \"572.5500\"\n  .. ..$ 4. close : chr \"577.1400\"\n  .. ..$ 5. volume: chr \"37912244\"\n  ..$ 2024-10-08:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"573.7800\"\n  .. ..$ 3. low   : chr \"569.5299\"\n  .. ..$ 4. close : chr \"573.1700\"\n  .. ..$ 5. volume: chr \"37398693\"\n  ..$ 2024-10-07:List of 5\n  .. ..$ 1. open  : chr \"571.3000\"\n  .. ..$ 2. high  : chr \"571.9599\"\n  .. ..$ 3. low   : chr \"566.6300\"\n  .. ..$ 4. close : chr \"567.8000\"\n  .. ..$ 5. volume: chr \"49964690\"\n  ..$ 2024-10-04:List of 5\n  .. ..$ 1. open  : chr \"572.3500\"\n  .. ..$ 2. high  : chr \"573.3600\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"572.9800\"\n  .. ..$ 5. volume: chr \"43005186\"\n  ..$ 2024-10-03:List of 5\n  .. ..$ 1. open  : chr \"567.3600\"\n  .. ..$ 2. high  : chr \"569.8025\"\n  .. ..$ 3. low   : chr \"565.4900\"\n  .. ..$ 4. close : chr \"567.8200\"\n  .. ..$ 5. volume: chr \"40846466\"\n  ..$ 2024-10-02:List of 5\n  .. ..$ 1. open  : chr \"567.7100\"\n  .. ..$ 2. high  : chr \"569.9000\"\n  .. ..$ 3. low   : chr \"565.2700\"\n  .. ..$ 4. close : chr \"568.8600\"\n  .. ..$ 5. volume: chr \"38097798\"\n  ..$ 2024-10-01:List of 5\n  .. ..$ 1. open  : chr \"573.4000\"\n  .. ..$ 2. high  : chr \"574.0622\"\n  .. ..$ 3. low   : chr \"566.0000\"\n  .. ..$ 4. close : chr \"568.6200\"\n  .. ..$ 5. volume: chr \"72668778\"\n  ..$ 2024-09-30:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"574.3800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"573.7600\"\n  .. ..$ 5. volume: chr \"63655448\"\n  ..$ 2024-09-27:List of 5\n  .. ..$ 1. open  : chr \"573.3900\"\n  .. ..$ 2. high  : chr \"574.2200\"\n  .. ..$ 3. low   : chr \"570.4200\"\n  .. ..$ 4. close : chr \"571.4700\"\n  .. ..$ 5. volume: chr \"42100928\"\n  ..$ 2024-09-26:List of 5\n  .. ..$ 1. open  : chr \"574.3800\"\n  .. ..$ 2. high  : chr \"574.7100\"\n  .. ..$ 3. low   : chr \"569.9000\"\n  .. ..$ 4. close : chr \"572.3000\"\n  .. ..$ 5. volume: chr \"48336004\"\n  ..$ 2024-09-25:List of 5\n  .. ..$ 1. open  : chr \"571.1400\"\n  .. ..$ 2. high  : chr \"571.8900\"\n  .. ..$ 3. low   : chr \"568.9100\"\n  .. ..$ 4. close : chr \"570.0400\"\n  .. ..$ 5. volume: chr \"38428587\"\n  ..$ 2024-09-24:List of 5\n  .. ..$ 1. open  : chr \"570.4800\"\n  .. ..$ 2. high  : chr \"571.3600\"\n  .. ..$ 3. low   : chr \"567.6000\"\n  .. ..$ 4. close : chr \"571.3000\"\n  .. ..$ 5. volume: chr \"46805672\"\n  ..$ 2024-09-23:List of 5\n  .. ..$ 1. open  : chr \"569.3400\"\n  .. ..$ 2. high  : chr \"570.3325\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"569.6700\"\n  .. ..$ 5. volume: chr \"44116922\"\n  ..$ 2024-09-20:List of 5\n  .. ..$ 1. open  : chr \"567.8400\"\n  .. ..$ 2. high  : chr \"569.3100\"\n  .. ..$ 3. low   : chr \"565.1700\"\n  .. ..$ 4. close : chr \"568.2500\"\n  .. ..$ 5. volume: chr \"77503110\"\n  ..$ 2024-09-19:List of 5\n  .. ..$ 1. open  : chr \"571.0100\"\n  .. ..$ 2. high  : chr \"572.8800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"570.9800\"\n  .. ..$ 5. volume: chr \"75315470\"\n  ..$ 2024-09-18:List of 5\n  .. ..$ 1. open  : chr \"563.7400\"\n  .. ..$ 2. high  : chr \"568.6900\"\n  .. ..$ 3. low   : chr \"560.8300\"\n  .. ..$ 4. close : chr \"561.4000\"\n  .. ..$ 5. volume: chr \"59044937\"\n  ..$ 2024-09-17:List of 5\n  .. ..$ 1. open  : chr \"565.1000\"\n  .. ..$ 2. high  : chr \"566.5800\"\n  .. ..$ 3. low   : chr \"560.7950\"\n  .. ..$ 4. close : chr \"563.0700\"\n  .. ..$ 5. volume: chr \"49320970\"\n  ..$ 2024-09-16:List of 5\n  .. ..$ 1. open  : chr \"561.7400\"\n  .. ..$ 2. high  : chr \"563.1100\"\n  .. ..$ 3. low   : chr \"559.9000\"\n  .. ..$ 4. close : chr \"562.8400\"\n  .. ..$ 5. volume: chr \"36656122\"\n  ..$ 2024-09-13:List of 5\n  .. ..$ 1. open  : chr \"559.7100\"\n  .. ..$ 2. high  : chr \"563.0300\"\n  .. ..$ 3. low   : chr \"559.4500\"\n  .. ..$ 4. close : chr \"562.0100\"\n  .. ..$ 5. volume: chr \"39310501\"\n  ..$ 2024-09-12:List of 5\n  .. ..$ 1. open  : chr \"555.0100\"\n  .. ..$ 2. high  : chr \"559.4000\"\n  .. ..$ 3. low   : chr \"552.7400\"\n  .. ..$ 4. close : chr \"559.0900\"\n  .. ..$ 5. volume: chr \"51892735\"\n  ..$ 2024-09-11:List of 5\n  .. ..$ 1. open  : chr \"548.7000\"\n  .. ..$ 2. high  : chr \"555.3600\"\n  .. ..$ 3. low   : chr \"539.9600\"\n  .. ..$ 4. close : chr \"554.4200\"\n  .. ..$ 5. volume: chr \"75248608\"\n  ..$ 2024-09-10:List of 5\n  .. ..$ 1. open  : chr \"548.3600\"\n  .. ..$ 2. high  : chr \"549.1500\"\n  .. ..$ 3. low   : chr \"543.3800\"\n  .. ..$ 4. close : chr \"548.7900\"\n  .. ..$ 5. volume: chr \"36394579\"\n  ..$ 2024-09-09:List of 5\n  .. ..$ 1. open  : chr \"544.6500\"\n  .. ..$ 2. high  : chr \"547.7100\"\n  .. ..$ 3. low   : chr \"542.6800\"\n  .. ..$ 4. close : chr \"546.4100\"\n  .. ..$ 5. volume: chr \"40445822\"\n  ..$ 2024-09-06:List of 5\n  .. ..$ 1. open  : chr \"549.9400\"\n  .. ..$ 2. high  : chr \"551.6000\"\n  .. ..$ 3. low   : chr \"539.4400\"\n  .. ..$ 4. close : chr \"540.3600\"\n  .. ..$ 5. volume: chr \"68493805\"\n  ..$ 2024-09-05:List of 5\n  .. ..$ 1. open  : chr \"550.8900\"\n  .. ..$ 2. high  : chr \"553.7995\"\n  .. ..$ 3. low   : chr \"547.1000\"\n  .. ..$ 4. close : chr \"549.6100\"\n  .. ..$ 5. volume: chr \"44264258\"\n  ..$ 2024-09-04:List of 5\n  .. ..$ 1. open  : chr \"550.2000\"\n  .. ..$ 2. high  : chr \"554.4300\"\n  .. ..$ 3. low   : chr \"549.4600\"\n  .. ..$ 4. close : chr \"550.9500\"\n  .. ..$ 5. volume: chr \"46232483\"\n  ..$ 2024-09-03:List of 5\n  .. ..$ 1. open  : chr \"560.4700\"\n  .. ..$ 2. high  : chr \"560.8100\"\n  .. ..$ 3. low   : chr \"549.5100\"\n  .. ..$ 4. close : chr \"552.0800\"\n  .. ..$ 5. volume: chr \"60600113\"\n  ..$ 2024-08-30:List of 5\n  .. ..$ 1. open  : chr \"560.7700\"\n  .. ..$ 2. high  : chr \"564.2000\"\n  .. ..$ 3. low   : chr \"557.1400\"\n  .. ..$ 4. close : chr \"563.6800\"\n  .. ..$ 5. volume: chr \"62700110\"\n  ..$ 2024-08-29:List of 5\n  .. ..$ 1. open  : chr \"560.3100\"\n  .. ..$ 2. high  : chr \"563.6800\"\n  .. ..$ 3. low   : chr \"557.1800\"\n  .. ..$ 4. close : chr \"558.3500\"\n  .. ..$ 5. volume: chr \"38715176\"\n  ..$ 2024-08-28:List of 5\n  .. ..$ 1. open  : chr \"561.2100\"\n  .. ..$ 2. high  : chr \"561.6500\"\n  .. ..$ 3. low   : chr \"555.0400\"\n  .. ..$ 4. close : chr \"558.3000\"\n  .. ..$ 5. volume: chr \"41066024\"\n  ..$ 2024-08-27:List of 5\n  .. ..$ 1. open  : chr \"559.4900\"\n  .. ..$ 2. high  : chr \"562.0600\"\n  .. ..$ 3. low   : chr \"558.3200\"\n  .. ..$ 4. close : chr \"561.5600\"\n  .. ..$ 5. volume: chr \"32693898\"\n  ..$ 2024-08-26:List of 5\n  .. ..$ 1. open  : chr \"563.1800\"\n  .. ..$ 2. high  : chr \"563.9100\"\n  .. ..$ 3. low   : chr \"559.0500\"\n  .. ..$ 4. close : chr \"560.7900\"\n  .. ..$ 5. volume: chr \"35788609\"\n  ..$ 2024-08-23:List of 5\n  .. ..$ 1. open  : chr \"559.5300\"\n  .. ..$ 2. high  : chr \"563.0900\"\n  .. ..$ 3. low   : chr \"557.2900\"\n  .. ..$ 4. close : chr \"562.1300\"\n  .. ..$ 5. volume: chr \"50639393\"\n  ..$ 2024-08-22:List of 5\n  .. ..$ 1. open  : chr \"562.5600\"\n  .. ..$ 2. high  : chr \"563.1800\"\n  .. ..$ 3. low   : chr \"554.9800\"\n  .. ..$ 4. close : chr \"556.2200\"\n  .. ..$ 5. volume: chr \"56121456\"\n  ..$ 2024-08-21:List of 5\n  .. ..$ 1. open  : chr \"559.7700\"\n  .. ..$ 2. high  : chr \"562.1100\"\n  .. ..$ 3. low   : chr \"554.7300\"\n  .. ..$ 4. close : chr \"560.6200\"\n  .. ..$ 5. volume: chr \"41514600\"\n  ..$ 2024-08-20:List of 5\n  .. ..$ 1. open  : chr \"559.1500\"\n  .. ..$ 2. high  : chr \"560.8400\"\n  .. ..$ 3. low   : chr \"557.3250\"\n  .. ..$ 4. close : chr \"558.7000\"\n  .. ..$ 5. volume: chr \"33732264\"\n  ..$ 2024-08-19:List of 5\n  .. ..$ 1. open  : chr \"554.7300\"\n  .. ..$ 2. high  : chr \"559.6100\"\n  .. ..$ 3. low   : chr \"553.8600\"\n  .. ..$ 4. close : chr \"559.6100\"\n  .. ..$ 5. volume: chr \"39121793\"\n  ..$ 2024-08-16:List of 5\n  .. ..$ 1. open  : chr \"551.4200\"\n  .. ..$ 2. high  : chr \"555.0200\"\n  .. ..$ 3. low   : chr \"551.2600\"\n  .. ..$ 4. close : chr \"554.3100\"\n  .. ..$ 5. volume: chr \"44430728\"\n  ..$ 2024-08-15:List of 5\n  .. ..$ 1. open  : chr \"549.5000\"\n  .. ..$ 2. high  : chr \"553.3600\"\n  .. ..$ 3. low   : chr \"548.8800\"\n  .. ..$ 4. close : chr \"553.0700\"\n  .. ..$ 5. volume: chr \"60846812\"\n  ..$ 2024-08-14:List of 5\n  .. ..$ 1. open  : chr \"542.8500\"\n  .. ..$ 2. high  : chr \"544.9600\"\n  .. ..$ 3. low   : chr \"540.1200\"\n  .. ..$ 4. close : chr \"543.7500\"\n  .. ..$ 5. volume: chr \"42446929\"\n  ..$ 2024-08-13:List of 5\n  .. ..$ 1. open  : chr \"536.5300\"\n  .. ..$ 2. high  : chr \"542.2800\"\n  .. ..$ 3. low   : chr \"536.2800\"\n  .. ..$ 4. close : chr \"542.0400\"\n  .. ..$ 5. volume: chr \"52333073\"\n  ..$ 2024-08-12:List of 5\n  .. ..$ 1. open  : chr \"534.2100\"\n  .. ..$ 2. high  : chr \"535.7300\"\n  .. ..$ 3. low   : chr \"530.9500\"\n  .. ..$ 4. close : chr \"533.2700\"\n  .. ..$ 5. volume: chr \"42542069\"\n  ..$ 2024-08-09:List of 5\n  .. ..$ 1. open  : chr \"529.8100\"\n  .. ..$ 2. high  : chr \"534.5100\"\n  .. ..$ 3. low   : chr \"528.5600\"\n  .. ..$ 4. close : chr \"532.9900\"\n  .. ..$ 5. volume: chr \"45619558\"\n  ..$ 2024-08-08:List of 5\n  .. ..$ 1. open  : chr \"523.9100\"\n  .. ..$ 2. high  : chr \"531.2900\"\n  .. ..$ 3. low   : chr \"521.8400\"\n  .. ..$ 4. close : chr \"530.6500\"\n  .. ..$ 5. volume: chr \"63276589\"\n  ..$ 2024-08-07:List of 5\n  .. ..$ 1. open  : chr \"528.4700\"\n  .. ..$ 2. high  : chr \"531.5900\"\n  .. ..$ 3. low   : chr \"518.0519\"\n  .. ..$ 4. close : chr \"518.6600\"\n  .. ..$ 5. volume: chr \"70698340\"\n  ..$ 2024-08-06:List of 5\n  .. ..$ 1. open  : chr \"519.2200\"\n  .. ..$ 2. high  : chr \"529.7500\"\n  .. ..$ 3. low   : chr \"517.8700\"\n  .. ..$ 4. close : chr \"522.1500\"\n  .. ..$ 5. volume: chr \"84826312\"\n  ..$ 2024-08-05:List of 5\n  .. ..$ 1. open  : chr \"511.6400\"\n  .. ..$ 2. high  : chr \"523.5800\"\n  .. ..$ 3. low   : chr \"510.2700\"\n  .. ..$ 4. close : chr \"517.3800\"\n  .. ..$ 5. volume: chr \"146267391\"\n  ..$ 2024-08-02:List of 5\n  .. ..$ 1. open  : chr \"535.7500\"\n  .. ..$ 2. high  : chr \"536.9900\"\n  .. ..$ 3. low   : chr \"528.6000\"\n  .. ..$ 4. close : chr \"532.9000\"\n  .. ..$ 5. volume: chr \"82789070\"\n  ..$ 2024-08-01:List of 5\n  .. ..$ 1. open  : chr \"552.5700\"\n  .. ..$ 2. high  : chr \"554.8688\"\n  .. ..$ 3. low   : chr \"539.4300\"\n  .. ..$ 4. close : chr \"543.0100\"\n  .. ..$ 5. volume: chr \"76428732\"\n  ..$ 2024-07-31:List of 5\n  .. ..$ 1. open  : chr \"548.9800\"\n  .. ..$ 2. high  : chr \"553.5000\"\n  .. ..$ 3. low   : chr \"547.5799\"\n  .. ..$ 4. close : chr \"550.8100\"\n  .. ..$ 5. volume: chr \"65663388\"\n  ..$ 2024-07-30:List of 5\n  .. ..$ 1. open  : chr \"546.2600\"\n  .. ..$ 2. high  : chr \"547.3400\"\n  .. ..$ 3. low   : chr \"538.5150\"\n  .. ..$ 4. close : chr \"542.0000\"\n  .. ..$ 5. volume: chr \"46853632\"\n  ..$ 2024-07-29:List of 5\n  .. ..$ 1. open  : chr \"546.0200\"\n  .. ..$ 2. high  : chr \"547.0500\"\n  .. ..$ 3. low   : chr \"542.7200\"\n  .. ..$ 4. close : chr \"544.7600\"\n  .. ..$ 5. volume: chr \"39515824\"\n  ..$ 2024-07-26:List of 5\n  .. ..$ 1. open  : chr \"542.2800\"\n  .. ..$ 2. high  : chr \"547.1900\"\n  .. ..$ 3. low   : chr \"541.4900\"\n  .. ..$ 4. close : chr \"544.4400\"\n  .. ..$ 5. volume: chr \"53763788\"\n  ..$ 2024-07-25:List of 5\n  .. ..$ 1. open  : chr \"541.3500\"\n  .. ..$ 2. high  : chr \"547.4550\"\n  .. ..$ 3. low   : chr \"537.4500\"\n  .. ..$ 4. close : chr \"538.4100\"\n  .. ..$ 5. volume: chr \"61158288\"\n  ..$ 2024-07-24:List of 5\n  .. ..$ 1. open  : chr \"548.8600\"\n  .. ..$ 2. high  : chr \"549.1700\"\n  .. ..$ 3. low   : chr \"540.2900\"\n  .. ..$ 4. close : chr \"541.2300\"\n  .. ..$ 5. volume: chr \"74515266\"\n  ..$ 2024-07-23:List of 5\n  .. ..$ 1. open  : chr \"554.5400\"\n  .. ..$ 2. high  : chr \"556.7350\"\n  .. ..$ 3. low   : chr \"553.2750\"\n  .. ..$ 4. close : chr \"553.7800\"\n  .. ..$ 5. volume: chr \"34439561\"\n  .. [list output truncated]\n\n\n\nlibrary(httr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.2\n✔ ggplot2   3.5.1     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Extract and parse the \"Time Series (Daily)\" data\nsp500_data_clean &lt;- sp500_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;% # Convert list to tibble\n  unnest_wider(Metrics) %&gt;% # Flatten the nested list in \"Metrics\"\n  mutate(\n    Date = as.Date(Date), # Convert date to Date format\n    `1. open` = as.numeric(`1. open`),\n    `2. high` = as.numeric(`2. high`),\n    `3. low` = as.numeric(`3. low`),\n    `4. close` = as.numeric(`4. close`),\n    `5. volume` = as.numeric(`5. volume`)\n  )\n\n# Inspect the cleaned data\nhead(sp500_data_clean)\n\n# A tibble: 6 × 6\n  Date       `1. open` `2. high` `3. low` `4. close` `5. volume`\n  &lt;date&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 2024-12-10      605.      606.     602.       603.    37234515\n2 2024-12-09      608.      608.     604.       605.    34742738\n3 2024-12-06      607.      609.     607.       608.    31241549\n4 2024-12-05      608.      608.     606.       607.    28762183\n5 2024-12-04      606.      608.     605.       608.    42787561\n6 2024-12-03      603.      604.     602.       604.    26906629\n\n\n\n\n\n\nfred_url &lt;- paste0(\"https://api.stlouisfed.org/fred/series/observations\")\nfred_params &lt;- list(\n  series_id = \"GDP\",\n  api_key = fred_key,\n  file_type = \"json\"\n)\nfred_response &lt;- GET(fred_url, query = fred_params)\nfred_data &lt;- content(fred_response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load required libraries\nlibrary(tidyverse)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Limit to most recent 1 year (365 days) to reduce data points\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  filter(Date &gt;= as.Date(max(Date)) - 365)\n\n# Precompute and downsample moving averages to reduce computation\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  mutate(\n    ma_30 = zoo::rollapply(`4. close`, width = 30, FUN = mean, fill = NA, align = \"right\"),\n    ma_90 = zoo::rollapply(`4. close`, width = 90, FUN = mean, fill = NA, align = \"right\")\n  ) %&gt;%\n  # Downsample data (keep every 5th row for faster plotting)\n  slice(seq(1, n(), by = 5))\n\n# Plot Closing Prices with Moving Averages\nggplot(sp500_data_clean, aes(x = Date)) +\n  geom_line(aes(y = `4. close`, color = \"Closing Price\"), size = 0.5) +\n  geom_line(aes(y = ma_30, color = \"30-Day Moving Avg\"), size = 0.5) +\n  geom_line(aes(y = ma_90, color = \"90-Day Moving Avg\"), size = 0.5) +\n  labs(\n    title = \"S&P 500 Closing Prices with Moving Averages\",\n    x = \"Date\",\n    y = \"Price ($)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n# Parse FRED Data\ngdp_data &lt;- fred_data[[\"observations\"]] %&gt;%\n  tibble::as_tibble() %&gt;%\n  mutate(\n    date = as.Date(date),             # Convert 'date' column to Date format\n    value = value         # Convert 'value' column to numeric (invalid values become NA)\n  )"
  },
  {
    "objectID": "mp04.html#visualizations",
    "href": "mp04.html#visualizations",
    "title": "mp04",
    "section": "",
    "text": "ggplot(sp500_data_clean, aes(x = Date, y = `4. close`)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Closing Prices\",\n    x = \"Date\",\n    y = \"Closing Price ($)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nstr(fred_data)\n\nList of 13\n $ realtime_start   : chr \"2024-11-30\"\n $ realtime_end     : chr \"2024-11-30\"\n $ observation_start: chr \"1600-01-01\"\n $ observation_end  : chr \"9999-12-31\"\n $ units            : chr \"lin\"\n $ output_type      : int 1\n $ file_type        : chr \"json\"\n $ order_by         : chr \"observation_date\"\n $ sort_order       : chr \"asc\"\n $ count            : int 315\n $ offset           : int 0\n $ limit            : int 100000\n $ observations     :'data.frame':  315 obs. of  4 variables:\n  ..$ realtime_start: chr [1:315] \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" ...\n  ..$ realtime_end  : chr [1:315] \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" \"2024-11-30\" ...\n  ..$ date          : chr [1:315] \"1946-01-01\" \"1946-04-01\" \"1946-07-01\" \"1946-10-01\" ...\n  ..$ value         : chr [1:315] \".\" \".\" \".\" \".\" ...\n\n\n\nlibrary(tidyverse)\n\n# Extract and clean the observations\ngdp_data_clean &lt;- fred_data$observations %&gt;%\n  mutate(\n    date = as.Date(date),           # Convert date to Date format\n    value = as.numeric(value)       # Convert value to numeric, invalid entries become NA\n  ) %&gt;%\n  filter(!is.na(value))             # Remove rows with NA in the value column\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Inspect the cleaned data\nhead(gdp_data_clean)\n\n  realtime_start realtime_end       date   value\n1     2024-11-30   2024-11-30 1947-01-01 243.164\n2     2024-11-30   2024-11-30 1947-04-01 245.968\n3     2024-11-30   2024-11-30 1947-07-01 249.585\n4     2024-11-30   2024-11-30 1947-10-01 259.745\n5     2024-11-30   2024-11-30 1948-01-01 265.742\n6     2024-11-30   2024-11-30 1948-04-01 272.567\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  labs(\n    title = \"GDP Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  geom_smooth(method = \"loess\", color = \"blue\", se = FALSE) +\n  labs(\n    title = \"GDP Trend Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\ngdp_yoy &lt;- gdp_data_clean %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;% # Extract year from date\n  group_by(year) %&gt;%\n  summarize(avg_gdp = mean(value, na.rm = TRUE)) %&gt;%\n  mutate(\n    yoy_growth = (avg_gdp - lag(avg_gdp)) / lag(avg_gdp) * 100 # YoY growth\n  )\n\n# Inspect the YoY Growth Data\nhead(gdp_yoy)\n\n# A tibble: 6 × 3\n   year avg_gdp yoy_growth\n  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1  1947    250.     NA    \n2  1948    274.      9.96 \n3  1949    272.     -0.726\n4  1950    300.     10.0  \n5  1951    347.     15.7  \n6  1952    367.      5.89 \n\n\n\nggplot(gdp_yoy, aes(x = year, y = yoy_growth)) +\n  geom_col(fill = \"purple\") +\n  labs(\n    title = \"Year-over-Year GDP Growth\",\n    x = \"Year\",\n    y = \"YoY Growth (%)\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nwage_data &lt;- data.frame(\n  date = c(\"2001-01-01\", \"2001-04-01\", \"2001-07-01\", \"2001-10-01\", \"2002-01-01\", \"2002-04-01\"),\n  value = c(\"87.6\", \"88.4\", \"89.2\", \"90.0\", \"90.7\", \"91.6\")\n)\n\n\n# Process wage growth data\nlibrary(dplyr)\nlibrary(tidyr)\n\nwage_df &lt;- wage_data %&gt;%\n  select(date, value) %&gt;%  # Select only the relevant columns\n  mutate(\n    value = ifelse(value == \".\", NA, as.numeric(value)),  # Replace \".\" with NA and convert to numeric\n    date = as.Date(date)  # Ensure date is in Date format\n  ) %&gt;%\n  drop_na(value)  # Remove rows where value is NA\n\n# Print the first few rows to confirm\nhead(wage_df)\n\n        date value\n1 2001-01-01  87.6\n2 2001-04-01  88.4\n3 2001-07-01  89.2\n4 2001-10-01  90.0\n5 2002-01-01  90.7\n6 2002-04-01  91.6\n\n# Interpolate data to monthly frequency if needed\nwage_df_monthly &lt;- wage_df %&gt;%\n  complete(date = seq.Date(min(date), max(date), by = \"month\")) %&gt;%  # Fill missing months\n  fill(value, .direction = \"down\")  # Fill missing values by carrying forward\n\n\nlibrary(ggplot2)\n\n# Plot the wage growth data\nggplot(wage_df_monthly, aes(x = date, y = value)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"Wage Growth Over Time\",\n    x = \"Date\",\n    y = \"Wage Index Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Example for fetching S&P 500 monthly adjusted close prices\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_MONTHLY_ADJUSTED\",\n  symbol = \"SPY\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\n\n# Parse the content\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n# Extract and process data\nlibrary(dplyr)\nmonthly_data &lt;- alpha_data[[\"Monthly Adjusted Time Series\"]]\nus_equity_df &lt;- data.frame(\n  date = as.Date(names(monthly_data)),\n  adjusted_close = as.numeric(sapply(monthly_data, function(x) x[[\"5. adjusted close\"]]))\n)\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close\n1 2024-12-10       602.8000\n2 2024-11-29       602.5500\n3 2024-10-31       568.6400\n4 2024-09-30       573.7600\n5 2024-08-30       561.9538\n6 2024-07-31       549.1232\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the S&P 500 adjusted close prices\nggplot(us_equity_df, aes(x = date, y = adjusted_close)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Adjusted Close Prices\",\n    x = \"Date\",\n    y = \"Adjusted Close Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  arrange(date) %&gt;%  # Ensure data is sorted by date\n  mutate(\n    monthly_return = adjusted_close / lag(adjusted_close) - 1  # Calculate monthly returns\n  )\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 1999-12-31        93.8436             NA\n2 2000-01-31        89.1714    -0.04978709\n3 2000-02-29        87.8136    -0.01522686\n4 2000-03-31        96.3223     0.09689501\n5 2000-04-28        92.9394    -0.03512063\n6 2000-05-31        91.4782    -0.01572207\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  drop_na(monthly_return)  # Remove rows with NA in the 'monthly_return' column\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 2000-01-31        89.1714    -0.04978709\n2 2000-02-29        87.8136    -0.01522686\n3 2000-03-31        96.3223     0.09689501\n4 2000-04-28        92.9394    -0.03512063\n5 2000-05-31        91.4782    -0.01572207\n6 2000-06-30        93.2807     0.01970415\n\n\nVisualize Monthly Returns\n\n# Plot monthly returns over time\nggplot(us_equity_df, aes(x = date, y = monthly_return)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Returns\",\n    x = \"Date\",\n    y = \"Monthly Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nStatistical Summary of Returns\n\n# Summary statistics for monthly returns\nsummary_stats &lt;- us_equity_df %&gt;%\n  summarise(\n    mean_return = mean(monthly_return, na.rm = TRUE),\n    sd_return = sd(monthly_return, na.rm = TRUE),\n    min_return = min(monthly_return, na.rm = TRUE),\n    max_return = max(monthly_return, na.rm = TRUE)\n  )\n\n# Print the summary statistics\nprint(summary_stats)\n\n  mean_return  sd_return min_return max_return\n1 0.007198234 0.04411053 -0.1651874  0.1269836"
  },
  {
    "objectID": "mp04.html#monte-carlo-stimulation",
    "href": "mp04.html#monte-carlo-stimulation",
    "title": "mp04",
    "section": "",
    "text": "# Monte Carlo Simulation of Monthly Returns\nset.seed(123)  # For reproducibility\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- 12  # Number of months\n\nsimulated_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = summary_stats$mean_return, sd = summary_stats$sd_return),\n  ncol = n_sim\n)\n\n# Convert to cumulative return paths\nsimulated_cum_returns &lt;- apply(simulated_returns, 2, function(x) cumprod(1 + x) - 1)\n\n# Convert to a data frame for plotting\nlibrary(tidyr)\nsimulated_cum_df &lt;- data.frame(month = 1:n_months, simulated_cum_returns) %&gt;%\n  pivot_longer(-month, names_to = \"simulation\", values_to = \"cumulative_return\")\n\n# Plot the Monte Carlo simulation results\nlibrary(ggplot2)\nggplot(simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation)) +\n  geom_line(alpha = 0.1, color = \"blue\") +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n# Calculate summary statistics at the final month\nfinal_month_stats &lt;- simulated_cum_df %&gt;%\n  filter(month == n_months) %&gt;%\n  summarise(\n    mean_return = mean(cumulative_return),\n    median_return = median(cumulative_return),\n    sd_return = sd(cumulative_return),\n    min_return = min(cumulative_return),\n    max_return = max(cumulative_return),\n    prob_positive = mean(cumulative_return &gt; 0)  # Probability of positive returns\n  )\n\n# Print the summary statistics\nprint(final_month_stats)\n\n# A tibble: 1 × 6\n  mean_return median_return sd_return min_return max_return prob_positive\n        &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1      0.0905        0.0817     0.160     -0.312      0.668         0.703\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nsummary_lines &lt;- simulated_cum_df %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    mean_cumulative = mean(cumulative_return),\n    median_cumulative = median(cumulative_return)\n  ) %&gt;%\n  pivot_longer(cols = c(mean_cumulative, median_cumulative),\n               names_to = \"Statistic\",\n               values_to = \"cumulative_return\")\n\n# Add mean and median lines to the plot with a legend\nlibrary(ggplot2)\n\nggplot() +\n  geom_line(data = simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation),\n            alpha = 0.1, color = \"blue\") +\n  geom_line(data = summary_lines, aes(x = month, y = cumulative_return, color = Statistic),\n            size = 1) +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\",\n    color = \"Key Metrics\"\n  ) +\n  theme_minimal() +\n  scale_color_manual(\n    values = c(\"mean_cumulative\" = \"red\", \"median_cumulative\" = \"green\"),\n    labels = c(\"Mean\", \"Median\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n# Ensure columns are in Date format\nwage_df_aligned &lt;- wage_df_monthly %&gt;%\n  filter(date &gt;= min(simulated_cum_df$month) & date &lt;= max(simulated_cum_df$month)) %&gt;%\n  mutate(date = as.Date(date))  # Ensure 'date' is in Date format\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = as.Date(month))  # Ensure 'month' is in Date format\n\n\n# Debugging filter outputs\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  \n\n# A tibble: 1,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-13 X1                   0.196  \n 2 1970-01-13 X2                  -0.0354 \n 3 1970-01-13 X3                   0.189  \n 4 1970-01-13 X4                   0.0339 \n 5 1970-01-13 X5                   0.229  \n 6 1970-01-13 X6                   0.00409\n 7 1970-01-13 X7                   0.0765 \n 8 1970-01-13 X8                   0.312  \n 9 1970-01-13 X9                  -0.0157 \n10 1970-01-13 X10                 -0.0378 \n# ℹ 990 more rows\n\n\n\n# Align dates to the first day of the month\nwage_df_aligned &lt;- wage_df_aligned %&gt;%\n  mutate(date = floor_date(date, unit = \"month\"))\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = floor_date(month, unit = \"month\"))\n\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  # Check filtered simulations\n\n# A tibble: 12,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-01 X1                  -0.0175 \n 2 1970-01-01 X2                   0.0249 \n 3 1970-01-01 X3                  -0.0204 \n 4 1970-01-01 X4                   0.0316 \n 5 1970-01-01 X5                   0.0416 \n 6 1970-01-01 X6                   0.0239 \n 7 1970-01-01 X7                   0.0516 \n 8 1970-01-01 X8                  -0.00253\n 9 1970-01-01 X9                   0.104  \n10 1970-01-01 X10                 -0.00957\n# ℹ 11,990 more rows\n\n\n\n# Regenerate simulation data to align with wage_df_monthly\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- nrow(wage_df_monthly)  # Match the number of months in wage_df_monthly\nsimulated_cum_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = 0.007, sd = 0.04),  # Use realistic mean and SD\n  ncol = n_sim\n)\n\n# Create a data frame with simulated cumulative returns\nsimulated_cum_df &lt;- data.frame(\n  month = rep(wage_df_monthly$date, each = n_sim),\n  simulation = rep(paste0(\"X\", 1:n_sim), times = n_months),\n  cumulative_return = as.vector(simulated_cum_returns)\n)\n\n\n# Merge wage growth data with cumulative returns\ncombined_data &lt;- merge(\n  wage_df_monthly,\n  simulated_cum_df %&gt;%\n    rename(simulation_id = simulation),\n  by.x = \"date\",\n  by.y = \"month\"\n)\n\n# Inspect combined data\nprint(head(combined_data))\n\n        date value simulation_id cumulative_return\n1 2001-01-01  87.6            X1      0.0009748016\n2 2001-01-01  87.6            X2      0.0390376223\n3 2001-01-01  87.6            X3     -0.0404687139\n4 2001-01-01  87.6            X4      0.0242254545\n5 2001-01-01  87.6            X5      0.0156698838\n6 2001-01-01  87.6            X6      0.0454516938\n\n\n\n\n\n\n# Parameters for simulation\ncontribution_rate &lt;- 0.1  # 10% of salary\nstarting_salary &lt;- 50000  # Example starting salary in dollars\n\n# Calculate contributions and portfolio value\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)),  # Adjust salary based on wage growth\n    contribution = monthly_salary * contribution_rate,  # Monthly contributions\n    portfolio_value = contribution * (1 + cumulative_return)  # Portfolio value after investment growth\n  )\n\n# Summarize the portfolio growth for each simulation\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value)\n  )\n\n# Inspect the summary\nprint(head(portfolio_summary))\n\n# A tibble: 6 × 2\n  simulation_id final_portfolio_value\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 X1                           80529.\n2 X10                          82803.\n3 X100                         82632.\n4 X1000                        81777.\n5 X101                         81882.\n6 X102                         83201.\n\n\n\n\n\n\nlibrary(ggplot2)\n\n# Plot the distribution of final portfolio values\nggplot(portfolio_summary, aes(x = final_portfolio_value)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Final Portfolio Values\",\n    x = \"Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Probability of achieving a $1M goal\ngoal &lt;- 1000000  # $1M goal\nprobability_of_success &lt;- mean(portfolio_summary$final_portfolio_value &gt;= goal)\n\n# Print the result\nprint(paste(\"Probability of achieving a portfolio value of $1M: \", \n            round(probability_of_success * 100, 2), \"%\"))\n\n[1] \"Probability of achieving a portfolio value of $1M:  0 %\"\n\n\n\n\n\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)) * (1 + cumulative_return),\n    contribution = monthly_salary * (contribution_rate + rnorm(1, 0, 0.01))  # Add random variability\n  )\n\n\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value, na.rm = TRUE)\n  )\n\nwithdrawal_rate &lt;- 0.04  # 4% annual withdrawal rate\nportfolio_summary &lt;- portfolio_summary %&gt;%\n  mutate(retirement_portfolio = final_portfolio_value * (1 - withdrawal_rate))\n\n\n\n\n\n# Plot the distribution of retirement portfolio values\nggplot(portfolio_summary, aes(x = retirement_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Post-Retirement Portfolio Values\",\n    x = \"Retirement Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# Number of bootstrap simulations\nn_bootstrap &lt;- 200\n\n# While Working: Bootstrap Wage Growth\nworking_histories &lt;- replicate(\n  n_bootstrap,\n  sample(combined_data$value, size = nrow(combined_data), replace = TRUE),\n  simplify = FALSE\n)\n\n# While Retired: Bootstrap Investment Returns\nretired_histories &lt;- replicate(\n  n_bootstrap,\n  sample(simulated_cum_df$cumulative_return, size = nrow(simulated_cum_df), replace = TRUE),\n  simplify = FALSE\n)\n\n\n\n\n\n# Define withdrawal rate\nwithdrawal_rate &lt;- 0.04\n\n# Simulate bootstrap histories\nbootstrap_results &lt;- lapply(seq_len(n_bootstrap), function(i) {\n  # Simulate while working\n  wage_growth &lt;- working_histories[[i]]\n  cumulative_contributions &lt;- cumsum(starting_salary * contribution_rate * wage_growth / first(wage_growth))\n  \n  # Simulate while retired\n  returns &lt;- retired_histories[[i]]\n  retirement_portfolio &lt;- numeric(length(returns))\n  retirement_portfolio[1] &lt;- tail(cumulative_contributions, 1)  # Starting portfolio value\n  \n  for (t in 2:length(returns)) {\n    retirement_portfolio[t] &lt;- retirement_portfolio[t - 1] * (1 + returns[t]) - (retirement_portfolio[t - 1] * withdrawal_rate)\n    if (retirement_portfolio[t] &lt; 0) {\n      retirement_portfolio[t] &lt;- 0  # Ensure portfolio doesn't go negative\n      break\n    }\n  }\n  \n  # Return results\n  list(\n    working = cumulative_contributions,\n    retired = retirement_portfolio\n  )\n})\n\n\n\n\n\n# Analyze bootstrap results\nbootstrap_analysis &lt;- do.call(rbind, lapply(bootstrap_results, function(res) {\n  data.frame(\n    max_contribution = max(res$working),\n    max_portfolio = max(res$retired, na.rm = TRUE),\n    exhausted = any(res$retired == 0)\n  )\n}))\n\n# Probability of exhausting savings\nprob_exhausted &lt;- mean(bootstrap_analysis$exhausted)\n\n# Summary statistics\nsummary_stats &lt;- bootstrap_analysis %&gt;%\n  summarise(\n    mean_contribution = mean(max_contribution),\n    mean_portfolio = mean(max_portfolio),\n    prob_exhausted = mean(exhausted)\n  )\nprint(summary_stats)\n\n  mean_contribution mean_portfolio prob_exhausted\n1          80108560       80861697              0\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = exhausted)) +\n  geom_bar(fill = \"red\", alpha = 0.7) +\n  labs(title = \"Probability of Portfolio Exhaustion\", x = \"Exhausted Savings\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = max_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Retirement Portfolio Values\", x = \"Portfolio Value ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nBased on the visualizations:\n\nProbability of Exhausting Savings:\n\nThe first chart shows 0 occurrences of exhausted savings (all FALSE for exhausted), suggesting that with the assumptions and bootstrap histories used, none of the retirement scenarios result in portfolio depletion.\n\nDistribution of Portfolio Values:\n\nThe second chart indicates some issue with the histogram visualization:\n\nThe x-axis shows extremely high portfolio values (e.g., 1.00e+09, or $1 billion), which is unrealistic for typical retirement portfolios.\nThe histogram bars appear scattered, possibly due to incorrect scaling or extreme values in the data.\n\n\n\n\n\n\nBased on the simulations, here are the recommendations:\n\n\nThe TRS plan is more suitable for employees who prioritize income stability during retirement. It provides:\n\nPredictable monthly payments.\nProtection against market volatility.\n\n\n\n\nThe ORP plan offers greater flexibility and potentially higher returns. However, the employee must:\n\nBe comfortable with market risk.\nConsider reducing withdrawal rates (e.g., 3% instead of 4%) to mitigate the risk of exhausting savings.\n\n\n\n\n\n\n\nAge and Career Duration:\n\nYounger employees with longer career horizons may benefit from ORP’s growth potential.\nEmployees nearing retirement may prefer the stability of TRS.\n\nStarting Salary:\n\nHigher salaries favor ORP for greater investment contributions.\nLower salaries may make TRS more attractive for guaranteed income.\n\nRisk Tolerance:\n\nTRS suits risk-averse individuals.\nORP suits those willing to accept variability for potential upside.\n\nInflation and Long-Term Sustainability:\n\nTRS benefits may not keep pace with inflation over a long retirement.\nORP portfolios, if managed well, can outpace inflation but require discipline in withdrawals.\n\n\n\n\n\n\n\nBootstrap Sampling:\n\nHistorical data used in simulations may not reflect future economic conditions.\nBootstrap methods assume past trends are indicative of future outcomes.\n\nSimplified Assumptions:\n\nFixed withdrawal rates and contribution percentages may not reflect real-life variability.\nEmployee preferences and external factors (e.g., tax changes) were not modeled.\n\nMarket Risks:\n\nSimulations cannot predict black swan events (e.g., 2008 financial crisis).\n\n\n\n\n\n\nThe choice between TRS and ORP depends on the employee’s individual priorities and circumstances. For those seeking stability and simplicity, TRS is a safer option. For those aiming to maximize retirement wealth and are comfortable with risk, ORP can offer higher potential returns, provided they follow a disciplined withdrawal strategy.\nFinal Recommendation: Align the decision with personal goals, risk tolerance, and financial needs. Regularly review and adjust the chosen plan as circumstances evolve."
  },
  {
    "objectID": "mp06.html",
    "href": "mp06.html",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "Retirement planning is one of the most critical financial decisions for employees, as it directly impacts their long-term financial security. This project aims to analyze and compare two retirement plans offered by CUNY: the Teachers’ Retirement System (TRS) and the Optional Retirement Program (ORP). Using Monte Carlo simulations, bootstrap sampling, and financial modeling, this report evaluates the potential outcomes of each plan under various economic scenarios.\nThe analysis leverages historical market returns, wage growth trends, and inflation data, sourced through APIs such as AlphaVantage and FRED. Key metrics like portfolio growth, probability of exhausting savings, and long-term sustainability are assessed to provide data-driven insights. By combining statistical rigor and financial modeling, this study offers actionable recommendations tailored to individual risk tolerance, career trajectory, and retirement goals."
  },
  {
    "objectID": "mp06.html#data-retrieval",
    "href": "mp06.html#data-retrieval",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "Data Retrieval",
    "text": "Data Retrieval\n\nLoad API keys\n\n#Accessing the keys\nalpha_key &lt;- Sys.getenv(\"ALPHAVANTAGE_KEY\")\nfred_key &lt;- Sys.getenv(\"FRED_KEY\")\n\n\n\nAlphaVantage Example: Get stock data\n\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_DAILY_ADJUSTED\",\n  symbol = \"AAPL\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load necessary libraries\nlibrary(httr)\n\n\n\nParse AlphaVantage Data\n\nlibrary(tibble)\nlibrary(tidyr)\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\nlibrary(dplyr) \n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Parse AlphaVantage Data\nstock_data &lt;- alpha_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;%\n  tidyr::unnest_wider(Metrics) %&gt;%\n  mutate(Date = as.Date(Date))\n\n\n# Example API request to fetch data\nresponse &lt;- GET(\"https://www.alphavantage.co/query\", query = list(\n  'function' = \"TIME_SERIES_DAILY\",\n  symbol = \"SP500\",\n  apikey = \"your_api_key\"\n))\n\n# Parse the content of the response\nsp500_data &lt;- content(response, \"parsed\")\n\n\nparams_sp500 &lt;- list(\n  `function` = \"TIME_SERIES_DAILY\",  # Use the free endpoint\n  symbol = \"SPY\",                   # Ticker symbol for SPDR S&P 500 ETF\n  apikey = alpha_key\n)\nresponse_sp500 &lt;- GET(alpha_url, query = params_sp500)\nsp500_data &lt;- content(response_sp500, as = \"parsed\", simplifyVector = TRUE)\n\n# Inspect response structure\nstr(sp500_data)\n\nList of 2\n $ Meta Data          :List of 5\n  ..$ 1. Information   : chr \"Daily Prices (open, high, low, close) and Volumes\"\n  ..$ 2. Symbol        : chr \"SPY\"\n  ..$ 3. Last Refreshed: chr \"2024-12-10\"\n  ..$ 4. Output Size   : chr \"Compact\"\n  ..$ 5. Time Zone     : chr \"US/Eastern\"\n $ Time Series (Daily):List of 100\n  ..$ 2024-12-10:List of 5\n  .. ..$ 1. open  : chr \"605.3700\"\n  .. ..$ 2. high  : chr \"605.8000\"\n  .. ..$ 3. low   : chr \"602.1300\"\n  .. ..$ 4. close : chr \"602.8000\"\n  .. ..$ 5. volume: chr \"37234515\"\n  ..$ 2024-12-09:List of 5\n  .. ..$ 1. open  : chr \"607.6900\"\n  .. ..$ 2. high  : chr \"607.8600\"\n  .. ..$ 3. low   : chr \"604.0800\"\n  .. ..$ 4. close : chr \"604.6800\"\n  .. ..$ 5. volume: chr \"34742738\"\n  ..$ 2024-12-06:List of 5\n  .. ..$ 1. open  : chr \"607.4400\"\n  .. ..$ 2. high  : chr \"609.0700\"\n  .. ..$ 3. low   : chr \"607.0200\"\n  .. ..$ 4. close : chr \"607.8100\"\n  .. ..$ 5. volume: chr \"31241549\"\n  ..$ 2024-12-05:List of 5\n  .. ..$ 1. open  : chr \"607.6600\"\n  .. ..$ 2. high  : chr \"608.4800\"\n  .. ..$ 3. low   : chr \"606.3050\"\n  .. ..$ 4. close : chr \"606.6600\"\n  .. ..$ 5. volume: chr \"28762183\"\n  ..$ 2024-12-04:List of 5\n  .. ..$ 1. open  : chr \"605.6300\"\n  .. ..$ 2. high  : chr \"607.9100\"\n  .. ..$ 3. low   : chr \"604.9500\"\n  .. ..$ 4. close : chr \"607.6600\"\n  .. ..$ 5. volume: chr \"42787561\"\n  ..$ 2024-12-03:List of 5\n  .. ..$ 1. open  : chr \"603.3900\"\n  .. ..$ 2. high  : chr \"604.1600\"\n  .. ..$ 3. low   : chr \"602.3410\"\n  .. ..$ 4. close : chr \"603.9100\"\n  .. ..$ 5. volume: chr \"26906629\"\n  ..$ 2024-12-02:List of 5\n  .. ..$ 1. open  : chr \"602.9700\"\n  .. ..$ 2. high  : chr \"604.3200\"\n  .. ..$ 3. low   : chr \"602.4700\"\n  .. ..$ 4. close : chr \"603.6300\"\n  .. ..$ 5. volume: chr \"31745989\"\n  ..$ 2024-11-29:List of 5\n  .. ..$ 1. open  : chr \"599.6600\"\n  .. ..$ 2. high  : chr \"603.3500\"\n  .. ..$ 3. low   : chr \"599.3800\"\n  .. ..$ 4. close : chr \"602.5500\"\n  .. ..$ 5. volume: chr \"30095740\"\n  ..$ 2024-11-27:List of 5\n  .. ..$ 1. open  : chr \"600.4600\"\n  .. ..$ 2. high  : chr \"600.8500\"\n  .. ..$ 3. low   : chr \"597.2800\"\n  .. ..$ 4. close : chr \"598.8300\"\n  .. ..$ 5. volume: chr \"34000163\"\n  ..$ 2024-11-26:List of 5\n  .. ..$ 1. open  : chr \"598.8000\"\n  .. ..$ 2. high  : chr \"601.3300\"\n  .. ..$ 3. low   : chr \"598.0700\"\n  .. ..$ 4. close : chr \"600.6500\"\n  .. ..$ 5. volume: chr \"45621288\"\n  ..$ 2024-11-25:List of 5\n  .. ..$ 1. open  : chr \"599.5200\"\n  .. ..$ 2. high  : chr \"600.8600\"\n  .. ..$ 3. low   : chr \"595.2000\"\n  .. ..$ 4. close : chr \"597.5300\"\n  .. ..$ 5. volume: chr \"42441393\"\n  ..$ 2024-11-22:List of 5\n  .. ..$ 1. open  : chr \"593.6600\"\n  .. ..$ 2. high  : chr \"596.1500\"\n  .. ..$ 3. low   : chr \"593.1525\"\n  .. ..$ 4. close : chr \"595.5100\"\n  .. ..$ 5. volume: chr \"38226390\"\n  ..$ 2024-11-21:List of 5\n  .. ..$ 1. open  : chr \"593.4000\"\n  .. ..$ 2. high  : chr \"595.1200\"\n  .. ..$ 3. low   : chr \"587.4500\"\n  .. ..$ 4. close : chr \"593.6700\"\n  .. ..$ 5. volume: chr \"46750285\"\n  ..$ 2024-11-20:List of 5\n  .. ..$ 1. open  : chr \"590.3800\"\n  .. ..$ 2. high  : chr \"590.7900\"\n  .. ..$ 3. low   : chr \"584.6300\"\n  .. ..$ 4. close : chr \"590.5000\"\n  .. ..$ 5. volume: chr \"50032576\"\n  ..$ 2024-11-19:List of 5\n  .. ..$ 1. open  : chr \"584.7100\"\n  .. ..$ 2. high  : chr \"591.0450\"\n  .. ..$ 3. low   : chr \"584.0300\"\n  .. ..$ 4. close : chr \"590.3000\"\n  .. ..$ 5. volume: chr \"49412046\"\n  ..$ 2024-11-18:List of 5\n  .. ..$ 1. open  : chr \"586.2200\"\n  .. ..$ 2. high  : chr \"589.4900\"\n  .. ..$ 3. low   : chr \"585.3400\"\n  .. ..$ 4. close : chr \"588.1500\"\n  .. ..$ 5. volume: chr \"37084081\"\n  ..$ 2024-11-15:List of 5\n  .. ..$ 1. open  : chr \"589.7200\"\n  .. ..$ 2. high  : chr \"590.2000\"\n  .. ..$ 3. low   : chr \"583.8600\"\n  .. ..$ 4. close : chr \"585.7500\"\n  .. ..$ 5. volume: chr \"75988766\"\n  ..$ 2024-11-14:List of 5\n  .. ..$ 1. open  : chr \"597.3200\"\n  .. ..$ 2. high  : chr \"597.8100\"\n  .. ..$ 3. low   : chr \"592.6500\"\n  .. ..$ 4. close : chr \"593.3500\"\n  .. ..$ 5. volume: chr \"38904109\"\n  ..$ 2024-11-13:List of 5\n  .. ..$ 1. open  : chr \"597.3700\"\n  .. ..$ 2. high  : chr \"599.2300\"\n  .. ..$ 3. low   : chr \"594.9600\"\n  .. ..$ 4. close : chr \"597.1900\"\n  .. ..$ 5. volume: chr \"47388640\"\n  ..$ 2024-11-12:List of 5\n  .. ..$ 1. open  : chr \"598.6800\"\n  .. ..$ 2. high  : chr \"599.2900\"\n  .. ..$ 3. low   : chr \"594.3700\"\n  .. ..$ 4. close : chr \"596.9000\"\n  .. ..$ 5. volume: chr \"43006128\"\n  ..$ 2024-11-11:List of 5\n  .. ..$ 1. open  : chr \"599.8100\"\n  .. ..$ 2. high  : chr \"600.1700\"\n  .. ..$ 3. low   : chr \"597.0000\"\n  .. ..$ 4. close : chr \"598.7600\"\n  .. ..$ 5. volume: chr \"37586773\"\n  ..$ 2024-11-08:List of 5\n  .. ..$ 1. open  : chr \"596.1700\"\n  .. ..$ 2. high  : chr \"599.6400\"\n  .. ..$ 3. low   : chr \"596.1650\"\n  .. ..$ 4. close : chr \"598.1900\"\n  .. ..$ 5. volume: chr \"46444893\"\n  ..$ 2024-11-07:List of 5\n  .. ..$ 1. open  : chr \"593.0800\"\n  .. ..$ 2. high  : chr \"596.6500\"\n  .. ..$ 3. low   : chr \"592.9999\"\n  .. ..$ 4. close : chr \"595.6100\"\n  .. ..$ 5. volume: chr \"47233212\"\n  ..$ 2024-11-06:List of 5\n  .. ..$ 1. open  : chr \"589.2000\"\n  .. ..$ 2. high  : chr \"591.9300\"\n  .. ..$ 3. low   : chr \"585.3900\"\n  .. ..$ 4. close : chr \"591.0400\"\n  .. ..$ 5. volume: chr \"68181968\"\n  ..$ 2024-11-05:List of 5\n  .. ..$ 1. open  : chr \"570.7400\"\n  .. ..$ 2. high  : chr \"576.7400\"\n  .. ..$ 3. low   : chr \"570.5200\"\n  .. ..$ 4. close : chr \"576.7000\"\n  .. ..$ 5. volume: chr \"39478322\"\n  ..$ 2024-11-04:List of 5\n  .. ..$ 1. open  : chr \"571.1800\"\n  .. ..$ 2. high  : chr \"572.5000\"\n  .. ..$ 3. low   : chr \"567.8900\"\n  .. ..$ 4. close : chr \"569.8100\"\n  .. ..$ 5. volume: chr \"38216975\"\n  ..$ 2024-11-01:List of 5\n  .. ..$ 1. open  : chr \"571.3200\"\n  .. ..$ 2. high  : chr \"575.5500\"\n  .. ..$ 3. low   : chr \"570.6200\"\n  .. ..$ 4. close : chr \"571.0400\"\n  .. ..$ 5. volume: chr \"45667533\"\n  ..$ 2024-10-31:List of 5\n  .. ..$ 1. open  : chr \"575.5600\"\n  .. ..$ 2. high  : chr \"575.6300\"\n  .. ..$ 3. low   : chr \"568.4400\"\n  .. ..$ 4. close : chr \"568.6400\"\n  .. ..$ 5. volume: chr \"60182451\"\n  ..$ 2024-10-30:List of 5\n  .. ..$ 1. open  : chr \"581.2900\"\n  .. ..$ 2. high  : chr \"583.3200\"\n  .. ..$ 3. low   : chr \"579.2900\"\n  .. ..$ 4. close : chr \"580.0100\"\n  .. ..$ 5. volume: chr \"41435839\"\n  ..$ 2024-10-29:List of 5\n  .. ..$ 1. open  : chr \"579.8500\"\n  .. ..$ 2. high  : chr \"582.9070\"\n  .. ..$ 3. low   : chr \"578.4300\"\n  .. ..$ 4. close : chr \"581.7700\"\n  .. ..$ 5. volume: chr \"42899661\"\n  ..$ 2024-10-28:List of 5\n  .. ..$ 1. open  : chr \"582.5800\"\n  .. ..$ 2. high  : chr \"582.7100\"\n  .. ..$ 3. low   : chr \"580.5200\"\n  .. ..$ 4. close : chr \"580.8300\"\n  .. ..$ 5. volume: chr \"30174704\"\n  ..$ 2024-10-25:List of 5\n  .. ..$ 1. open  : chr \"581.5100\"\n  .. ..$ 2. high  : chr \"584.4600\"\n  .. ..$ 3. low   : chr \"578.0800\"\n  .. ..$ 4. close : chr \"579.0400\"\n  .. ..$ 5. volume: chr \"47268176\"\n  ..$ 2024-10-24:List of 5\n  .. ..$ 1. open  : chr \"579.9800\"\n  .. ..$ 2. high  : chr \"580.0600\"\n  .. ..$ 3. low   : chr \"576.5700\"\n  .. ..$ 4. close : chr \"579.2400\"\n  .. ..$ 5. volume: chr \"34979860\"\n  ..$ 2024-10-23:List of 5\n  .. ..$ 1. open  : chr \"581.2600\"\n  .. ..$ 2. high  : chr \"581.7086\"\n  .. ..$ 3. low   : chr \"574.4150\"\n  .. ..$ 4. close : chr \"577.9900\"\n  .. ..$ 5. volume: chr \"49314574\"\n  ..$ 2024-10-22:List of 5\n  .. ..$ 1. open  : chr \"581.0500\"\n  .. ..$ 2. high  : chr \"584.5000\"\n  .. ..$ 3. low   : chr \"580.3800\"\n  .. ..$ 4. close : chr \"583.3200\"\n  .. ..$ 5. volume: chr \"34183835\"\n  ..$ 2024-10-21:List of 5\n  .. ..$ 1. open  : chr \"583.8500\"\n  .. ..$ 2. high  : chr \"584.8500\"\n  .. ..$ 3. low   : chr \"580.6001\"\n  .. ..$ 4. close : chr \"583.6300\"\n  .. ..$ 5. volume: chr \"36439010\"\n  ..$ 2024-10-18:List of 5\n  .. ..$ 1. open  : chr \"584.0700\"\n  .. ..$ 2. high  : chr \"585.3900\"\n  .. ..$ 3. low   : chr \"582.5800\"\n  .. ..$ 4. close : chr \"584.5900\"\n  .. ..$ 5. volume: chr \"37416801\"\n  ..$ 2024-10-17:List of 5\n  .. ..$ 1. open  : chr \"585.9100\"\n  .. ..$ 2. high  : chr \"586.1200\"\n  .. ..$ 3. low   : chr \"582.1600\"\n  .. ..$ 4. close : chr \"582.3500\"\n  .. ..$ 5. volume: chr \"34393714\"\n  ..$ 2024-10-16:List of 5\n  .. ..$ 1. open  : chr \"579.7800\"\n  .. ..$ 2. high  : chr \"582.8300\"\n  .. ..$ 3. low   : chr \"578.9600\"\n  .. ..$ 4. close : chr \"582.3000\"\n  .. ..$ 5. volume: chr \"30725436\"\n  ..$ 2024-10-15:List of 5\n  .. ..$ 1. open  : chr \"584.5900\"\n  .. ..$ 2. high  : chr \"584.9000\"\n  .. ..$ 3. low   : chr \"578.5450\"\n  .. ..$ 4. close : chr \"579.7800\"\n  .. ..$ 5. volume: chr \"54203636\"\n  ..$ 2024-10-14:List of 5\n  .. ..$ 1. open  : chr \"581.2200\"\n  .. ..$ 2. high  : chr \"585.2700\"\n  .. ..$ 3. low   : chr \"580.7300\"\n  .. ..$ 4. close : chr \"584.3200\"\n  .. ..$ 5. volume: chr \"36217215\"\n  ..$ 2024-10-11:List of 5\n  .. ..$ 1. open  : chr \"576.0500\"\n  .. ..$ 2. high  : chr \"580.3300\"\n  .. ..$ 3. low   : chr \"575.9100\"\n  .. ..$ 4. close : chr \"579.5800\"\n  .. ..$ 5. volume: chr \"42267994\"\n  ..$ 2024-10-10:List of 5\n  .. ..$ 1. open  : chr \"575.7700\"\n  .. ..$ 2. high  : chr \"577.5800\"\n  .. ..$ 3. low   : chr \"574.4900\"\n  .. ..$ 4. close : chr \"576.1300\"\n  .. ..$ 5. volume: chr \"44138060\"\n  ..$ 2024-10-09:List of 5\n  .. ..$ 1. open  : chr \"573.1600\"\n  .. ..$ 2. high  : chr \"577.7100\"\n  .. ..$ 3. low   : chr \"572.5500\"\n  .. ..$ 4. close : chr \"577.1400\"\n  .. ..$ 5. volume: chr \"37912244\"\n  ..$ 2024-10-08:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"573.7800\"\n  .. ..$ 3. low   : chr \"569.5299\"\n  .. ..$ 4. close : chr \"573.1700\"\n  .. ..$ 5. volume: chr \"37398693\"\n  ..$ 2024-10-07:List of 5\n  .. ..$ 1. open  : chr \"571.3000\"\n  .. ..$ 2. high  : chr \"571.9599\"\n  .. ..$ 3. low   : chr \"566.6300\"\n  .. ..$ 4. close : chr \"567.8000\"\n  .. ..$ 5. volume: chr \"49964690\"\n  ..$ 2024-10-04:List of 5\n  .. ..$ 1. open  : chr \"572.3500\"\n  .. ..$ 2. high  : chr \"573.3600\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"572.9800\"\n  .. ..$ 5. volume: chr \"43005186\"\n  ..$ 2024-10-03:List of 5\n  .. ..$ 1. open  : chr \"567.3600\"\n  .. ..$ 2. high  : chr \"569.8025\"\n  .. ..$ 3. low   : chr \"565.4900\"\n  .. ..$ 4. close : chr \"567.8200\"\n  .. ..$ 5. volume: chr \"40846466\"\n  ..$ 2024-10-02:List of 5\n  .. ..$ 1. open  : chr \"567.7100\"\n  .. ..$ 2. high  : chr \"569.9000\"\n  .. ..$ 3. low   : chr \"565.2700\"\n  .. ..$ 4. close : chr \"568.8600\"\n  .. ..$ 5. volume: chr \"38097798\"\n  ..$ 2024-10-01:List of 5\n  .. ..$ 1. open  : chr \"573.4000\"\n  .. ..$ 2. high  : chr \"574.0622\"\n  .. ..$ 3. low   : chr \"566.0000\"\n  .. ..$ 4. close : chr \"568.6200\"\n  .. ..$ 5. volume: chr \"72668778\"\n  ..$ 2024-09-30:List of 5\n  .. ..$ 1. open  : chr \"570.4200\"\n  .. ..$ 2. high  : chr \"574.3800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"573.7600\"\n  .. ..$ 5. volume: chr \"63655448\"\n  ..$ 2024-09-27:List of 5\n  .. ..$ 1. open  : chr \"573.3900\"\n  .. ..$ 2. high  : chr \"574.2200\"\n  .. ..$ 3. low   : chr \"570.4200\"\n  .. ..$ 4. close : chr \"571.4700\"\n  .. ..$ 5. volume: chr \"42100928\"\n  ..$ 2024-09-26:List of 5\n  .. ..$ 1. open  : chr \"574.3800\"\n  .. ..$ 2. high  : chr \"574.7100\"\n  .. ..$ 3. low   : chr \"569.9000\"\n  .. ..$ 4. close : chr \"572.3000\"\n  .. ..$ 5. volume: chr \"48336004\"\n  ..$ 2024-09-25:List of 5\n  .. ..$ 1. open  : chr \"571.1400\"\n  .. ..$ 2. high  : chr \"571.8900\"\n  .. ..$ 3. low   : chr \"568.9100\"\n  .. ..$ 4. close : chr \"570.0400\"\n  .. ..$ 5. volume: chr \"38428587\"\n  ..$ 2024-09-24:List of 5\n  .. ..$ 1. open  : chr \"570.4800\"\n  .. ..$ 2. high  : chr \"571.3600\"\n  .. ..$ 3. low   : chr \"567.6000\"\n  .. ..$ 4. close : chr \"571.3000\"\n  .. ..$ 5. volume: chr \"46805672\"\n  ..$ 2024-09-23:List of 5\n  .. ..$ 1. open  : chr \"569.3400\"\n  .. ..$ 2. high  : chr \"570.3325\"\n  .. ..$ 3. low   : chr \"568.1000\"\n  .. ..$ 4. close : chr \"569.6700\"\n  .. ..$ 5. volume: chr \"44116922\"\n  ..$ 2024-09-20:List of 5\n  .. ..$ 1. open  : chr \"567.8400\"\n  .. ..$ 2. high  : chr \"569.3100\"\n  .. ..$ 3. low   : chr \"565.1700\"\n  .. ..$ 4. close : chr \"568.2500\"\n  .. ..$ 5. volume: chr \"77503110\"\n  ..$ 2024-09-19:List of 5\n  .. ..$ 1. open  : chr \"571.0100\"\n  .. ..$ 2. high  : chr \"572.8800\"\n  .. ..$ 3. low   : chr \"568.0800\"\n  .. ..$ 4. close : chr \"570.9800\"\n  .. ..$ 5. volume: chr \"75315470\"\n  ..$ 2024-09-18:List of 5\n  .. ..$ 1. open  : chr \"563.7400\"\n  .. ..$ 2. high  : chr \"568.6900\"\n  .. ..$ 3. low   : chr \"560.8300\"\n  .. ..$ 4. close : chr \"561.4000\"\n  .. ..$ 5. volume: chr \"59044937\"\n  ..$ 2024-09-17:List of 5\n  .. ..$ 1. open  : chr \"565.1000\"\n  .. ..$ 2. high  : chr \"566.5800\"\n  .. ..$ 3. low   : chr \"560.7950\"\n  .. ..$ 4. close : chr \"563.0700\"\n  .. ..$ 5. volume: chr \"49320970\"\n  ..$ 2024-09-16:List of 5\n  .. ..$ 1. open  : chr \"561.7400\"\n  .. ..$ 2. high  : chr \"563.1100\"\n  .. ..$ 3. low   : chr \"559.9000\"\n  .. ..$ 4. close : chr \"562.8400\"\n  .. ..$ 5. volume: chr \"36656122\"\n  ..$ 2024-09-13:List of 5\n  .. ..$ 1. open  : chr \"559.7100\"\n  .. ..$ 2. high  : chr \"563.0300\"\n  .. ..$ 3. low   : chr \"559.4500\"\n  .. ..$ 4. close : chr \"562.0100\"\n  .. ..$ 5. volume: chr \"39310501\"\n  ..$ 2024-09-12:List of 5\n  .. ..$ 1. open  : chr \"555.0100\"\n  .. ..$ 2. high  : chr \"559.4000\"\n  .. ..$ 3. low   : chr \"552.7400\"\n  .. ..$ 4. close : chr \"559.0900\"\n  .. ..$ 5. volume: chr \"51892735\"\n  ..$ 2024-09-11:List of 5\n  .. ..$ 1. open  : chr \"548.7000\"\n  .. ..$ 2. high  : chr \"555.3600\"\n  .. ..$ 3. low   : chr \"539.9600\"\n  .. ..$ 4. close : chr \"554.4200\"\n  .. ..$ 5. volume: chr \"75248608\"\n  ..$ 2024-09-10:List of 5\n  .. ..$ 1. open  : chr \"548.3600\"\n  .. ..$ 2. high  : chr \"549.1500\"\n  .. ..$ 3. low   : chr \"543.3800\"\n  .. ..$ 4. close : chr \"548.7900\"\n  .. ..$ 5. volume: chr \"36394579\"\n  ..$ 2024-09-09:List of 5\n  .. ..$ 1. open  : chr \"544.6500\"\n  .. ..$ 2. high  : chr \"547.7100\"\n  .. ..$ 3. low   : chr \"542.6800\"\n  .. ..$ 4. close : chr \"546.4100\"\n  .. ..$ 5. volume: chr \"40445822\"\n  ..$ 2024-09-06:List of 5\n  .. ..$ 1. open  : chr \"549.9400\"\n  .. ..$ 2. high  : chr \"551.6000\"\n  .. ..$ 3. low   : chr \"539.4400\"\n  .. ..$ 4. close : chr \"540.3600\"\n  .. ..$ 5. volume: chr \"68493805\"\n  ..$ 2024-09-05:List of 5\n  .. ..$ 1. open  : chr \"550.8900\"\n  .. ..$ 2. high  : chr \"553.7995\"\n  .. ..$ 3. low   : chr \"547.1000\"\n  .. ..$ 4. close : chr \"549.6100\"\n  .. ..$ 5. volume: chr \"44264258\"\n  ..$ 2024-09-04:List of 5\n  .. ..$ 1. open  : chr \"550.2000\"\n  .. ..$ 2. high  : chr \"554.4300\"\n  .. ..$ 3. low   : chr \"549.4600\"\n  .. ..$ 4. close : chr \"550.9500\"\n  .. ..$ 5. volume: chr \"46232483\"\n  ..$ 2024-09-03:List of 5\n  .. ..$ 1. open  : chr \"560.4700\"\n  .. ..$ 2. high  : chr \"560.8100\"\n  .. ..$ 3. low   : chr \"549.5100\"\n  .. ..$ 4. close : chr \"552.0800\"\n  .. ..$ 5. volume: chr \"60600113\"\n  ..$ 2024-08-30:List of 5\n  .. ..$ 1. open  : chr \"560.7700\"\n  .. ..$ 2. high  : chr \"564.2000\"\n  .. ..$ 3. low   : chr \"557.1400\"\n  .. ..$ 4. close : chr \"563.6800\"\n  .. ..$ 5. volume: chr \"62700110\"\n  ..$ 2024-08-29:List of 5\n  .. ..$ 1. open  : chr \"560.3100\"\n  .. ..$ 2. high  : chr \"563.6800\"\n  .. ..$ 3. low   : chr \"557.1800\"\n  .. ..$ 4. close : chr \"558.3500\"\n  .. ..$ 5. volume: chr \"38715176\"\n  ..$ 2024-08-28:List of 5\n  .. ..$ 1. open  : chr \"561.2100\"\n  .. ..$ 2. high  : chr \"561.6500\"\n  .. ..$ 3. low   : chr \"555.0400\"\n  .. ..$ 4. close : chr \"558.3000\"\n  .. ..$ 5. volume: chr \"41066024\"\n  ..$ 2024-08-27:List of 5\n  .. ..$ 1. open  : chr \"559.4900\"\n  .. ..$ 2. high  : chr \"562.0600\"\n  .. ..$ 3. low   : chr \"558.3200\"\n  .. ..$ 4. close : chr \"561.5600\"\n  .. ..$ 5. volume: chr \"32693898\"\n  ..$ 2024-08-26:List of 5\n  .. ..$ 1. open  : chr \"563.1800\"\n  .. ..$ 2. high  : chr \"563.9100\"\n  .. ..$ 3. low   : chr \"559.0500\"\n  .. ..$ 4. close : chr \"560.7900\"\n  .. ..$ 5. volume: chr \"35788609\"\n  ..$ 2024-08-23:List of 5\n  .. ..$ 1. open  : chr \"559.5300\"\n  .. ..$ 2. high  : chr \"563.0900\"\n  .. ..$ 3. low   : chr \"557.2900\"\n  .. ..$ 4. close : chr \"562.1300\"\n  .. ..$ 5. volume: chr \"50639393\"\n  ..$ 2024-08-22:List of 5\n  .. ..$ 1. open  : chr \"562.5600\"\n  .. ..$ 2. high  : chr \"563.1800\"\n  .. ..$ 3. low   : chr \"554.9800\"\n  .. ..$ 4. close : chr \"556.2200\"\n  .. ..$ 5. volume: chr \"56121456\"\n  ..$ 2024-08-21:List of 5\n  .. ..$ 1. open  : chr \"559.7700\"\n  .. ..$ 2. high  : chr \"562.1100\"\n  .. ..$ 3. low   : chr \"554.7300\"\n  .. ..$ 4. close : chr \"560.6200\"\n  .. ..$ 5. volume: chr \"41514600\"\n  ..$ 2024-08-20:List of 5\n  .. ..$ 1. open  : chr \"559.1500\"\n  .. ..$ 2. high  : chr \"560.8400\"\n  .. ..$ 3. low   : chr \"557.3250\"\n  .. ..$ 4. close : chr \"558.7000\"\n  .. ..$ 5. volume: chr \"33732264\"\n  ..$ 2024-08-19:List of 5\n  .. ..$ 1. open  : chr \"554.7300\"\n  .. ..$ 2. high  : chr \"559.6100\"\n  .. ..$ 3. low   : chr \"553.8600\"\n  .. ..$ 4. close : chr \"559.6100\"\n  .. ..$ 5. volume: chr \"39121793\"\n  ..$ 2024-08-16:List of 5\n  .. ..$ 1. open  : chr \"551.4200\"\n  .. ..$ 2. high  : chr \"555.0200\"\n  .. ..$ 3. low   : chr \"551.2600\"\n  .. ..$ 4. close : chr \"554.3100\"\n  .. ..$ 5. volume: chr \"44430728\"\n  ..$ 2024-08-15:List of 5\n  .. ..$ 1. open  : chr \"549.5000\"\n  .. ..$ 2. high  : chr \"553.3600\"\n  .. ..$ 3. low   : chr \"548.8800\"\n  .. ..$ 4. close : chr \"553.0700\"\n  .. ..$ 5. volume: chr \"60846812\"\n  ..$ 2024-08-14:List of 5\n  .. ..$ 1. open  : chr \"542.8500\"\n  .. ..$ 2. high  : chr \"544.9600\"\n  .. ..$ 3. low   : chr \"540.1200\"\n  .. ..$ 4. close : chr \"543.7500\"\n  .. ..$ 5. volume: chr \"42446929\"\n  ..$ 2024-08-13:List of 5\n  .. ..$ 1. open  : chr \"536.5300\"\n  .. ..$ 2. high  : chr \"542.2800\"\n  .. ..$ 3. low   : chr \"536.2800\"\n  .. ..$ 4. close : chr \"542.0400\"\n  .. ..$ 5. volume: chr \"52333073\"\n  ..$ 2024-08-12:List of 5\n  .. ..$ 1. open  : chr \"534.2100\"\n  .. ..$ 2. high  : chr \"535.7300\"\n  .. ..$ 3. low   : chr \"530.9500\"\n  .. ..$ 4. close : chr \"533.2700\"\n  .. ..$ 5. volume: chr \"42542069\"\n  ..$ 2024-08-09:List of 5\n  .. ..$ 1. open  : chr \"529.8100\"\n  .. ..$ 2. high  : chr \"534.5100\"\n  .. ..$ 3. low   : chr \"528.5600\"\n  .. ..$ 4. close : chr \"532.9900\"\n  .. ..$ 5. volume: chr \"45619558\"\n  ..$ 2024-08-08:List of 5\n  .. ..$ 1. open  : chr \"523.9100\"\n  .. ..$ 2. high  : chr \"531.2900\"\n  .. ..$ 3. low   : chr \"521.8400\"\n  .. ..$ 4. close : chr \"530.6500\"\n  .. ..$ 5. volume: chr \"63276589\"\n  ..$ 2024-08-07:List of 5\n  .. ..$ 1. open  : chr \"528.4700\"\n  .. ..$ 2. high  : chr \"531.5900\"\n  .. ..$ 3. low   : chr \"518.0519\"\n  .. ..$ 4. close : chr \"518.6600\"\n  .. ..$ 5. volume: chr \"70698340\"\n  ..$ 2024-08-06:List of 5\n  .. ..$ 1. open  : chr \"519.2200\"\n  .. ..$ 2. high  : chr \"529.7500\"\n  .. ..$ 3. low   : chr \"517.8700\"\n  .. ..$ 4. close : chr \"522.1500\"\n  .. ..$ 5. volume: chr \"84826312\"\n  ..$ 2024-08-05:List of 5\n  .. ..$ 1. open  : chr \"511.6400\"\n  .. ..$ 2. high  : chr \"523.5800\"\n  .. ..$ 3. low   : chr \"510.2700\"\n  .. ..$ 4. close : chr \"517.3800\"\n  .. ..$ 5. volume: chr \"146267391\"\n  ..$ 2024-08-02:List of 5\n  .. ..$ 1. open  : chr \"535.7500\"\n  .. ..$ 2. high  : chr \"536.9900\"\n  .. ..$ 3. low   : chr \"528.6000\"\n  .. ..$ 4. close : chr \"532.9000\"\n  .. ..$ 5. volume: chr \"82789070\"\n  ..$ 2024-08-01:List of 5\n  .. ..$ 1. open  : chr \"552.5700\"\n  .. ..$ 2. high  : chr \"554.8688\"\n  .. ..$ 3. low   : chr \"539.4300\"\n  .. ..$ 4. close : chr \"543.0100\"\n  .. ..$ 5. volume: chr \"76428732\"\n  ..$ 2024-07-31:List of 5\n  .. ..$ 1. open  : chr \"548.9800\"\n  .. ..$ 2. high  : chr \"553.5000\"\n  .. ..$ 3. low   : chr \"547.5799\"\n  .. ..$ 4. close : chr \"550.8100\"\n  .. ..$ 5. volume: chr \"65663388\"\n  ..$ 2024-07-30:List of 5\n  .. ..$ 1. open  : chr \"546.2600\"\n  .. ..$ 2. high  : chr \"547.3400\"\n  .. ..$ 3. low   : chr \"538.5150\"\n  .. ..$ 4. close : chr \"542.0000\"\n  .. ..$ 5. volume: chr \"46853632\"\n  ..$ 2024-07-29:List of 5\n  .. ..$ 1. open  : chr \"546.0200\"\n  .. ..$ 2. high  : chr \"547.0500\"\n  .. ..$ 3. low   : chr \"542.7200\"\n  .. ..$ 4. close : chr \"544.7600\"\n  .. ..$ 5. volume: chr \"39515824\"\n  ..$ 2024-07-26:List of 5\n  .. ..$ 1. open  : chr \"542.2800\"\n  .. ..$ 2. high  : chr \"547.1900\"\n  .. ..$ 3. low   : chr \"541.4900\"\n  .. ..$ 4. close : chr \"544.4400\"\n  .. ..$ 5. volume: chr \"53763788\"\n  ..$ 2024-07-25:List of 5\n  .. ..$ 1. open  : chr \"541.3500\"\n  .. ..$ 2. high  : chr \"547.4550\"\n  .. ..$ 3. low   : chr \"537.4500\"\n  .. ..$ 4. close : chr \"538.4100\"\n  .. ..$ 5. volume: chr \"61158288\"\n  ..$ 2024-07-24:List of 5\n  .. ..$ 1. open  : chr \"548.8600\"\n  .. ..$ 2. high  : chr \"549.1700\"\n  .. ..$ 3. low   : chr \"540.2900\"\n  .. ..$ 4. close : chr \"541.2300\"\n  .. ..$ 5. volume: chr \"74515266\"\n  ..$ 2024-07-23:List of 5\n  .. ..$ 1. open  : chr \"554.5400\"\n  .. ..$ 2. high  : chr \"556.7350\"\n  .. ..$ 3. low   : chr \"553.2750\"\n  .. ..$ 4. close : chr \"553.7800\"\n  .. ..$ 5. volume: chr \"34439561\"\n  .. [list output truncated]\n\n\n\nlibrary(httr)\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.0.2\n✔ ggplot2   3.5.1     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Extract and parse the \"Time Series (Daily)\" data\nsp500_data_clean &lt;- sp500_data[[\"Time Series (Daily)\"]] %&gt;%\n  tibble::enframe(name = \"Date\", value = \"Metrics\") %&gt;% # Convert list to tibble\n  unnest_wider(Metrics) %&gt;% # Flatten the nested list in \"Metrics\"\n  mutate(\n    Date = as.Date(Date), # Convert date to Date format\n    `1. open` = as.numeric(`1. open`),\n    `2. high` = as.numeric(`2. high`),\n    `3. low` = as.numeric(`3. low`),\n    `4. close` = as.numeric(`4. close`),\n    `5. volume` = as.numeric(`5. volume`)\n  )\n\n# Inspect the cleaned data\nhead(sp500_data_clean)\n\n# A tibble: 6 × 6\n  Date       `1. open` `2. high` `3. low` `4. close` `5. volume`\n  &lt;date&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;\n1 2024-12-10      605.      606.     602.       603.    37234515\n2 2024-12-09      608.      608.     604.       605.    34742738\n3 2024-12-06      607.      609.     607.       608.    31241549\n4 2024-12-05      608.      608.     606.       607.    28762183\n5 2024-12-04      606.      608.     605.       608.    42787561\n6 2024-12-03      603.      604.     602.       604.    26906629\n\n\n\n\nFRED Example: Get economic indicator data\n\nfred_url &lt;- paste0(\"https://api.stlouisfed.org/fred/series/observations\")\nfred_params &lt;- list(\n  series_id = \"GDP\",\n  api_key = fred_key,\n  file_type = \"json\"\n)\nfred_response &lt;- GET(fred_url, query = fred_params)\nfred_data &lt;- content(fred_response, as = \"parsed\", simplifyVector = TRUE)\n\n\n# Load required libraries\nlibrary(tidyverse)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Limit to most recent 1 year (365 days) to reduce data points\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  filter(Date &gt;= as.Date(max(Date)) - 365)\n\n# Precompute and downsample moving averages to reduce computation\nsp500_data_clean &lt;- sp500_data_clean %&gt;%\n  mutate(\n    ma_30 = zoo::rollapply(`4. close`, width = 30, FUN = mean, fill = NA, align = \"right\"),\n    ma_90 = zoo::rollapply(`4. close`, width = 90, FUN = mean, fill = NA, align = \"right\")\n  ) %&gt;%\n  # Downsample data (keep every 5th row for faster plotting)\n  slice(seq(1, n(), by = 5))\n\n# Plot Closing Prices with Moving Averages\nggplot(sp500_data_clean, aes(x = Date)) +\n  geom_line(aes(y = `4. close`, color = \"Closing Price\"), size = 0.5) +\n  geom_line(aes(y = ma_30, color = \"30-Day Moving Avg\"), size = 0.5) +\n  geom_line(aes(y = ma_90, color = \"90-Day Moving Avg\"), size = 0.5) +\n  labs(\n    title = \"S&P 500 Closing Prices with Moving Averages\",\n    x = \"Date\",\n    y = \"Price ($)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 18 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n# Parse FRED Data\ngdp_data &lt;- fred_data[[\"observations\"]] %&gt;%\n  tibble::as_tibble() %&gt;%\n  mutate(\n    date = as.Date(date),             # Convert 'date' column to Date format\n    value = value         # Convert 'value' column to numeric (invalid values become NA)\n  )"
  },
  {
    "objectID": "mp06.html#visualizations",
    "href": "mp06.html#visualizations",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "Visualizations",
    "text": "Visualizations\n\nggplot(sp500_data_clean, aes(x = Date, y = `4. close`)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Closing Prices\",\n    x = \"Date\",\n    y = \"Closing Price ($)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nstr(fred_data)\n\nList of 13\n $ realtime_start   : chr \"2024-12-11\"\n $ realtime_end     : chr \"2024-12-11\"\n $ observation_start: chr \"1600-01-01\"\n $ observation_end  : chr \"9999-12-31\"\n $ units            : chr \"lin\"\n $ output_type      : int 1\n $ file_type        : chr \"json\"\n $ order_by         : chr \"observation_date\"\n $ sort_order       : chr \"asc\"\n $ count            : int 315\n $ offset           : int 0\n $ limit            : int 100000\n $ observations     :'data.frame':  315 obs. of  4 variables:\n  ..$ realtime_start: chr [1:315] \"2024-12-11\" \"2024-12-11\" \"2024-12-11\" \"2024-12-11\" ...\n  ..$ realtime_end  : chr [1:315] \"2024-12-11\" \"2024-12-11\" \"2024-12-11\" \"2024-12-11\" ...\n  ..$ date          : chr [1:315] \"1946-01-01\" \"1946-04-01\" \"1946-07-01\" \"1946-10-01\" ...\n  ..$ value         : chr [1:315] \".\" \".\" \".\" \".\" ...\n\n\n\nlibrary(tidyverse)\n\n# Extract and clean the observations\ngdp_data_clean &lt;- fred_data$observations %&gt;%\n  mutate(\n    date = as.Date(date),           # Convert date to Date format\n    value = as.numeric(value)       # Convert value to numeric, invalid entries become NA\n  ) %&gt;%\n  filter(!is.na(value))             # Remove rows with NA in the value column\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Inspect the cleaned data\nhead(gdp_data_clean)\n\n  realtime_start realtime_end       date   value\n1     2024-12-11   2024-12-11 1947-01-01 243.164\n2     2024-12-11   2024-12-11 1947-04-01 245.968\n3     2024-12-11   2024-12-11 1947-07-01 249.585\n4     2024-12-11   2024-12-11 1947-10-01 259.745\n5     2024-12-11   2024-12-11 1948-01-01 265.742\n6     2024-12-11   2024-12-11 1948-04-01 272.567\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  labs(\n    title = \"GDP Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(gdp_data_clean, aes(x = date, y = value)) +\n  geom_line(color = \"green\") +\n  geom_smooth(method = \"loess\", color = \"blue\", se = FALSE) +\n  labs(\n    title = \"GDP Trend Over Time\",\n    x = \"Date\",\n    y = \"GDP (Billions of Dollars)\"\n  ) +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\ngdp_yoy &lt;- gdp_data_clean %&gt;%\n  mutate(year = lubridate::year(date)) %&gt;% # Extract year from date\n  group_by(year) %&gt;%\n  summarize(avg_gdp = mean(value, na.rm = TRUE)) %&gt;%\n  mutate(\n    yoy_growth = (avg_gdp - lag(avg_gdp)) / lag(avg_gdp) * 100 # YoY growth\n  )\n\n# Inspect the YoY Growth Data\nhead(gdp_yoy)\n\n# A tibble: 6 × 3\n   year avg_gdp yoy_growth\n  &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n1  1947    250.     NA    \n2  1948    274.      9.96 \n3  1949    272.     -0.726\n4  1950    300.     10.0  \n5  1951    347.     15.7  \n6  1952    367.      5.89 \n\n\n\nggplot(gdp_yoy, aes(x = year, y = yoy_growth)) +\n  geom_col(fill = \"purple\") +\n  labs(\n    title = \"Year-over-Year GDP Growth\",\n    x = \"Year\",\n    y = \"YoY Growth (%)\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\n\n\n\n\nwage_data &lt;- data.frame(\n  date = c(\"2001-01-01\", \"2001-04-01\", \"2001-07-01\", \"2001-10-01\", \"2002-01-01\", \"2002-04-01\"),\n  value = c(\"87.6\", \"88.4\", \"89.2\", \"90.0\", \"90.7\", \"91.6\")\n)\n\n\n# Process wage growth data\nlibrary(dplyr)\nlibrary(tidyr)\n\nwage_df &lt;- wage_data %&gt;%\n  select(date, value) %&gt;%  # Select only the relevant columns\n  mutate(\n    value = ifelse(value == \".\", NA, as.numeric(value)),  # Replace \".\" with NA and convert to numeric\n    date = as.Date(date)  # Ensure date is in Date format\n  ) %&gt;%\n  drop_na(value)  # Remove rows where value is NA\n\n# Print the first few rows to confirm\nhead(wage_df)\n\n        date value\n1 2001-01-01  87.6\n2 2001-04-01  88.4\n3 2001-07-01  89.2\n4 2001-10-01  90.0\n5 2002-01-01  90.7\n6 2002-04-01  91.6\n\n# Interpolate data to monthly frequency if needed\nwage_df_monthly &lt;- wage_df %&gt;%\n  complete(date = seq.Date(min(date), max(date), by = \"month\")) %&gt;%  # Fill missing months\n  fill(value, .direction = \"down\")  # Fill missing values by carrying forward\n\n\nlibrary(ggplot2)\n\n# Plot the wage growth data\nggplot(wage_df_monthly, aes(x = date, y = value)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"Wage Growth Over Time\",\n    x = \"Date\",\n    y = \"Wage Index Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nAlphaVantage: Fetch U.S. Equities Data\n\n# Example for fetching S&P 500 monthly adjusted close prices\nalpha_url &lt;- \"https://www.alphavantage.co/query\"\nparams &lt;- list(\n  `function` = \"TIME_SERIES_MONTHLY_ADJUSTED\",\n  symbol = \"SPY\",\n  apikey = alpha_key\n)\nresponse &lt;- httr::GET(alpha_url, query = params)\n\n# Parse the content\nalpha_data &lt;- httr::content(response, as = \"parsed\", simplifyVector = TRUE)\n\n# Extract and process data\nlibrary(dplyr)\nmonthly_data &lt;- alpha_data[[\"Monthly Adjusted Time Series\"]]\nus_equity_df &lt;- data.frame(\n  date = as.Date(names(monthly_data)),\n  adjusted_close = as.numeric(sapply(monthly_data, function(x) x[[\"5. adjusted close\"]]))\n)\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close\n1 2024-12-10       602.8000\n2 2024-11-29       602.5500\n3 2024-10-31       568.6400\n4 2024-09-30       573.7600\n5 2024-08-30       561.9538\n6 2024-07-31       549.1232\n\n\n\n\nVisualizing the S&P 500 Adjusted Close Prices\n\nlibrary(ggplot2)\n\n# Plot the S&P 500 adjusted close prices\nggplot(us_equity_df, aes(x = date, y = adjusted_close)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Adjusted Close Prices\",\n    x = \"Date\",\n    y = \"Adjusted Close Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  arrange(date) %&gt;%  # Ensure data is sorted by date\n  mutate(\n    monthly_return = adjusted_close / lag(adjusted_close) - 1  # Calculate monthly returns\n  )\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 1999-12-31        93.8436             NA\n2 2000-01-31        89.1714    -0.04978709\n3 2000-02-29        87.8136    -0.01522686\n4 2000-03-31        96.3223     0.09689501\n5 2000-04-28        92.9394    -0.03512063\n6 2000-05-31        91.4782    -0.01572207\n\n\n\nus_equity_df &lt;- us_equity_df %&gt;%\n  drop_na(monthly_return)  # Remove rows with NA in the 'monthly_return' column\n\n# Print the first few rows to confirm\nhead(us_equity_df)\n\n        date adjusted_close monthly_return\n1 2000-01-31        89.1714    -0.04978709\n2 2000-02-29        87.8136    -0.01522686\n3 2000-03-31        96.3223     0.09689501\n4 2000-04-28        92.9394    -0.03512063\n5 2000-05-31        91.4782    -0.01572207\n6 2000-06-30        93.2807     0.01970415\n\n\nVisualize Monthly Returns\n\n# Plot monthly returns over time\nggplot(us_equity_df, aes(x = date, y = monthly_return)) +\n  geom_line(color = \"blue\") +\n  labs(\n    title = \"S&P 500 Monthly Returns\",\n    x = \"Date\",\n    y = \"Monthly Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nStatistical Summary of Returns\n\n# Summary statistics for monthly returns\nsummary_stats &lt;- us_equity_df %&gt;%\n  summarise(\n    mean_return = mean(monthly_return, na.rm = TRUE),\n    sd_return = sd(monthly_return, na.rm = TRUE),\n    min_return = min(monthly_return, na.rm = TRUE),\n    max_return = max(monthly_return, na.rm = TRUE)\n  )\n\n# Print the summary statistics\nprint(summary_stats)\n\n  mean_return  sd_return min_return max_return\n1 0.007198234 0.04411053 -0.1651874  0.1269836"
  },
  {
    "objectID": "mp06.html#monte-carlo-stimulation",
    "href": "mp06.html#monte-carlo-stimulation",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "Monte Carlo Stimulation",
    "text": "Monte Carlo Stimulation\n\n# Monte Carlo Simulation of Monthly Returns\nset.seed(123)  # For reproducibility\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- 12  # Number of months\n\nsimulated_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = summary_stats$mean_return, sd = summary_stats$sd_return),\n  ncol = n_sim\n)\n\n# Convert to cumulative return paths\nsimulated_cum_returns &lt;- apply(simulated_returns, 2, function(x) cumprod(1 + x) - 1)\n\n# Convert to a data frame for plotting\nlibrary(tidyr)\nsimulated_cum_df &lt;- data.frame(month = 1:n_months, simulated_cum_returns) %&gt;%\n  pivot_longer(-month, names_to = \"simulation\", values_to = \"cumulative_return\")\n\n# Plot the Monte Carlo simulation results\nlibrary(ggplot2)\nggplot(simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation)) +\n  geom_line(alpha = 0.1, color = \"blue\") +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nSummary Statistics for the Simulations\n\n# Calculate summary statistics at the final month\nfinal_month_stats &lt;- simulated_cum_df %&gt;%\n  filter(month == n_months) %&gt;%\n  summarise(\n    mean_return = mean(cumulative_return),\n    median_return = median(cumulative_return),\n    sd_return = sd(cumulative_return),\n    min_return = min(cumulative_return),\n    max_return = max(cumulative_return),\n    prob_positive = mean(cumulative_return &gt; 0)  # Probability of positive returns\n  )\n\n# Print the summary statistics\nprint(final_month_stats)\n\n# A tibble: 1 × 6\n  mean_return median_return sd_return min_return max_return prob_positive\n        &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n1      0.0905        0.0817     0.160     -0.312      0.668         0.703\n\n\n\n\nOverlay Key Metrics on the Plot\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nsummary_lines &lt;- simulated_cum_df %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    mean_cumulative = mean(cumulative_return),\n    median_cumulative = median(cumulative_return)\n  ) %&gt;%\n  pivot_longer(cols = c(mean_cumulative, median_cumulative),\n               names_to = \"Statistic\",\n               values_to = \"cumulative_return\")\n\n# Add mean and median lines to the plot with a legend\nlibrary(ggplot2)\n\nggplot() +\n  geom_line(data = simulated_cum_df, aes(x = month, y = cumulative_return, group = simulation),\n            alpha = 0.1, color = \"blue\") +\n  geom_line(data = summary_lines, aes(x = month, y = cumulative_return, color = Statistic),\n            size = 1) +\n  labs(\n    title = \"Monte Carlo Simulations of S&P 500 Monthly Returns\",\n    x = \"Month\",\n    y = \"Cumulative Return\",\n    color = \"Key Metrics\"\n  ) +\n  theme_minimal() +\n  scale_color_manual(\n    values = c(\"mean_cumulative\" = \"red\", \"median_cumulative\" = \"green\"),\n    labels = c(\"Mean\", \"Median\")\n  )\n\n\n\n\n\n\n\n\n\n\nStep 1: Combine Wage Growth and Simulated Returns\n\n# Ensure columns are in Date format\nwage_df_aligned &lt;- wage_df_monthly %&gt;%\n  filter(date &gt;= min(simulated_cum_df$month) & date &lt;= max(simulated_cum_df$month)) %&gt;%\n  mutate(date = as.Date(date))  # Ensure 'date' is in Date format\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = as.Date(month))  # Ensure 'month' is in Date format\n\n\n# Debugging filter outputs\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  \n\n# A tibble: 1,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-13 X1                   0.196  \n 2 1970-01-13 X2                  -0.0354 \n 3 1970-01-13 X3                   0.189  \n 4 1970-01-13 X4                   0.0339 \n 5 1970-01-13 X5                   0.229  \n 6 1970-01-13 X6                   0.00409\n 7 1970-01-13 X7                   0.0765 \n 8 1970-01-13 X8                   0.312  \n 9 1970-01-13 X9                  -0.0157 \n10 1970-01-13 X10                 -0.0378 \n# ℹ 990 more rows\n\n\n\n# Align dates to the first day of the month\nwage_df_aligned &lt;- wage_df_aligned %&gt;%\n  mutate(date = floor_date(date, unit = \"month\"))\n\nsimulated_cum_df &lt;- simulated_cum_df %&gt;%\n  mutate(month = floor_date(month, unit = \"month\"))\n\nprint(head(wage_df_aligned))  # Check aligned wage data\n\n# A tibble: 0 × 2\n# ℹ 2 variables: date &lt;date&gt;, value &lt;dbl&gt;\n\nprint(filter(simulated_cum_df, month == max(simulated_cum_df$month)))  # Check filtered simulations\n\n# A tibble: 12,000 × 3\n   month      simulation cumulative_return\n   &lt;date&gt;     &lt;chr&gt;                  &lt;dbl&gt;\n 1 1970-01-01 X1                  -0.0175 \n 2 1970-01-01 X2                   0.0249 \n 3 1970-01-01 X3                  -0.0204 \n 4 1970-01-01 X4                   0.0316 \n 5 1970-01-01 X5                   0.0416 \n 6 1970-01-01 X6                   0.0239 \n 7 1970-01-01 X7                   0.0516 \n 8 1970-01-01 X8                  -0.00253\n 9 1970-01-01 X9                   0.104  \n10 1970-01-01 X10                 -0.00957\n# ℹ 11,990 more rows\n\n\n\n# Regenerate simulation data to align with wage_df_monthly\nn_sim &lt;- 1000  # Number of simulations\nn_months &lt;- nrow(wage_df_monthly)  # Match the number of months in wage_df_monthly\nsimulated_cum_returns &lt;- matrix(\n  rnorm(n_sim * n_months, mean = 0.007, sd = 0.04),  # Use realistic mean and SD\n  ncol = n_sim\n)\n\n# Create a data frame with simulated cumulative returns\nsimulated_cum_df &lt;- data.frame(\n  month = rep(wage_df_monthly$date, each = n_sim),\n  simulation = rep(paste0(\"X\", 1:n_sim), times = n_months),\n  cumulative_return = as.vector(simulated_cum_returns)\n)\n\n\n# Merge wage growth data with cumulative returns\ncombined_data &lt;- merge(\n  wage_df_monthly,\n  simulated_cum_df %&gt;%\n    rename(simulation_id = simulation),\n  by.x = \"date\",\n  by.y = \"month\"\n)\n\n# Inspect combined data\nprint(head(combined_data))\n\n        date value simulation_id cumulative_return\n1 2001-01-01  87.6            X1      0.0009748016\n2 2001-01-01  87.6            X2      0.0390376223\n3 2001-01-01  87.6            X3     -0.0404687139\n4 2001-01-01  87.6            X4      0.0242254545\n5 2001-01-01  87.6            X5      0.0156698838\n6 2001-01-01  87.6            X6      0.0454516938\n\n\n\n\nCalculate Contributions and Portfolio Growth\n\n# Parameters for simulation\ncontribution_rate &lt;- 0.1  # 10% of salary\nstarting_salary &lt;- 50000  # Example starting salary in dollars\n\n# Calculate contributions and portfolio value\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)),  # Adjust salary based on wage growth\n    contribution = monthly_salary * contribution_rate,  # Monthly contributions\n    portfolio_value = contribution * (1 + cumulative_return)  # Portfolio value after investment growth\n  )\n\n# Summarize the portfolio growth for each simulation\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value)\n  )\n\n# Inspect the summary\nprint(head(portfolio_summary))\n\n# A tibble: 6 × 2\n  simulation_id final_portfolio_value\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 X1                           80529.\n2 X10                          82803.\n3 X100                         82632.\n4 X1000                        81777.\n5 X101                         81882.\n6 X102                         83201.\n\n\n\n\nVisualize Portfolio Value Distribution\n\nlibrary(ggplot2)\n\n# Plot the distribution of final portfolio values\nggplot(portfolio_summary, aes(x = final_portfolio_value)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Final Portfolio Values\",\n    x = \"Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nCalculate Probability of Achieving Financial Goals\n\n# Probability of achieving a $1M goal\ngoal &lt;- 1000000  # $1M goal\nprobability_of_success &lt;- mean(portfolio_summary$final_portfolio_value &gt;= goal)\n\n# Print the result\nprint(paste(\"Probability of achieving a portfolio value of $1M: \", \n            round(probability_of_success * 100, 2), \"%\"))\n\n[1] \"Probability of achieving a portfolio value of $1M:  0 %\"\n\n\n\n\nFurther Enhancements\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(\n    monthly_salary = starting_salary * (value / first(value)) * (1 + cumulative_return),\n    contribution = monthly_salary * (contribution_rate + rnorm(1, 0, 0.01))  # Add random variability\n  )\n\n\nportfolio_summary &lt;- combined_data %&gt;%\n  group_by(simulation_id) %&gt;%\n  summarise(\n    final_portfolio_value = sum(portfolio_value, na.rm = TRUE)\n  )\n\nwithdrawal_rate &lt;- 0.04  # 4% annual withdrawal rate\nportfolio_summary &lt;- portfolio_summary %&gt;%\n  mutate(retirement_portfolio = final_portfolio_value * (1 - withdrawal_rate))\n\n\n\nVisualize Post-Retirement Portfolio\n\n# Plot the distribution of retirement portfolio values\nggplot(portfolio_summary, aes(x = retirement_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Post-Retirement Portfolio Values\",\n    x = \"Retirement Portfolio Value ($)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nBootstrap Sampling\n\n# Number of bootstrap simulations\nn_bootstrap &lt;- 200\n\n# While Working: Bootstrap Wage Growth\nworking_histories &lt;- replicate(\n  n_bootstrap,\n  sample(combined_data$value, size = nrow(combined_data), replace = TRUE),\n  simplify = FALSE\n)\n\n# While Retired: Bootstrap Investment Returns\nretired_histories &lt;- replicate(\n  n_bootstrap,\n  sample(simulated_cum_df$cumulative_return, size = nrow(simulated_cum_df), replace = TRUE),\n  simplify = FALSE\n)\n\n\n\nCalculation\n\n# Define withdrawal rate\nwithdrawal_rate &lt;- 0.04\n\n# Simulate bootstrap histories\nbootstrap_results &lt;- lapply(seq_len(n_bootstrap), function(i) {\n  # Simulate while working\n  wage_growth &lt;- working_histories[[i]]\n  cumulative_contributions &lt;- cumsum(starting_salary * contribution_rate * wage_growth / first(wage_growth))\n  \n  # Simulate while retired\n  returns &lt;- retired_histories[[i]]\n  retirement_portfolio &lt;- numeric(length(returns))\n  retirement_portfolio[1] &lt;- tail(cumulative_contributions, 1)  # Starting portfolio value\n  \n  for (t in 2:length(returns)) {\n    retirement_portfolio[t] &lt;- retirement_portfolio[t - 1] * (1 + returns[t]) - (retirement_portfolio[t - 1] * withdrawal_rate)\n    if (retirement_portfolio[t] &lt; 0) {\n      retirement_portfolio[t] &lt;- 0  # Ensure portfolio doesn't go negative\n      break\n    }\n  }\n  \n  # Return results\n  list(\n    working = cumulative_contributions,\n    retired = retirement_portfolio\n  )\n})\n\n\n\nAnalysis\n\n# Analyze bootstrap results\nbootstrap_analysis &lt;- do.call(rbind, lapply(bootstrap_results, function(res) {\n  data.frame(\n    max_contribution = max(res$working),\n    max_portfolio = max(res$retired, na.rm = TRUE),\n    exhausted = any(res$retired == 0)\n  )\n}))\n\n# Probability of exhausting savings\nprob_exhausted &lt;- mean(bootstrap_analysis$exhausted)\n\n# Summary statistics\nsummary_stats &lt;- bootstrap_analysis %&gt;%\n  summarise(\n    mean_contribution = mean(max_contribution),\n    mean_portfolio = mean(max_portfolio),\n    prob_exhausted = mean(exhausted)\n  )\nprint(summary_stats)\n\n  mean_contribution mean_portfolio prob_exhausted\n1          80108560       80861697              0\n\n\n\n\nVisualize Results\n\nggplot(bootstrap_analysis, aes(x = exhausted)) +\n  geom_bar(fill = \"red\", alpha = 0.7) +\n  labs(title = \"Probability of Portfolio Exhaustion\", x = \"Exhausted Savings\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nggplot(bootstrap_analysis, aes(x = max_portfolio)) +\n  geom_histogram(binwidth = 10000, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Retirement Portfolio Values\", x = \"Portfolio Value ($)\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nBased on the visualizations:\n\nProbability of Exhausting Savings:\n\nThe first chart shows 0 occurrences of exhausted savings (all FALSE for exhausted), suggesting that with the assumptions and bootstrap histories used, none of the retirement scenarios result in portfolio depletion.\n\nDistribution of Portfolio Values:\n\nThe second chart indicates some issue with the histogram visualization:\n\nThe x-axis shows extremely high portfolio values (e.g., 1.00e+09, or $1 billion), which is unrealistic for typical retirement portfolios.\nThe histogram bars appear scattered, possibly due to incorrect scaling or extreme values in the data.\n\n\n\n\n\nRecommendations\nBased on the simulations, here are the recommendations:\n\nIf the Employee Prefers Stability:\nThe TRS plan is more suitable for employees who prioritize income stability during retirement. It provides:\n\nPredictable monthly payments.\nProtection against market volatility.\n\n\n\nIf the Employee Prefers Flexibility and Growth Potential:\nThe ORP plan offers greater flexibility and potentially higher returns. However, the employee must:\n\nBe comfortable with market risk.\nConsider reducing withdrawal rates (e.g., 3% instead of 4%) to mitigate the risk of exhausting savings.\n\n\n\n\nConsiderations for the Employee\n\nAge and Career Duration:\n\nYounger employees with longer career horizons may benefit from ORP’s growth potential.\nEmployees nearing retirement may prefer the stability of TRS.\n\nStarting Salary:\n\nHigher salaries favor ORP for greater investment contributions.\nLower salaries may make TRS more attractive for guaranteed income.\n\nRisk Tolerance:\n\nTRS suits risk-averse individuals.\nORP suits those willing to accept variability for potential upside.\n\nInflation and Long-Term Sustainability:\n\nTRS benefits may not keep pace with inflation over a long retirement.\nORP portfolios, if managed well, can outpace inflation but require discipline in withdrawals.\n\n\n\n\n\nLimitations and Uncertainty\n\nBootstrap Sampling:\n\nHistorical data used in simulations may not reflect future economic conditions.\nBootstrap methods assume past trends are indicative of future outcomes.\n\nSimplified Assumptions:\n\nFixed withdrawal rates and contribution percentages may not reflect real-life variability.\nEmployee preferences and external factors (e.g., tax changes) were not modeled.\n\nMarket Risks:\n\nSimulations cannot predict black swan events (e.g., 2008 financial crisis).\n\n\n\n\nConclusion\nThe choice between TRS and ORP depends on the employee’s individual priorities and circumstances. For those seeking stability and simplicity, TRS is a safer option. For those aiming to maximize retirement wealth and are comfortable with risk, ORP can offer higher potential returns, provided they follow a disciplined withdrawal strategy.\nFinal Recommendation: Align the decision with personal goals, risk tolerance, and financial needs. Regularly review and adjust the chosen plan as circumstances evolve."
  },
  {
    "objectID": "mp06.html#introduction",
    "href": "mp06.html#introduction",
    "title": "Monte Carlo-Informed Selection of CUNY Retirement Plans",
    "section": "",
    "text": "Retirement planning is one of the most critical financial decisions for employees, as it directly impacts their long-term financial security. This project aims to analyze and compare two retirement plans offered by CUNY: the Teachers’ Retirement System (TRS) and the Optional Retirement Program (ORP). Using Monte Carlo simulations, bootstrap sampling, and financial modeling, this report evaluates the potential outcomes of each plan under various economic scenarios.\nThe analysis leverages historical market returns, wage growth trends, and inflation data, sourced through APIs such as AlphaVantage and FRED. Key metrics like portfolio growth, probability of exhausting savings, and long-term sustainability are assessed to provide data-driven insights. By combining statistical rigor and financial modeling, this study offers actionable recommendations tailored to individual risk tolerance, career trajectory, and retirement goals."
  }
]